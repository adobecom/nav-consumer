{"version":3,"file":"static/js/1978.714de101.chunk.js","mappings":"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","sources":["../node_modules/@adobecom/blocks/global-navigation/utilities/keyboard/localNav.js"],"sourcesContent":["import { selectors, getNextVisibleItemPosition, getPreviousVisibleItemPosition } from './utils.js';\nimport { trigger } from '../utilities.js';\n\nconst focusables = (root) => [...root.querySelectorAll('a[href],button:not([disabled])')];\n\nconst nestedFocusables = (root) => [...root.querySelectorAll('a, button, .feds-menu-headline')].filter((el) => {\n  const items = el.closest('.feds-menu-items');\n  const headline = items?.previousElementSibling;\n  return !items || headline?.getAttribute('aria-expanded') === 'true';\n});\n\nfunction getNavList() {\n  return [...document.querySelector('.feds-localnav-items').children].flatMap((item) => {\n    const triggerBtn = item.querySelector('a, button, .feds-menu-headline');\n    if (!triggerBtn || !triggerBtn.matches('[aria-haspopup=\"true\"][aria-expanded=\"true\"]')) return triggerBtn ? [triggerBtn] : [];\n\n    const popup = item.querySelector('.feds-popup');\n    if (!popup) return [triggerBtn];\n\n    const hasHeadline = item.querySelector('.feds-menu-items');\n    const dropdown = hasHeadline\n      ? nestedFocusables(popup)\n      : focusables(popup);\n\n    return [triggerBtn, ...dropdown];\n  });\n}\n\nfunction getState() {\n  const items = [...document.querySelectorAll(selectors.localNavItems)];\n  const openTrigger = document.querySelector(selectors.expandedPopupTrigger);\n  const currentEl = document.activeElement\n    .closest(selectors.localNavItem)?.querySelector(selectors.localNavItems);\n  const curr = items.indexOf(currentEl);\n  return {\n    items,\n    curr,\n    prev: getPreviousVisibleItemPosition(curr, items),\n    next: getNextVisibleItemPosition(curr, items),\n    openTrigger,\n  };\n}\n\nfunction open({ triggerEl, e } = {}) {\n  const { items, curr } = getState();\n  const el = triggerEl || items[curr];\n  if (!el?.hasAttribute('aria-haspopup')) return;\n  if (e) e.preventDefault();\n  if (el.getAttribute('aria-expanded') === 'false') {\n    const isHeader = el.classList.contains('feds-localnav-title') || el.classList.contains('feds-menu-headline');\n    if (isHeader) document.querySelector(selectors.localNav).classList.add('feds-localnav--active');\n    trigger({ element: el, type: isHeader ? 'headline' : 'localNavItem' });\n  }\n}\n\nfunction navigate(current, dir) {\n  const items = getNavList();\n  const currIdx = items.indexOf(current);\n  const isHeader = current.classList.contains('feds-localnav-title');\n  const titleBtn = document.querySelector(`${selectors.localNav} > button`);\n  if (currIdx === -1 && !isHeader) return;\n  if (isHeader && dir === 1) open({ triggerEl: current });\n  // If item is first or last move next focus to header\n  if ((dir === 1 && current === items.at(-1)) || (dir === -1 && current === items.at(0))) {\n    titleBtn?.focus();\n    return;\n  }\n  // if Arrow up on header element focus to its last item\n  if (dir === -1 && isHeader) {\n    items.at(-1)?.focus();\n    return;\n  }\n  const next = items[(currIdx + dir + items.length) % items.length];\n  next.focus();\n\n  if (next.matches('[aria-haspopup=\"true\"]')) {\n    const collapsed = next.matches('[aria-expanded=\"false\"]');\n    open({ triggerEl: next });\n    // Focus on last item of the dropdown if arrow up\n    if (dir === -1 && collapsed) {\n      const hasHeadline = next.parentElement.querySelector('.feds-menu-items');\n      const dropdownItems = hasHeadline ? nestedFocusables(next.parentElement) : focusables(next.parentElement.querySelector('.feds-popup'));\n      dropdownItems.at(-1)?.focus();\n    }\n  }\n}\n\nclass LocalNavItem {\n  constructor() {\n    this.localNav = document.querySelector(selectors.localNav);\n    this.localNavTrigger = this.localNav?.querySelector(selectors.localNavTitle);\n    this.exitLink = this.localNav?.querySelector(selectors.localNavExit);\n    this.addEventListeners();\n  }\n\n  handleKeyDown = (e) => {\n    const { code, target } = e;\n    const isHeadline = target.classList.contains(selectors.headline.slice(1));\n    switch (code) {\n      case 'Space':\n      case 'Enter':\n        e.stopPropagation();\n        e.preventDefault();\n        if (isHeadline) {\n          trigger({ element: target, event: e, type: 'headline' });\n        } else {\n          e.target.click();\n        }\n        break;\n      case 'Escape': // close on escape\n        e.preventDefault();\n        if (this.localNav.classList.contains(selectors.localNavActive.slice(1))) {\n          this.localNavTrigger?.click();\n          this.localNavTrigger?.focus();\n        }\n        break;\n      case 'ArrowDown':\n      case 'ArrowUp': {\n        e.stopPropagation();\n        e.preventDefault();\n        const dir = code === 'ArrowDown' ? +1 : -1;\n        navigate(target, dir);\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  addEventListeners = () => {\n    this.localNav?.addEventListener('keydown', this.handleKeyDown);\n    this.exitLink?.addEventListener('focus', (e) => {\n      e.preventDefault();\n      this.localNavTrigger?.focus();\n    });\n  };\n}\n\nexport default LocalNavItem;\n"],"names":["focusables","root","querySelectorAll","nestedFocusables","filter","el","items","closest","headline","previousElementSibling","getAttribute","open","triggerEl","e","arguments","length","undefined","curr","_document$activeEleme","document","selectors","localNavItems","openTrigger","querySelector","expandedPopupTrigger","currentEl","activeElement","localNavItem","indexOf","prev","getPreviousVisibleItemPosition","next","getNextVisibleItemPosition","getState","hasAttribute","preventDefault","isHeader","classList","contains","localNav","add","trigger","element","type","navigate","current","dir","children","flatMap","item","triggerBtn","matches","popup","currIdx","titleBtn","concat","at","focus","_items$at","collapsed","_dropdownItems$at","parentElement","localNav_default","constructor","_this$localNav2","_this$localNav3","_defineProperty","code","target","isHeadline","slice","stopPropagation","event","click","_this$localNavTrigger","_this$localNavTrigger2","this","localNavActive","localNavTrigger","_this$localNav","_this$exitLink","addEventListener","handleKeyDown","exitLink","_this$localNavTrigger3","localNavTitle","localNavExit","addEventListeners"],"sourceRoot":""}