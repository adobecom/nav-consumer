{"version":3,"file":"static/js/8087.fa68df9c.chunk.js","mappings":"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","sources":["../node_modules/@adobecom/martech/helpers.js"],"sourcesContent":["/**\n * Generates a random UUIDv4 using cryptographically secure random values.\n * This implementation follows the RFC 4122 specification for UUIDv4.\n * It uses the `crypto` API for secure randomness without any bitwise operators.\n *\n * @returns {string} A random UUIDv4 string, e.g., 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\n * where:\n *  - 'x' is any hexadecimal digit (0-9, a-f)\n *  - 'y' is one of 8, 9, A, or B, ensuring that the UUID conforms to version 4.\n *\n * @example\n * const myUuid = generateUUIDv4();\n * console.log(myUuid);  // Outputs: 'e8b57e2f-8cb1-4d0f-804b-e1a45bce2d90'\n */\nfunction generateUUIDv4() {\n  // Generate an array of 16 random values using the crypto API for better randomness\n  const randomValues = new Uint8Array(16);\n  crypto.getRandomValues(randomValues);\n\n  // Set the version (4) at the 13th position\n  randomValues[6] = (randomValues[6] % 16) + 64; // '4' for version 4\n  // Set the variant (8, 9, A, or B) at the 17th position\n  randomValues[8] = (randomValues[8] % 16) + 128; // One of 8, 9, A, or B\n\n  // Accumulate the UUID string in a separate variable (to avoid modifying the parameter directly)\n  let uuid = '';\n\n  // Convert the random values to a UUID string (xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx)\n  randomValues.forEach((byte, index) => {\n    const hex = byte.toString(16).padStart(2, '0'); // Convert byte to hex\n    if (index === 4 || index === 6 || index === 8 || index === 10) {\n      uuid += '-'; // Add dashes at appropriate positions\n    }\n    uuid += hex;\n  });\n\n  return uuid;\n}\n\n/**\n * Determines the Adobe Target property value based on the page's region.\n *\n * @param {string} env - The environment (e.g., 'prod' for production, 'dev' for development).\n * @returns {string} Adobe Target property value.\n */\nfunction getTargetPropertyBasedOnPageRegion(env) {\n  const { pathname } = window.location;\n\n  if (env !== 'prod') return 'bc8dfa27-29cc-625c-22ea-f7ccebfc6231'; // Default for non-prod environments\n\n  // EMEA & LATAM\n  if (\n    pathname.search(\n      /(\\/africa\\/|\\/be_en\\/|\\/be_fr\\/|\\/be_nl\\/|\\/cis_en\\/|\\/cy_en\\/|\\/dk\\/|\\/de\\/|\\/ee\\/|\\/es\\/|\\/fr\\/|\\/gr_en\\/|\\/ie\\/|\\/il_en\\/|\\/it\\/|\\/lv\\/|\\/lu_de\\/|\\/lu_en\\/|\\/lu_fr\\/|\\/hu\\/|\\/mt\\/|\\/mena_en\\/|\\/nl\\/|\\/no\\/|\\/pl\\/|\\/pt\\/|\\/ro\\/|\\/ch_de\\/|\\/si\\/|\\/sk\\/|\\/ch_fr\\/|\\/fi\\/|\\/se\\/|\\/ch_it\\/|\\/tr\\/|\\/uk\\/|\\/at\\/|\\/cz\\/|\\/bg\\/|\\/ru\\/|\\/cis_ru\\/|\\/ua\\/|\\/il_he\\/|\\/mena_ar\\/|\\/lt\\/|\\/sa_en\\/|\\/ae_en\\/|\\/ae_ar\\/|\\/sa_ar\\/|\\/ng\\/|\\/za\\/|\\/qa_ar\\/|\\/eg_en\\/|\\/eg_ar\\/|\\/kw_ar\\/|\\/eg_ar\\/|\\/qa_en\\/|\\/kw_en\\/|\\/gr_el\\/|\\/br\\/|\\/cl\\/|\\/la\\/|\\/mx\\/|\\/co\\/|\\/ar\\/|\\/pe\\/|\\/gt\\/|\\/pr\\/|\\/ec\\/|\\/cr\\/)/,\n    ) !== -1\n  ) {\n    return '488edf5f-3cbe-f410-0953-8c0c5c323772';\n  }\n  if ( // APAC\n    pathname.search(\n      /(\\/au\\/|\\/hk_en\\/|\\/in\\/|\\/nz\\/|\\/sea\\/|\\/cn\\/|\\/hk_zh\\/|\\/tw\\/|\\/kr\\/|\\/sg\\/|\\/th_en\\/|\\/th_th\\/|\\/my_en\\/|\\/my_ms\\/|\\/ph_en\\/|\\/ph_fil\\/|\\/vn_en\\/|\\/vn_vi\\/|\\/in_hi\\/|\\/id_id\\/|\\/id_en\\/)/,\n    ) !== -1\n  ) {\n    return '3de509ee-bbc7-58a3-0851-600d1c2e2918';\n  }\n  // JP\n  if (pathname.indexOf('/jp/') !== -1) {\n    return 'ba5bc9e8-8fb4-037a-12c8-682384720007';\n  }\n\n  return 'bc8dfa27-29cc-625c-22ea-f7ccebfc6231'; // Default\n}\n\n/**\n * Retrieves device-related information such as screen and viewport dimensions.\n *\n * @returns {Object} Object containing device and viewport information.\n */\nfunction getDeviceInfo() {\n  return {\n    screenWidth: window.screen.width,\n    screenHeight: window.screen.height,\n    screenOrientation: window.innerWidth > window.innerHeight ? 'landscape' : 'portrait',\n    viewportWidth: window.innerWidth,\n    viewportHeight: window.innerHeight,\n  };\n}\n\n/**\n * Retrieves the value of a specific cookie by its key.\n *\n * @param {string} key - The cookie key.\n * @returns {string|null} The cookie value, or null if the cookie doesn't exist.\n */\nfunction getCookie(key, sendFullCookie) {\n  const cookie = document.cookie.split(';')\n    .map((x) => x.trim().split('='))\n    .find(([k]) => k === key);\n\n  if (sendFullCookie) {\n    return cookie;\n  }\n  return cookie ? cookie[1] : null;\n}\n\n/**\n * Sets a cookie with a specified expiration time (default 730 days).\n *\n * @param {string} key - The cookie key.\n * @param {string} value - The cookie value.\n * @param {Object} [options={}] - Optional settings for cookie properties.\n * Defaults to an expiration of 730 days.\n */\nfunction setCookie(key, value, options = {}) {\n  // Default expiration (24 months)\n  const expires = options.expires || 730;\n  const date = new Date();\n  date.setTime(date.getTime() + expires * 24 * 60 * 60 * 1000);\n  const expiresString = `expires=${date.toUTCString()}`;\n\n  document.cookie = `${key}=${value}; ${expiresString}; path=/`;\n}\n\n/**\n * Retrieves the ECID (Experience Cloud ID) from the browser's cookies or\n * generates a new FPID (First Party ID) if the ECID is not found. Returns\n * the ID in a structured object, depending on which ID is available.\n *\n * @returns {Object} An object containing either the ECID or FPID.\n *   - If ECID is found, the object will be:\n *     { ECID: [{ id: string, authenticatedState: string, primary: boolean }] }\n *   - If ECID is not found, the object will be:\n *     { FPID: [{ id: string, authenticatedState: string, primary: boolean }] }\n */\nfunction getOrGenerateUserId() {\n  const experienceCloudCookieName = 'AMCV_9E1005A551ED61CA0A490D45%40AdobeOrg';\n  const amcvCookieValue = getCookie(experienceCloudCookieName);\n\n  // If ECID is not found, generate and return FPID\n  if (!amcvCookieValue) {\n    const fpidValue = generateUUIDv4();\n    return {\n      FPID: [{\n        id: fpidValue,\n        authenticatedState: 'ambiguous',\n        primary: true,\n      }],\n    };\n  }\n\n  // ECID found, return structured ECID object\n  const extractedEcid = amcvCookieValue.substring(6); // Extract the ECID value from the cookie\n  return {\n    ECID: [{\n      id: extractedEcid,\n      authenticatedState: 'ambiguous',\n      primary: true,\n    }],\n  };\n}\n\n/**\n * Retrieves the page name for analytics, modified for the current locale.\n *\n * @param {Object} params - The parameters.\n * @param {Object} params.locale - The locale object containing\n * language/region info (e.g., { ietf: 'en-US', prefix: 'us' }).\n * @returns {string} The modified page name.\n */\nfunction getPageNameForAnalytics({ locale }) {\n  const { host, pathname } = new URL(window.location.href);\n  const [modifiedPath] = pathname.split('/').filter((x) => x !== locale.prefix).join(':').split('.');\n  return `${host.replace('www.', '')}:${modifiedPath}`;\n}\n\n/**\n * Creates the updated context for the request payload for analytics or personalization requests.\n *\n * @param {number} screenWidth - Screen width.\n * @param {number} screenHeight - Screen height.\n * @param {string} screenOrientation - Orientation of the screen.\n * @param {number} viewportWidth - Viewport width.\n * @param {number} viewportHeight - Viewport height.\n * @param {string} localTime - The local time in ISO format.\n * @param {number} timezoneOffset - The timezone offset.\n * @returns {Object} The updated context for the request payload.\n */\nfunction getUpdatedContext({\n  screenWidth, screenHeight, screenOrientation,\n  viewportWidth, viewportHeight, localTime, timezoneOffset,\n}) {\n  return {\n    device: {\n      screenHeight,\n      screenWidth,\n      screenOrientation,\n    },\n    environment: {\n      type: 'browser',\n      browserDetails: {\n        viewportWidth,\n        viewportHeight,\n      },\n    },\n    placeContext: {\n      localTime,\n      localTimezoneOffset: timezoneOffset,\n    },\n  };\n}\n\n/**\n * Retrieves specific MarTech cookies by their keys.\n *\n * @returns {Array<Object>} List of MarTech cookies with each\n * object containing 'key' and 'value' properties.\n */\nconst getMarctechCookies = () => {\n  const KNDCTR_COOKIE_KEYS = [\n    'kndctr_9E1005A551ED61CA0A490D45_AdobeOrg_identity',\n    'kndctr_9E1005A551ED61CA0A490D45_AdobeOrg_cluster',\n  ];\n  return document.cookie.split(';')\n    .map((x) => x.trim().split('='))\n    .filter(([key]) => KNDCTR_COOKIE_KEYS.includes(key))\n    .map(([key, value]) => ({ key, value }));\n};\n\n/**\n * Creates the request payload for Adobe Analytics and Target.\n *\n * @param {Object} params - Parameters required to create the payload.\n * @param {Object} params.updatedContext - The updated context for the request.\n * @param {string} params.pageName - The page name for the analytics request.\n * @param {Object} params.locale - The locale object containing language/region info.\n * @param {string} params.env - The environment (e.g., 'prod' for production).\n * @returns {Object} The request payload for Adobe Analytics and Target.\n */\nfunction createRequestPayload({ updatedContext, pageName, locale, env }) {\n  const prevPageName = getCookie('gpv');\n\n  const REPORT_SUITES_ID = env === 'prod' ? ['adbadobenonacdcprod'] : ['adbadobenonacdcqa'];\n  const AT_PROPERTY_VAL = getTargetPropertyBasedOnPageRegion(env);\n\n  return {\n    event: {\n      xdm: {\n        ...updatedContext,\n        identityMap: getOrGenerateUserId(),\n        web: {\n          webPageDetails: {\n            URL: window.location.href,\n            siteSection: 'www.adobe.com',\n            server: 'www.adobe.com',\n            isErrorPage: false,\n            isHomePage: false,\n            name: pageName,\n            pageViews: { value: 0 },\n          },\n          webInteraction: {\n            name: 'Martech-API',\n            type: 'other',\n            linkClicks: { value: 1 },\n          },\n          webReferrer: { URL: document.referrer },\n        },\n        timestamp: new Date().toISOString(),\n        eventType: 'decisioning.propositionFetch',\n      },\n      data: {\n        __adobe: {\n          target: {\n            is404: false, authState: 'loggedOut', hitType: 'propositionFetch', isMilo: true, adobeLocale: locale.ietf, hasGnav: true,\n          },\n        },\n        _adobe_corpnew: {\n          marketingtech: { adobe: { alloy: { approach: 'martech-API' } } },\n          digitalData: {\n            page: { pageInfo: { language: locale.ietf } },\n            diagnostic: { franklin: { implementation: 'milo' } },\n            previousPage: { pageInfo: { pageName: prevPageName } },\n            primaryUser: { primaryProfile: { profileInfo: { authState: 'loggedOut', returningStatus: 'Repeat' } } },\n          },\n        },\n      },\n    },\n    query: {\n      identity: { fetch: ['ECID'] },\n      personalization: {\n        schemas: [\n          'https://ns.adobe.com/personalization/default-content-item',\n          'https://ns.adobe.com/personalization/html-content-item',\n          'https://ns.adobe.com/personalization/json-content-item',\n          'https://ns.adobe.com/personalization/redirect-item',\n          'https://ns.adobe.com/personalization/dom-action',\n        ],\n        decisionScopes: ['__view__'],\n      },\n    },\n    meta: {\n      target: { migration: true },\n      configOverrides: {\n        com_adobe_analytics: { reportSuites: REPORT_SUITES_ID },\n        com_adobe_target: { propertyToken: AT_PROPERTY_VAL },\n      },\n      state: {\n        domain: 'localhost',\n        cookiesEnabled: true,\n        entries: getMarctechCookies(),\n      },\n    },\n  };\n}\n\n/**\n * Extracts the ECID (Experience Cloud ID) from the API response data.\n *\n * @param {Object} data - The response data from the API.\n * @returns {string|null} The ECID value, or null if not found.\n */\nfunction extractECID(data) {\n  return data.handle\n    .flatMap((item) => item.payload)\n    .find((p) => p.namespace?.code === 'ECID')?.id || null;\n}\n\n/**\n * Updates the AMCV cookie with the new ECID.\n *\n * @param {string} ECID - The Experience Cloud ID (ECID).\n */\nfunction updateAMCVCookie(ECID) {\n  const cookieName = 'AMCV_9E1005A551ED61CA0A490D45%40AdobeOrg';\n  const cookieValue = `MCMID|${ECID}`;\n\n  if (getCookie(cookieName) !== cookieValue) {\n    setCookie(cookieName, `MCMID|${ECID}`);\n  }\n}\n\n/**\n * Loads analytics and interaction data based on the user and page context.\n * Sends the data to Adobe Analytics and Adobe Target for personalization.\n *\n * @param {Object} params - The parameters for the function.\n * @param {Object} params.locale - The locale object containing language/region info.\n * @param {string} params.env - The environment (e.g., 'prod' for production).\n * @param {string} [params.calculatedTimeout] - timeout value for the request in milliseconds.\n *\n * @returns {Promise<Object>} A promise that resolves to the\n * personalization propositions fetched from Adobe Target.\n */\nexport const loadAnalyticsAndInteractionData = async ({ locale, env, calculatedTimeout }) => {\n  const value = getCookie('kndctr_9E1005A551ED61CA0A490D45_AdobeOrg_consent', true);\n  const isRejectedDecodedURI = value?.[2] === undefined && decodeURIComponent(value?.[1]) === 'general=out';\n  const isRejectedURI = value?.[1] === 'general' && value?.[2] === 'out';\n\n  if (isRejectedDecodedURI || isRejectedURI) {\n    return Promise.reject(new Error('Consent Cookie doesnt allow interact'));\n  }\n\n  // Define constants based on environment\n  const DATA_STREAM_ID = env === 'prod' ? '5856abb0-95d8-4f9a-bb92-37f99d2bd492' : '87f9b644-5fd3-4015-81d5-f68ad81c3561';\n  const TARGET_API_URL = 'https://edge.adobedc.net/ee/v2/interact';\n\n  // Device and viewport information\n  const {\n    screenWidth, screenHeight,\n    screenOrientation, viewportWidth, viewportHeight,\n  } = getDeviceInfo();\n\n  // Date and Time Constants\n  const CURRENT_DATE = new Date();\n  const LOCAL_TIME = CURRENT_DATE.toISOString();\n  const LOCAL_TIMEZONE_OFFSET = CURRENT_DATE.getTimezoneOffset();\n\n  const pageName = getPageNameForAnalytics({ locale });\n\n  const updatedContext = getUpdatedContext({\n    screenWidth,\n    screenHeight,\n    screenOrientation,\n    viewportWidth,\n    viewportHeight,\n    LOCAL_TIME,\n    LOCAL_TIMEZONE_OFFSET,\n  });\n\n  // Prepare the body for the request\n  const requestBody = createRequestPayload({\n    updatedContext,\n    pageName,\n    locale,\n    env,\n  });\n\n  try {\n    const targetResp = await Promise.race([\n      fetch(`${TARGET_API_URL}?dataStreamId=${DATA_STREAM_ID}&requestId=${generateUUIDv4()}`, {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n      }),\n      new Promise((_, reject) => { setTimeout(() => reject(new Error('Request timed out')), calculatedTimeout); }),\n    ]);\n\n    if (!targetResp.ok) {\n      throw new Error('Failed to fetch interact call');\n    }\n    const targetRespJson = await targetResp.json();\n    const ECID = extractECID(targetRespJson);\n\n    // Update the AMCV cookie with ECID\n    updateAMCVCookie(ECID);\n\n    // Resolve or reject based on propositions\n    const resultPayload = targetRespJson?.handle?.find((d) => d.type === 'personalization:decisions')?.payload;\n    if (resultPayload.length === 0) throw new Error('No propositions found');\n    return {\n      type: 'propositionFetch',\n      result: { propositions: resultPayload },\n    };\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\nexport default { loadAnalyticsAndInteractionData };\n"],"names":["generateUUIDv4","randomValues","Uint8Array","crypto","getRandomValues","uuid","forEach","byte","index","hex","toString","padStart","getCookie","key","sendFullCookie","cookie","document","split","map","x","trim","find","_ref","k","getOrGenerateUserId","amcvCookieValue","FPID","id","authenticatedState","primary","ECID","substring","getMarctechCookies","KNDCTR_COOKIE_KEYS","filter","_ref4","includes","_ref5","value","createRequestPayload","_ref6","updatedContext","pageName","locale","env","prevPageName","REPORT_SUITES_ID","AT_PROPERTY_VAL","pathname","window","location","search","indexOf","getTargetPropertyBasedOnPageRegion","event","xdm","identityMap","web","webPageDetails","URL","href","siteSection","server","isErrorPage","isHomePage","name","pageViews","webInteraction","type","linkClicks","webReferrer","referrer","timestamp","Date","toISOString","eventType","data","__adobe","target","is404","authState","hitType","isMilo","adobeLocale","ietf","hasGnav","_adobe_corpnew","marketingtech","adobe","alloy","approach","digitalData","page","pageInfo","language","diagnostic","franklin","implementation","previousPage","primaryUser","primaryProfile","profileInfo","returningStatus","query","identity","fetch","personalization","schemas","decisionScopes","meta","migration","configOverrides","com_adobe_analytics","reportSuites","com_adobe_target","propertyToken","state","domain","cookiesEnabled","entries","updateAMCVCookie","cookieName","cookieValue","concat","expires","arguments","length","undefined","date","setTime","getTime","expiresString","toUTCString","setCookie","loadAnalyticsAndInteractionData","async","calculatedTimeout","_ref7","isRejectedDecodedURI","decodeURIComponent","isRejectedURI","Promise","reject","Error","DATA_STREAM_ID","screenWidth","screenHeight","screenOrientation","viewportWidth","viewportHeight","screen","width","height","innerWidth","innerHeight","CURRENT_DATE","LOCAL_TIME","LOCAL_TIMEZONE_OFFSET","getTimezoneOffset","_ref2","host","modifiedPath","prefix","join","replace","getPageNameForAnalytics","_ref3","localTime","timezoneOffset","device","environment","browserDetails","placeContext","localTimezoneOffset","getUpdatedContext","requestBody","_targetRespJson$handl","targetResp","race","method","body","JSON","stringify","_","setTimeout","ok","targetRespJson","json","_data$handle$flatMap$","handle","flatMap","item","payload","p","_p$namespace","namespace","code","extractECID","resultPayload","d","result","propositions","err","helpers_default"],"sourceRoot":""}