{"version":3,"file":"static/js/6960.cc1480fc.chunk.js","mappings":"kJAsEe,SAARA,EAAgCC,EAAAC,GAAkC,IAA5B,UAAEC,EAAA,YAAWC,GAAYF,EACpE,MAAMG,EA1BR,SAAwBJ,EAAMG,GAC5B,OAAQH,GACN,IAAK,UACL,IAAK,cACH,OAjDN,SAAkCA,EAAMG,GACtC,MAAO,CACL,WAAY,qBACZ,QAASH,EACTK,SAAUF,EAAY,YACtBG,MAAOH,EAAY,YACnBI,YAAaJ,EAAY,eACzBK,cAAeL,EAAY,aAC3BM,aAAcN,EAAY,YAC1BO,OAAQ,CACN,QAAS,SACTC,KAAMR,EAAY,cAClBS,IAAKT,EAAY,cAGvB,CAkCaU,CAAyBb,EAAMG,GACxC,IAAK,gBACH,OAlCN,SAAwCA,GAEtC,MAAMW,EAAqB,qBACrBC,EAAA,GAAAC,OAAiBb,EAAY,cAAa,KAAAa,OAAIb,EAAY,yBAAwB,MAAAa,OAAKF,EAAkB,KAC/G,MAAO,CACL,WAAY,qBACZ,QAAS,UACTF,IAAKT,EAAY,OACjBc,gBAAiB,CAAC,CAChB,QAAS,eACTC,OAAQ,CACN,QAAS,aACTH,eAEF,+BAAAC,OAAgCF,KAGtC,CAiBaK,CAA+BhB,GACxC,IAAK,eACH,OAjBN,SAAkCA,GAChC,MAAO,CACL,WAAY,qBACZ,QAAS,eACTS,IAAKT,EAAY,UACjBiB,KAAMjB,EAAY,WAEtB,CAUakB,CAAyBlB,GAClC,QAGE,OADAmB,QAAQC,MAAA,QAAAP,OAAchB,EAAI,sBACnB,KAEb,CAYsBwB,CAAexB,EAAMG,IAV3C,SAAkBC,EAAaF,GAC7B,IAAKE,EACH,OAEF,MAAMqB,EAASvB,EAAU,SAAU,CAAEF,KAAM,uBAAyB0B,KAAKC,UAAUvB,IACnFwB,SAASC,KAAKC,OAAOL,EACvB,CAKEM,CAAS3B,EAAaF,EACxB,C","sources":["../node_modules/@adobecom/features/richresults.js"],"sourcesContent":["function getRichResultsForArticle(type, getMetadata) {\n  return {\n    '@context': 'https://schema.org',\n    '@type': type,\n    headLine: getMetadata('og:title'),\n    image: getMetadata('og:image'),\n    description: getMetadata('description'),\n    datePublished: getMetadata('published'),\n    dateModified: getMetadata('modified'),\n    author: {\n      '@type': 'Person',\n      name: getMetadata('authorname'),\n      url: getMetadata('authorurl'),\n    },\n  };\n}\n\nfunction getRichResultsForSiteSearchBox(getMetadata) {\n  // See specifications at https://developers.google.com/search/docs/appearance/structured-data/sitelinks-searchbox\n  const SEARCH_TERM_STRING = 'search_term_string';\n  const urlTemplate = `${getMetadata('search-url')}?${getMetadata('search-parameter-name')}={${SEARCH_TERM_STRING}}`;\n  return {\n    '@context': 'https://schema.org',\n    '@type': 'WebSite',\n    url: getMetadata('url'),\n    potentialAction: [{\n      '@type': 'SearchAction',\n      target: {\n        '@type': 'EntryPoint',\n        urlTemplate,\n      },\n      'query-input': `required name=${SEARCH_TERM_STRING}`,\n    }],\n  };\n}\n\nfunction getRichResultsForOrgLogo(getMetadata) {\n  return {\n    '@context': 'https://schema.org',\n    '@type': 'Organization',\n    url: getMetadata('orgurl'),\n    logo: getMetadata('orglogo'),\n  };\n}\n\nfunction getRichResults(type, getMetadata) {\n  switch (type) {\n    case 'Article':\n    case 'NewsArticle':\n      return getRichResultsForArticle(type, getMetadata);\n    case 'SiteSearchBox':\n      return getRichResultsForSiteSearchBox(getMetadata);\n    case 'Organization':\n      return getRichResultsForOrgLogo(getMetadata);\n    default:\n      // eslint-disable-next-line no-console\n      console.error(`Type ${type} is not supported`);\n      return null;\n  }\n}\n\nfunction addToDom(richResults, createTag) {\n  if (!richResults) {\n    return;\n  }\n  const script = createTag('script', { type: 'application/ld+json' }, JSON.stringify(richResults));\n  document.head.append(script);\n}\n\n// createTag and getMetadata are passed in to avoid circular dependencies\nexport default function addRichResults(type, { createTag, getMetadata }) {\n  const richResults = getRichResults(type, getMetadata);\n  addToDom(richResults, createTag);\n}\n"],"names":["addRichResults","type","_ref","createTag","getMetadata","richResults","headLine","image","description","datePublished","dateModified","author","name","url","getRichResultsForArticle","SEARCH_TERM_STRING","urlTemplate","concat","potentialAction","target","getRichResultsForSiteSearchBox","logo","getRichResultsForOrgLogo","console","error","getRichResults","script","JSON","stringify","document","head","append","addToDom"],"sourceRoot":""}