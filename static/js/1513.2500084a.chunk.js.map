{"version":3,"file":"static/js/1513.2500084a.chunk.js","mappings":"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","sources":["../node_modules/@adobecom/blocks/region-nav/region-nav.js"],"sourcesContent":["import { getConfig, getLanguage, getLocale, loadLanguageConfig } from '../../utils/utils.js';\n\nconst queriedPages = [];\n\nfunction setInternational(prefix) {\n  const domain = window.location.host.endsWith('.adobe.com') ? 'domain=adobe.com' : '';\n  const maxAge = 365 * 24 * 60 * 60; // max-age in seconds for 365 days\n  document.cookie = `international=${prefix};max-age=${maxAge};path=/;${domain}`;\n  sessionStorage.setItem('international', prefix);\n}\n\nfunction handleEvent({ prefix, link, callback } = {}) {\n  if (typeof callback !== 'function') return;\n\n  const existingPage = queriedPages.find((page) => page.href === link.href);\n  if (existingPage) {\n    callback(existingPage.resp.ok\n      ? link.href\n      : `${prefix ? `/${prefix}` : ''}/`);\n    return;\n  }\n  fetch(link.href, { method: 'HEAD' }).then((resp) => {\n    queriedPages.push({ href: link.href, resp });\n    if (!resp.ok) throw new Error('request failed');\n    callback(link.href);\n  }).catch(() => {\n    callback(`${prefix ? `/${prefix}` : ''}/`);\n  });\n}\n\nexport function decorateLink(link, path, localeToLanguageMap = []) {\n  let hrefAdapted;\n  let pathname = link.getAttribute('href');\n  if (pathname.startsWith('http')) {\n    try { pathname = new URL(pathname).pathname; } catch (e) { /* href does not contain domain */ }\n  }\n\n  const { languageMap, languages, locales } = getConfig();\n  const mergedLocales = { ...locales };\n  localeToLanguageMap.forEach((lang) => {\n    const { locale } = lang;\n    if (!mergedLocales[locale]) {\n      mergedLocales[locale] = { ietf: 'none', tk: 'none' };\n    }\n  });\n\n  const currentLocaleObj = languages\n    ? getLanguage(languages, mergedLocales, pathname) : getLocale(mergedLocales, pathname);\n  const prefix = currentLocaleObj.prefix.replace('/', '');\n\n  let { href } = link;\n  if (href.endsWith('/')) href = href.slice(0, -1);\n\n  if (languageMap && !locales[prefix] && (languages && !languages[prefix])) {\n    const valueInMap = languageMap[prefix];\n    href = href.replace(`/${prefix}`, valueInMap ? `/${valueInMap}` : '');\n  }\n  link.href = `${href}${path}`;\n\n  link.addEventListener('mouseover', () => {\n    setTimeout(() => {\n      if (link.matches(':hover') && !hrefAdapted) {\n        handleEvent({\n          prefix,\n          link,\n          callback: (newHref) => {\n            link.href = newHref;\n            hrefAdapted = true;\n          },\n        });\n      }\n    }, 100);\n  });\n\n  link.addEventListener('click', (e) => {\n    setInternational(prefix === '' ? 'us' : prefix);\n    if (hrefAdapted) return;\n    e.preventDefault();\n    handleEvent({\n      prefix,\n      link,\n      callback: (newHref) => {\n        window.open(newHref, e.ctrlKey || e.metaKey ? '_blank' : '_self');\n      },\n    });\n  });\n}\n\nexport default async function init(block) {\n  const { localeToLanguageMap } = await loadLanguageConfig();\n  const config = getConfig();\n  const divs = block.querySelectorAll(':scope > div');\n  if (divs.length < 2) return;\n  const links = divs[1].querySelectorAll('a');\n  if (!links.length) return;\n  const { prefix } = config.locale;\n  const { location } = window;\n  const hasPrefix = location.pathname.startsWith(`${prefix}/`);\n  const path = location.href.replace(location.origin + (hasPrefix ? prefix : ''), '').replace('#langnav', '');\n  links.forEach((link) => decorateLink(link, path, localeToLanguageMap));\n}\n"],"names":["L","v","prefix","e","link","n","callback","a","arguments","length","undefined","r","find","t","href","resp","ok","concat","fetch","method","then","push","Error","catch","y","getAttribute","startsWith","URL","pathname","languageMap","h","languages","c","locales","l","g","i","forEach","o","locale","u","ietf","tk","s","m","p","replace","f","endsWith","slice","addEventListener","setTimeout","matches","window","location","host","document","cookie","sessionStorage","setItem","w","preventDefault","open","ctrlKey","metaKey","E","localeToLanguageMap","$","querySelectorAll","origin","d"],"sourceRoot":""}