{"version":3,"file":"static/js/6176.1c930768.chunk.js","mappings":"sLAAA,SAASA,EAAeC,EAASC,GAAa,IAAAC,EAC5C,OAAQD,GACHA,IAAgBD,GAChBA,EAAQG,SAASF,IACjBA,EAAYE,SAASH,KACT,QADgBE,EAC5BD,EAAYG,kBAAA,IAAAF,OAAA,EAAZA,EAAwBC,SAASH,GACxC,CAUA,SAASK,IACP,IAAIC,GAAY,EACZC,GAAY,EAEhBC,SAASC,iBAAiB,WAAYC,IACtB,QAAVA,EAAEC,MACJL,GAAY,EACZM,YAAW,KACLN,IAfVE,SAASK,gBAAgBC,MAAMC,YAAY,yBAA0B,QAiB/DR,GAAY,EAAI,IAEpB,IAGFC,SAASC,iBAAiB,WAAYC,IAAM,IAAAM,EAAAC,EAC1C,MAAMjB,EAA+B,QAA/BgB,EAAmB,QAAnBC,EAAUP,EAAEQ,OAAOd,kBAAA,IAAAa,OAAA,EAATA,EAAqBE,qBAAA,IAAAH,EAAAA,EAAiBN,EAAEQ,OAEpDX,GArBNC,SAASK,gBAAgBC,MAAMM,eAAe,0BAsB5Cd,GAAY,EAEZ,MAAMe,EAAOrB,EAAQsB,wBACfC,EAAiBC,OAAOC,YAG9B,GAFwBJ,EAAKK,IAAM,GAAKL,EAAKM,OAASJ,EAIpD,YADAvB,EAAQ4B,eAAe,CAAEC,SAAU,UAAWC,MAAO,WAIvD,MAAMC,EAAUV,EAAKW,KAAOX,EAAKY,MAAQ,EACnCC,EAAeb,EAAKM,OAAuB,IAAdN,EAAKc,OAElCC,EAAiB5B,SAAS6B,iBAAiBN,EAASV,EAAKK,KACzDY,EAAoB9B,SAAS6B,iBAAiBN,EAASG,GAEzDnC,EAAeC,EAASoC,IACvBrC,EAAeC,EAASsC,IAE7BtC,EAAQ4B,eAAe,CAAEC,SAAU,UAAWC,MAAO,UAAW,GAEpE,CAEO,IAAMS,EAAgCC,IAAwB,IAAAC,EAAA,IAAvB,QAAEzC,EAAA,MAAS0C,GAAMF,EACxDxC,GAAY0C,IACjB1C,EAAQ0C,MAAQA,EACe,QAA/BD,EAAAzC,EAAQ2C,QAAQ,wBAAe,IAAAF,GAA/BA,EAAkCG,aAAa,aAAcF,GAAM,EAGtD,SAARG,IACLxC,GACF,C","sources":["../node_modules/@adobecom/scripts/accessibility.js"],"sourcesContent":["function shouldntScroll(element, elFromPoint) {\n  return !elFromPoint\n    || elFromPoint === element\n    || element.contains(elFromPoint)\n    || elFromPoint.contains(element)\n    || elFromPoint.shadowRoot?.contains(element);\n}\n\nfunction setScrollPadding() {\n  document.documentElement.style.setProperty('--scroll-padding-block', '25vh');\n}\n\nfunction removeScrollPadding() {\n  document.documentElement.style.removeProperty('--scroll-padding-block');\n}\n\nfunction scrollTabFocusedElIntoView() {\n  let isFocused = false;\n  let isPadding = false;\n\n  document.addEventListener('keydown', (e) => {\n    if (e.key === 'Tab') {\n      isFocused = false;\n      setTimeout(() => {\n        if (isFocused) return;\n        setScrollPadding();\n        isPadding = true;\n      });\n    }\n  });\n\n  document.addEventListener('focusin', (e) => {\n    const element = e.target.shadowRoot?.activeElement ?? e.target;\n\n    if (isPadding) removeScrollPadding();\n    isFocused = true;\n\n    const rect = element.getBoundingClientRect();\n    const viewportHeight = window.innerHeight;\n    const outsideViewport = rect.top < 0 || rect.bottom > viewportHeight;\n\n    if (outsideViewport) {\n      element.scrollIntoView({ behavior: 'instant', block: 'center' });\n      return;\n    }\n\n    const centerX = rect.left + rect.width / 2;\n    const bottomPointY = rect.bottom - rect.height * 0.05;\n\n    const elFromPointTop = document.elementFromPoint(centerX, rect.top);\n    const elFromPointBottom = document.elementFromPoint(centerX, bottomPointY);\n\n    if (shouldntScroll(element, elFromPointTop)\n      && shouldntScroll(element, elFromPointBottom)) return;\n\n    element.scrollIntoView({ behavior: 'instant', block: 'center' });\n  });\n}\n\nexport const setDialogAndElementAttributes = ({ element, title }) => {\n  if (!element || !title) return;\n  element.title = title;\n  element.closest('.dialog-modal')?.setAttribute('aria-label', title);\n};\n\nexport default function init() {\n  scrollTabFocusedElIntoView();\n}\n"],"names":["shouldntScroll","element","elFromPoint","_elFromPoint$shadowRo","contains","shadowRoot","scrollTabFocusedElIntoView","isFocused","isPadding","document","addEventListener","e","key","setTimeout","documentElement","style","setProperty","_e$target$shadowRoot$","_e$target$shadowRoot","target","activeElement","removeProperty","rect","getBoundingClientRect","viewportHeight","window","innerHeight","top","bottom","scrollIntoView","behavior","block","centerX","left","width","bottomPointY","height","elFromPointTop","elementFromPoint","elFromPointBottom","setDialogAndElementAttributes","_ref","_element$closest","title","closest","setAttribute","init"],"sourceRoot":""}