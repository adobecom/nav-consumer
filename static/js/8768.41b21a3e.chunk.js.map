{"version":3,"file":"static/js/8768.41b21a3e.chunk.js","mappings":"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","sources":["../../milo/libs/utils/action.js","../../milo/libs/blocks/global-navigation/features/search/gnav-search.js"],"sourcesContent":["export function debounce(callback, time = 300) {\n  if (typeof callback !== 'function') return undefined;\n\n  let timer = null;\n\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => callback(...args), time);\n  };\n}\n\nexport default { debounce };\n","import {\n  toFragment,\n  isDesktop,\n  setCurtainState,\n  trigger,\n  closeAllDropdowns,\n  logErrorFor,\n} from '../../utilities/utilities.js';\nimport { replaceKeyArray } from '../../../../features/placeholders.js';\nimport { getConfig, getFedsPlaceholderConfig } from '../../../../utils/utils.js';\nimport { debounce } from '../../../../utils/action.js';\n\nconst CONFIG = {\n  suggestions: {\n    scope: 'adobecom',\n    apiKey: 'adobedotcom2',\n  },\n  selectors: {\n    hasResults: 'has-results',\n    inputIsPopulated: 'feds-search-input--isPopulated',\n  },\n};\n\nconst { locale } = getConfig();\nconst [, country = 'US'] = locale.ietf.split('-');\n\nclass Search {\n  constructor(config) {\n    this.icon = config.icon;\n    this.trigger = config.trigger;\n    this.parent = this.trigger.closest('.feds-nav-wrapper');\n    const observer = new MutationObserver(() => {\n      this.clearSearchForm();\n    });\n    observer.observe(this.trigger, { attributeFilter: ['aria-expanded'] });\n    logErrorFor(this.init.bind(this), 'Search init has failed', 'errorType=e,module=gnav-search');\n  }\n\n  async init() {\n    await this.getLabels();\n    this.decorate();\n    this.addEventListeners();\n    this.toggleDropdown();\n  }\n\n  async getLabels() {\n    this.labels = {};\n    [this.labels.search, this.labels.clearResults, this.labels.tryAdvancedSearch] = await replaceKeyArray(['search', 'clear-results', 'try-advanced-search'], getFedsPlaceholderConfig());\n  }\n\n  decorate() {\n    this.input = toFragment`<input placeholder=\"${this.labels.search}\" aria-label=\"${this.labels.search}\" class=\"feds-search-input\" autocomplete=\"off\" aria-autocomplete=\"list\" aria-controls=\"feds-search-results\" daa-ll=\"search-results:standard search\" />`;\n    this.resultsList = toFragment`<ul class=\"feds-search-results\" id=\"feds-search-results\" role=\"region\" daa-ll=\"search-results:suggested-search:click\"></ul>`;\n    this.clearButton = toFragment`<button tabindex=\"0\" class=\"feds-search-clear\" aria-label=\"${this.labels.clearResults}\"></button>`;\n    this.searchBar = toFragment`\n      <aside class=\"feds-search-dropdown\">\n        <div class=\"feds-search-bar\">\n          <div class=\"feds-search-field\">\n            ${this.input}\n            <div class=\"feds-search-icons\">\n              ${this.icon}\n              ${this.clearButton}\n            </div>\n          </div>\n          ${this.resultsList}\n        </div>\n      </aside>`;\n\n    this.trigger.after(this.searchBar);\n  }\n\n  clearSearchForm() {\n    this.input.value = '';\n    this.onSearchInput();\n  }\n\n  addEventListeners() {\n    // Toggle the dropdown when the trigger is clicked\n    this.trigger.addEventListener('click', () => {\n      this.toggleDropdown();\n    });\n\n    this.input.addEventListener('input', () => {\n      this.onSearchInput();\n    });\n\n    this.input.addEventListener('keydown', (e) => {\n      if (e.code === 'Escape') {\n        // Pressing ESC when input has value resets the results\n        if (this.input.value.length) {\n          this.clearSearchForm();\n        } else if (isDesktop.matches) {\n          closeAllDropdowns();\n          this.trigger.focus();\n        }\n      }\n\n      if (e.code === 'Enter') {\n        if (!this.query) return;\n        window.location.href = Search.getHelpxLink(this.query);\n      }\n    });\n\n    // If a search result is focused, return focus to input when ESC is pressed\n    this.resultsList.addEventListener('keydown', (e) => {\n      if (e.code === 'Escape') {\n        this.input.focus();\n      }\n    });\n\n    // Clicking the clear button resets the results\n    this.clearButton.addEventListener('click', () => {\n      this.clearSearchForm();\n      this.input.focus();\n    });\n\n    // Switching between a mobile and a desktop view\n    // should close the search dropdown\n    isDesktop.addEventListener('change', () => {\n      closeAllDropdowns();\n    });\n  }\n\n  getSuggestions(query = this.query) {\n    const { env } = getConfig();\n    const subdomain = env === 'prod' ? 'adobesearch' : 'adobesearch-stage';\n    const api = `https://${subdomain}.adobe.io/autocomplete/completions?q[locale]=${locale.ietf}&scope=${CONFIG.suggestions.scope}&q[text]=${encodeURIComponent(query)}`;\n\n    return fetch(api, { headers: { 'x-api-key': CONFIG.suggestions.apiKey } })\n      .then((data) => data.json())\n      .catch(() => {\n        // do nothing\n      });\n  }\n\n  onSearchInput = debounce(() => {\n    const query = this.getQuery();\n\n    if (!query.length) {\n      this.resultsList.replaceChildren();\n      delete this.query;\n      return;\n    }\n\n    // Avoid successive calls for the same input value\n    if (query === this.query) {\n      return;\n    }\n\n    this.query = query;\n\n    this.getSuggestions()\n      .then((data) => {\n        const suggestions = data?.suggested_completions;\n\n        if (!Array.isArray(suggestions)\n          || !suggestions.length) {\n          this.resultsList.replaceChildren(this.getNoResultsTemplate());\n          if (this.parent instanceof HTMLElement) {\n            this.parent.classList.remove(CONFIG.selectors.hasResults);\n          }\n          return;\n        }\n\n        this.resultsList.replaceChildren(this.getResultsTemplate(suggestions));\n        if (this.parent instanceof HTMLElement) {\n          this.parent.classList.add(CONFIG.selectors.hasResults);\n        }\n      })\n      .catch(() => {\n        this.resultsList.replaceChildren(this.getNoResultsTemplate());\n        if (this.parent instanceof HTMLElement) {\n          this.parent.classList.remove(CONFIG.selectors.hasResults);\n        }\n      });\n  }, 150);\n\n  getQuery() {\n    const query = this.input.value.trim();\n\n    if (!query.length) {\n      this.input.classList.remove(CONFIG.selectors.inputIsPopulated);\n      this.resultsList.replaceChildren();\n      if (this.parent instanceof HTMLElement) {\n        this.parent.classList.remove(CONFIG.selectors.hasResults);\n      }\n      return '';\n    }\n\n    this.input.classList.add(CONFIG.selectors.inputIsPopulated);\n\n    return query;\n  }\n\n  getResultsTemplate(results) {\n    const resultsTemplate = document.createDocumentFragment();\n\n    // eslint-disable-next-line array-callback-return\n    results.map((result) => {\n      const resultLabel = result.name;\n\n      if (!resultLabel.length) {\n        return;\n      }\n\n      // A longest common substring match between the original prefix and suggestion must be made\n      // for cases when special characters are used. Say the user searches for 'pho-',\n      // then the prefix will be 'pho-', while the suggestion will be 'photoshop'.\n      // The generated suggestion markup should look like `<b>pho</b>toshop`,\n      // so we need to extract the part of the prefix that matches the current suggestion\n      const matchPrefixToSuggestion = () => {\n        let i = 0;\n        const prefixLength = this.query.length;\n\n        while (i < prefixLength && this.query[i].toLowerCase() === resultLabel[i].toLowerCase()) {\n          i += 1;\n        }\n\n        return this.query.substring(0, i).trim();\n      };\n\n      // The matched prefix can't be cached to be used for all of the suggestions in the set\n      // because there are edge cases when there are significant differences between suggestions.\n      // For example, the query 'max 20' will yield the suggestions 'max 2016' and 'maximize',\n      // thus the common part between the query and the suggestion differs:\n      // * 'max 20' for the first suggestion\n      // * 'max' for the second suggestion\n      const matchedPrefix = matchPrefixToSuggestion();\n\n      // Say the user searched for 'PhOtOsHoP' and the suggested result is 'Photoshop Trial';\n      // We don't want the suggestion to be rendered as '<b>PhOtOsHoP</b> Trial',\n      // rather '<b>Photoshop</b> Trial', like the original suggestion formatting.\n      // First, define a capturing group Regexp;\n      // in the example above this will be '/(PhOtOsHoP)/i'\n      const prefixPattern = new RegExp(`(${matchedPrefix})`, 'i');\n      let suggestionPrefix;\n      // Remove the query from the suggestion and\n      // save the matched prefix in its original formatting from the API\n      const suggestionWithoutPrefix = resultLabel.replace(prefixPattern, (match) => {\n        // Save the matched string (with the formatting suggested by the API) into a variable\n        suggestionPrefix = match;\n        // Remove the matched string\n        return '';\n      });\n\n      const resultTemplate = toFragment`<li>\n          <a href=\"${Search.getHelpxLink(resultLabel)}\" class=\"feds-search-result\" aria-label=\"${resultLabel}\">\n            <span>${suggestionPrefix}</span>${suggestionWithoutPrefix}\n          </a>\n        </li>`;\n\n      resultsTemplate.appendChild(resultTemplate);\n    });\n\n    return resultsTemplate;\n  }\n\n  getNoResultsTemplate(query = this.query) {\n    return toFragment`<li>\n      <a href=\"${Search.getHelpxLink(query)}\" class=\"feds-search-result\"><span>${this.labels.tryAdvancedSearch}</span></a>\n    </li>`;\n  }\n\n  focusInput() {\n    if (isDesktop.matches) {\n      this.input.focus();\n    }\n  }\n\n  toggleDropdown() {\n    if (!isDesktop.matches) return;\n\n    const hasBeenOpened = trigger({ element: this.trigger });\n    if (hasBeenOpened) {\n      setCurtainState(true);\n      this.focusInput();\n    } else {\n      this.clearSearchForm();\n    }\n  }\n\n  static getHelpxLink(query) {\n    return `https://helpx.adobe.com${locale.prefix}/globalsearch.html?q=${encodeURIComponent((query || '').trim())}&start_index=0&country=${country}`;\n  }\n}\n\nexport default Search;\n"],"names":["o","e","n","arguments","length","undefined","t","_len","u","Array","_key","clearTimeout","setTimeout","r","debounce","scope","apiKey","hasResults","inputIsPopulated","locale","h","q","ietf","split","F","constructor","_defineProperty","v","this","getQuery","resultsList","replaceChildren","query","getSuggestions","then","s","suggested_completions","isArray","getNoResultsTemplate","parent","HTMLElement","classList","remove","getResultsTemplate","add","catch","icon","trigger","closest","MutationObserver","clearSearchForm","observe","attributeFilter","m","init","bind","getLabels","decorate","addEventListeners","toggleDropdown","labels","search","clearResults","tryAdvancedSearch","f","y","input","a","_templateObject","_taggedTemplateLiteral","_templateObject2","clearButton","_templateObject3","searchBar","_templateObject4","after","value","onSearchInput","addEventListener","code","l","matches","c","focus","window","location","href","getHelpxLink","env","concat","encodeURIComponent","fetch","headers","p","json","trim","document","createDocumentFragment","map","name","g","$","i","S","toLowerCase","substring","x","RegExp","w","replace","E","_templateObject5","appendChild","_templateObject6","focusInput","b","element","L","prefix"],"sourceRoot":""}