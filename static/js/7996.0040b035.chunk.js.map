{"version":3,"file":"static/js/7996.0040b035.chunk.js","mappings":"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","sources":["../node_modules/@adobecom/features/seotech/seotech.js"],"sourcesContent":["export const PROD_BASE_URL = 'https://www.adobe.com/seotech/api';\n\nexport const REGEX_ADOBETV = /(?:https?:\\/\\/)?(?:stage-)?video.tv.adobe.com\\/v\\/([\\d]+)/;\nexport const REGEX_YOUTUBE = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com|youtu\\.be)\\/(?:watch\\?v=)?([a-zA-Z0-9_-]+)/;\nexport const VIDEO_OBJECT_PROVIDERS = [\n  { provider: 'adobe', regex: REGEX_ADOBETV },\n  { provider: 'youtube', regex: REGEX_YOUTUBE },\n];\n\nexport function logError(msg) {\n  window.lana?.log(`SEOTECH: ${msg}`, {\n    debug: false,\n    implicitSampleRate: 100,\n    sampleRate: 100,\n    tags: 'errorType=seotech',\n  });\n}\n\nexport function parseVideoUrl(url, providers = VIDEO_OBJECT_PROVIDERS) {\n  for (const { regex, provider } of providers) {\n    const match = url.match(regex);\n    if (match) {\n      return { provider, id: match[1] };\n    }\n  }\n  return null;\n}\n\nexport async function getVideoObject(url, { baseUrl = PROD_BASE_URL } = {}) {\n  const parsedUrl = parseVideoUrl(url);\n  if (!parsedUrl) {\n    throw new Error(`Invalid video url: ${url}`);\n  }\n  const { provider, id } = parsedUrl;\n  const videoObjectUrl = `${baseUrl}/json-ld/types/video-object/providers/${provider}/${id}`;\n  const resp = await fetch(videoObjectUrl, { headers: { 'Content-Type': 'application/json' } });\n  const body = await resp?.json();\n  if (!resp.ok) {\n    throw new Error(`Failed to fetch video: ${body?.error}`);\n  }\n  return body.videoObject;\n}\n\n// https://github.com/orgs/adobecom/discussions/2633\nexport function getRepoByImsClientId(imsClientId) {\n  return {\n    'adobedotcom-cc': 'cc',\n    acrobatmilo: 'dc',\n    bacom: 'bacom',\n    homepage_milo: 'homepage',\n    milo: 'milo',\n  }[imsClientId];\n}\n\nexport async function sha256(message) {\n  const msgUint8 = new TextEncoder().encode(message);\n  const hashBuffer = await window.crypto.subtle.digest('SHA-256', msgUint8);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  const hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n  return hashHex;\n}\n\nexport async function getStructuredData(bucket, id, { baseUrl = PROD_BASE_URL } = {}) {\n  if (!bucket || !id) throw new Error('bucket and id are required');\n  const url = `${baseUrl}/structured-data/${bucket}/${id}`;\n  const resp = await fetch(url);\n  if (!resp || !resp.ok) return null;\n  const body = await resp.json();\n  return body;\n}\n\nexport async function appendScriptTag({ locationUrl, getMetadata, createTag, getConfig }) {\n  const url = new URL(locationUrl);\n  const params = new URLSearchParams(url.search);\n  const baseUrl = params.get('seotech-api-base-url') || undefined;\n  const append = (obj, className) => {\n    if (!obj) return;\n    const attributes = { type: 'application/ld+json' };\n    if (className) attributes.class = className;\n    const script = createTag('script', attributes, JSON.stringify(obj));\n    document.head.append(script);\n  };\n\n  const promises = [];\n  if (getMetadata('seotech-structured-data') === 'on') {\n    const bucket = getRepoByImsClientId(getConfig()?.imsClientId);\n    const id = await sha256(url.pathname?.replace('.html', ''));\n    promises.push(getStructuredData(bucket, id, { baseUrl })\n      .then((obj) => append(obj, 'seotech-structured-data'))\n      .catch((e) => logError(e.message)));\n  }\n  const videoUrl = getMetadata('seotech-video-url');\n  if (videoUrl) {\n    promises.push(getVideoObject(videoUrl, { baseUrl })\n      .then((videoObject) => append(videoObject, 'seotech-video-url'))\n      .catch((e) => logError(e.message)));\n  }\n  return Promise.all(promises);\n}\n\nexport default appendScriptTag;\n"],"names":["PROD_BASE_URL","REGEX_ADOBETV","REGEX_YOUTUBE","VIDEO_OBJECT_PROVIDERS","provider","regex","logError","msg","_window$lana","window","lana","log","concat","debug","implicitSampleRate","sampleRate","tags","parseVideoUrl","url","providers","arguments","length","undefined","match","id","getVideoObject","baseUrl","parsedUrl","Error","videoObjectUrl","resp","fetch","headers","body","json","ok","error","videoObject","getRepoByImsClientId","imsClientId","acrobatmilo","bacom","homepage_milo","milo","sha256","message","msgUint8","TextEncoder","encode","hashBuffer","crypto","subtle","digest","Array","from","Uint8Array","map","b","toString","padStart","join","getStructuredData","bucket","appendScriptTag","_ref","locationUrl","getMetadata","createTag","getConfig","URL","URLSearchParams","search","get","append","obj","className","attributes","type","class","script","JSON","stringify","document","head","promises","_getConfig","_url$pathname","pathname","replace","push","then","catch","e","videoUrl","Promise","all","seotech_default"],"sourceRoot":""}