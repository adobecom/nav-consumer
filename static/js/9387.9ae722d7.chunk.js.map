{"version":3,"file":"static/js/9387.9ae722d7.chunk.js","mappings":"8HAGE,MAAMA,EAAY,IAEZC,EAAiB,CACrBC,SAAU,GACVC,SAAU,gCACVC,cAAe,sCACfC,UAAW,IACXC,WAAY,EACZC,KAAM,GACNC,mBAAoB,EACpBC,SAAS,GAGLC,EAAIC,OAYV,SAASC,EAAaC,EAAKC,GAmBzB,OAlBKD,IACHA,EAAM,CAAC,GAGJC,IACHA,EAAM,CAAC,GAaFC,OAAOC,KAAKf,GAAgBgB,QAAO,CAACC,EAASC,KAClDD,EAAQC,GAXV,SAAgBA,GACd,YAAiB,IAAbN,EAAIM,GACCN,EAAIM,QAEI,IAAbL,EAAIK,GACCL,EAAIK,GAENlB,EAAekB,EACxB,CAGiBC,CAAOD,GACfD,IACN,CAAC,EACN,CAEA,SAASG,EAAIC,EAAKJ,IAChBI,EAAMA,GAAOA,EAAIC,MAAQD,EAAIC,MAASD,GAAO,IACrCE,OAASxB,IACfsB,EAAA,GAAAG,OAASH,EAAII,MAAM,EAAG1B,GAAU,YAGlC,MAAM2B,EAAIf,EAAaM,EAASR,EAAEkB,KAAKV,SACvC,IAAKS,EAAEzB,SAEL,YADA2B,QAAQC,KAAK,wCAIf,MACMxB,EADkByB,SAAS,IAAIC,IAAIrB,OAAOsB,UAAUC,aAAaC,IAAI,eAAgB,MACpC,MAAhBR,EAAEtB,UAAoBsB,EAAEnB,mBAAqBmB,EAAErB,YAEtF,IAAKI,EAAEkB,KAAKQ,QAAU1B,EAAEkB,KAAKS,WAAa/B,GAA8B,IAAhBgC,KAAKC,SAAgB,OAE7E,MAAMC,EApDR,WACE,MAAM,KAAEC,GAAS9B,OAAOsB,SACxB,MAAyC,eAArCQ,EAAKC,UAAUD,EAAKjB,OAAS,KACS,oBAArCiB,EAAKC,UAAUD,EAAKjB,OAAS,KACQ,qBAArCiB,EAAKC,UAAUD,EAAKjB,OAAS,GAIpC,CA4CuBmB,GAEfxC,EAAaqC,GAAiBb,EAAElB,QAA6BkB,EAAExB,SAApBwB,EAAEvB,cAC7CwC,EAAc,CAAC,KAADnB,OACboB,mBAAmBvB,IAAI,KAAAG,OACvBqB,UAAUnB,EAAEzB,WAAS,KAAAuB,OACrBnB,GAAU,KAAAmB,OACVqB,UAAUnB,EAAEtB,aASnB,GANIsB,EAAEpB,MACJqC,EAAYG,KAAA,QAAAtB,OAAaqB,UAAUnB,EAAEpB,UAGlCiC,GAAgB9B,EAAEkB,KAAKQ,OAAS1B,EAAEkB,KAAKS,YAAWR,QAAQR,IAAI,aAAcC,EAAK,UAAWK,IAE5FjB,EAAEkB,KAAKS,WAAa3B,EAAEkB,KAAKQ,MAAO,CACrC,MAAMY,EAAM,IAAIC,eAUhB,OATIvC,EAAEkB,KAAKQ,QACTQ,EAAYG,KAAK,KACjBC,EAAIE,iBAAiB,QAAQ,KAC3BrB,QAAQR,IAAI,iBAAkB2B,EAAIG,aAAa,KAGnDH,EAAII,KAAK,SAAA3B,OAAUtB,EAAQ,KAAAsB,OAAImB,EAAYS,KAAK,OAChDL,EAAIM,OAEGN,CACT,CACF,CAEA,SAASO,EAAmBC,GAC1BnC,EAAImC,EAAEC,QAAUD,EAAEE,OAASF,EAAEG,QAAS,CAAEtD,UAAW,KACrD,CAUAK,EAAEkB,KAAO,CACPQ,OAAO,EACPf,MACAH,QAASN,EAAaF,EAAEkB,MAAQlB,EAAEkB,KAAKV,WAV0B,IAA1DR,EAAEuB,SAAS2B,OAAOC,cAAcC,QAAQ,eAc5BpD,EAAEkB,KAAKQ,OAAQ,IAV6B,IAAxD1B,EAAEuB,SAASQ,KAAKoB,cAAcC,QAAQ,eAW5BpD,EAAEkB,KAAKS,WAAY,GAEtC3B,EAAEwC,iBAAiB,QAASK,GAC5B7C,EAAEwC,iBAAiB,qBAAsBK,EAC1C,C","sources":["../node_modules/@adobecom/utils/lana.js"],"sourcesContent":["/* eslint-disable no-param-reassign */\n/* eslint-disable no-console */\n(function iife() {\n  const MSG_LIMIT = 2000;\n\n  const defaultOptions = {\n    clientId: '',\n    endpoint: 'https://www.adobe.com/lana/ll',\n    endpointStage: 'https://www.stage.adobe.com/lana/ll',\n    errorType: 'e',\n    sampleRate: 1,\n    tags: '',\n    implicitSampleRate: 1,\n    useProd: true,\n  };\n\n  const w = window;\n\n  function isProd() {\n    const { host } = window.location;\n    if (host.substring(host.length - 10) === '.adobe.com'\n      && host.substring(host.length - 15) !== '.corp.adobe.com'\n      && host.substring(host.length - 16) !== '.stage.adobe.com') {\n      return true;\n    }\n    return false;\n  }\n\n  function mergeOptions(op1, op2) {\n    if (!op1) {\n      op1 = {};\n    }\n\n    if (!op2) {\n      op2 = {};\n    }\n\n    function getOpt(key) {\n      if (op1[key] !== undefined) {\n        return op1[key];\n      }\n      if (op2[key] !== undefined) {\n        return op2[key];\n      }\n      return defaultOptions[key];\n    }\n\n    return Object.keys(defaultOptions).reduce((options, key) => {\n      options[key] = getOpt(key);\n      return options;\n    }, {});\n  }\n\n  function log(msg, options) {\n    msg = msg && msg.stack ? msg.stack : (msg || '');\n    if (msg.length > MSG_LIMIT) {\n      msg = `${msg.slice(0, MSG_LIMIT)}<trunc>`;\n    }\n\n    const o = mergeOptions(options, w.lana.options);\n    if (!o.clientId) {\n      console.warn('LANA ClientID is not set in options.');\n      return;\n    }\n\n    const sampleRateParam = parseInt(new URL(window.location).searchParams.get('lana-sample'), 10);\n    const sampleRate = sampleRateParam || (o.errorType === 'i' ? o.implicitSampleRate : o.sampleRate);\n\n    if (!w.lana.debug && !w.lana.localhost && sampleRate <= Math.random() * 100) return;\n\n    const isProdDomain = isProd();\n\n    const endpoint = (!isProdDomain || !o.useProd) ? o.endpointStage : o.endpoint;\n    const queryParams = [\n      `m=${encodeURIComponent(msg)}`,\n      `c=${encodeURI(o.clientId)}`,\n      `s=${sampleRate}`,\n      `t=${encodeURI(o.errorType)}`,\n    ];\n\n    if (o.tags) {\n      queryParams.push(`tags=${encodeURI(o.tags)}`);\n    }\n\n    if (!isProdDomain || w.lana.debug || w.lana.localhost) console.log('LANA Msg: ', msg, '\\nOpts:', o);\n\n    if (!w.lana.localhost || w.lana.debug) {\n      const xhr = new XMLHttpRequest();\n      if (w.lana.debug) {\n        queryParams.push('d');\n        xhr.addEventListener('load', () => {\n          console.log('LANA response:', xhr.responseText);\n        });\n      }\n      xhr.open('GET', `${endpoint}?${queryParams.join('&')}`);\n      xhr.send();\n      // eslint-disable-next-line consistent-return\n      return xhr;\n    }\n  }\n\n  function sendUnhandledError(e) {\n    log(e.reason || e.error || e.message, { errorType: 'i' });\n  }\n\n  function hasDebugParam() {\n    return w.location.search.toLowerCase().indexOf('lanadebug') !== -1;\n  }\n\n  function isLocalhost() {\n    return w.location.host.toLowerCase().indexOf('localhost') !== -1;\n  }\n\n  w.lana = {\n    debug: false,\n    log,\n    options: mergeOptions(w.lana && w.lana.options),\n  };\n\n  /* c8 ignore next */\n  if (hasDebugParam()) w.lana.debug = true;\n  if (isLocalhost()) w.lana.localhost = true;\n\n  w.addEventListener('error', sendUnhandledError);\n  w.addEventListener('unhandledrejection', sendUnhandledError);\n}());\n"],"names":["MSG_LIMIT","defaultOptions","clientId","endpoint","endpointStage","errorType","sampleRate","tags","implicitSampleRate","useProd","w","window","mergeOptions","op1","op2","Object","keys","reduce","options","key","getOpt","log","msg","stack","length","concat","slice","o","lana","console","warn","parseInt","URL","location","searchParams","get","debug","localhost","Math","random","isProdDomain","host","substring","isProd","queryParams","encodeURIComponent","encodeURI","push","xhr","XMLHttpRequest","addEventListener","responseText","open","join","send","sendUnhandledError","e","reason","error","message","search","toLowerCase","indexOf"],"sourceRoot":""}