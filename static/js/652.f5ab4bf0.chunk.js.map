{"version":3,"file":"static/js/652.f5ab4bf0.chunk.js","mappings":"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","sources":["../node_modules/@adobecom/blocks/global-navigation/features/breadcrumbs/breadcrumbs.js"],"sourcesContent":["import { getMetadata, getConfig, getFederatedUrl } from '../../../../utils/utils.js';\nimport { toFragment, lanaLog } from '../../utilities/utilities.js';\n\nconst metadata = {\n  seo: 'breadcrumbs-seo',\n  seoLegacy: 'breadcrumb-seo',\n  fromFile: 'breadcrumbs-from-file',\n  showCurrent: 'breadcrumbs-show-current-page',\n  hiddenEntries: 'breadcrumbs-hidden-entries',\n  pageTitle: 'breadcrumbs-page-title',\n  base: 'breadcrumbs-base',\n  fromUrl: 'breadcrumbs-from-url',\n};\n\nconst setBreadcrumbSEO = (breadcrumbs) => {\n  const seoDisabled = (getMetadata(metadata.seo) || getMetadata(metadata.seoLegacy)) === 'off';\n  if (seoDisabled || !breadcrumbs) return;\n  const breadcrumbsSEO = {\n    '@context': 'https://schema.org',\n    '@type': 'BreadcrumbList',\n    itemListElement: [],\n  };\n\n  breadcrumbs.querySelectorAll('ul > li').forEach((item, idx, list) => {\n    const link = item.querySelector('a');\n    const name = link ? link.innerText.trim() : [...item.childNodes].filter((node) => !node.matches?.('span[aria-hidden=\"true\"]')).map((node) => node.textContent.trim()).join('');\n    let itemUrl = link?.href;\n    if (!itemUrl && idx === list.length - 1) {\n      itemUrl = window.location.href;\n    }\n    breadcrumbsSEO.itemListElement.push({\n      '@type': 'ListItem',\n      position: idx + 1,\n      name,\n      item: itemUrl,\n    });\n  });\n  const script = toFragment`<script type=\"application/ld+json\">${JSON.stringify(\n    breadcrumbsSEO,\n  )}</script>`;\n  document.head.append(script);\n};\n\nconst createBreadcrumbs = (element) => {\n  if (!element) return null;\n  const ul = element.querySelector('ul');\n  const pageTitle = getMetadata(metadata.pageTitle);\n  if (pageTitle || getMetadata(metadata.showCurrent) === 'on') {\n    ul.append(toFragment`\n      <li>\n        ${pageTitle || document.title}\n      </li>\n    `);\n  }\n\n  const hiddenEntries = getMetadata(metadata.hiddenEntries)\n    ?.toLowerCase()\n    .split(',')\n    .map((item) => item.trim()) || [];\n\n  ul.querySelectorAll('li').forEach((li, index) => {\n    if (hiddenEntries.includes(li.innerText?.toLowerCase().trim())) li.remove();\n    if (index > 0) li.insertAdjacentHTML('afterbegin', '<span aria-hidden=\"true\">/</span>');\n  });\n\n  const noTransform = element.classList.contains('no-transform') ? ' no-transform' : '';\n\n  const breadcrumbs = toFragment`\n    <div class=\"feds-breadcrumbs-wrapper\">\n      <nav class=\"feds-breadcrumbs${noTransform}\" aria-label=\"Breadcrumb\">${ul}</nav>\n    </div>\n  `;\n  ul.querySelector('li:last-of-type')?.setAttribute('aria-current', 'page');\n  return breadcrumbs;\n};\n\nconst createWithBase = async (el) => {\n  const element = el || toFragment`<div><ul></ul></div>`;\n  const url = getFederatedUrl(getMetadata(metadata.base));\n  if (!url) return null;\n  try {\n    const resp = await fetch(`${url}.plain.html`);\n    const text = await resp.text();\n    const base = new DOMParser().parseFromString(text, 'text/html').body;\n    element.querySelector('ul')?.prepend(...base.querySelectorAll('li'));\n    return createBreadcrumbs(element);\n  } catch (e) {\n    lanaLog({ e, message: 'Breadcrumbs failed fetching base', tags: 'gnav-breadcrumbs', errorType: 'i' });\n    return null;\n  }\n};\n\nconst fromUrl = () => {\n  if (getMetadata(metadata.fromUrl) !== 'on') return null;\n  const list = toFragment`<ul></ul>`;\n  const paths = document.location.pathname\n    .replace((getConfig().locale?.prefix || ''), '')\n    .split('/')\n    .filter((n) => n);\n\n  for (let i = 0; i < paths.length; i += 1) {\n    list.append(toFragment`\n      <li>\n        <a href=\"/${paths.slice(0, i + 1).join('/')}\">${paths[i].replaceAll('-', ' ')}</a>\n      </li>\n    `);\n  }\n  return createBreadcrumbs(toFragment`<div>${list}</div>`);\n};\n\nexport default async function init(el) {\n  try {\n    const breadcrumbsEl = await createWithBase(el) || createBreadcrumbs(el) || fromUrl();\n    setBreadcrumbSEO(breadcrumbsEl);\n    return breadcrumbsEl;\n  } catch (e) {\n    lanaLog({ e, message: 'Breadcrumbs failed rendering', tags: 'gnav-breadcrumbs', errorType: 'e' });\n    return null;\n  }\n}\n"],"names":["_a","metadata","setBreadcrumbSEO","breadcrumbs","getMetadata","breadcrumbsSEO","itemListElement","querySelectorAll","forEach","item","idx","list","link","querySelector","name","innerText","trim","childNodes","filter","node","_node$matches","matches","call","map","textContent","join","itemUrl","href","length","window","location","push","position","script","toFragment","__template","JSON","stringify","document","head","append","createBreadcrumbs","element","_getMetadata","_ul$querySelector","ul","pageTitle","_templateObject","_taggedTemplateLiteral","title","hiddenEntries","toLowerCase","split","li","index","_li$innerText","includes","remove","insertAdjacentHTML","noTransform","classList","contains","_templateObject2","setAttribute","createWithBase","async","el","_templateObject3","url","getFederatedUrl","_element$querySelecto","resp","fetch","concat","text","base","DOMParser","parseFromString","body","prepend","e","lanaLog","message","tags","errorType","fromUrl","_getConfig$locale","_templateObject4","paths","pathname","replace","getConfig","locale","prefix","n","i","_templateObject5","slice","replaceAll","_templateObject6","init","breadcrumbsEl"],"sourceRoot":""}