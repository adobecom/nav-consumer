{"version":3,"file":"static/js/7583.f272e7c3.chunk.js","mappings":"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","sources":["../node_modules/@adobecom/scripts/tooltip.js"],"sourcesContent":["function setTooltipPosition(tooltips) {\n  const positionClasses = ['top', 'bottom', 'right', 'left'];\n  const viewportWidth = window.innerWidth;\n  const tooltipMargin = 12;\n  const headerHeight = document.querySelector('header')?.getBoundingClientRect().height;\n\n  const getTooltipBeforeHeight = (tooltip) => {\n    const beforeStyle = window.getComputedStyle(tooltip, '::before');\n    return (parseFloat(beforeStyle.getPropertyValue('height')) || 0)\n      + (parseFloat(beforeStyle.getPropertyValue('padding-top')) || 0)\n      + (parseFloat(beforeStyle.getPropertyValue('padding-bottom')) || 0);\n  };\n\n  const getTooltipBeforeWidth = (tooltip) => {\n    const beforeStyle = window.getComputedStyle(tooltip, '::before');\n    return (parseFloat(beforeStyle.getPropertyValue('width')) || 0)\n      + (parseFloat(beforeStyle.getPropertyValue('padding-left')) || 0)\n      + (parseFloat(beforeStyle.getPropertyValue('padding-right')) || 0);\n  };\n\n  tooltips.forEach((tooltip) => {\n    const currentPosition = positionClasses.find((cls) => tooltip.classList.contains(cls));\n    if (!tooltip.dataset.originalPosition\n      && currentPosition) tooltip.dataset.originalPosition = currentPosition;\n\n    const rect = tooltip.getBoundingClientRect();\n    const { originalPosition } = tooltip.dataset;\n    const isVerticalPosition = originalPosition === 'top' || originalPosition === 'bottom';\n    const tooltipWidth = getTooltipBeforeWidth(tooltip);\n    const effectiveMaxWidth = isVerticalPosition ? tooltipWidth / 2 : tooltipWidth;\n    const topMargin = originalPosition === 'top' ? tooltipMargin : 0;\n    const tooltipHeight = getTooltipBeforeHeight(tooltip);\n    const effectiveHeight = originalPosition === 'top' ? tooltipHeight + topMargin : tooltipHeight / 2;\n    const willCutoffTop = rect.top - effectiveHeight < headerHeight;\n    const willCutoffBottom = rect.bottom + (originalPosition === 'bottom' ? tooltipHeight + tooltipMargin : 0)\n    > window.innerHeight;\n    const willOverflowRight = rect.right + effectiveMaxWidth + tooltipMargin > viewportWidth;\n    const willOverflowLeft = rect.left - effectiveMaxWidth - tooltipMargin < 0;\n    const willOverflowRightAtBottom = rect.left + tooltipWidth / 2\n     + tooltipMargin > viewportWidth;\n    const willOverflowLeftAtBottom = rect.left - tooltipWidth / 2 - tooltipMargin < 0;\n    const hasOverflowIssues = willOverflowRight || willOverflowLeft || willCutoffTop\n      || willCutoffBottom || willOverflowRightAtBottom || willOverflowLeftAtBottom;\n\n    if ((originalPosition !== currentPosition) && !hasOverflowIssues) {\n      tooltip.classList.remove(...positionClasses);\n      tooltip.classList.add(originalPosition);\n      return;\n    }\n\n    let updatedPosition = originalPosition;\n    if (willOverflowRight && willOverflowRightAtBottom) {\n      updatedPosition = 'left';\n    } else if (willOverflowLeft && willOverflowLeftAtBottom) {\n      updatedPosition = 'right';\n    } else if ((willOverflowRight && willCutoffTop) || (willOverflowLeft && willCutoffTop)) {\n      updatedPosition = (willOverflowRightAtBottom && 'left') || (willOverflowLeftAtBottom && 'right') || 'bottom';\n    } else if ((willOverflowRight !== willOverflowLeft) && !willCutoffBottom) {\n      updatedPosition = willOverflowRight ? 'left' : 'right';\n    } else if (willCutoffTop && ['top', 'left', 'right'].includes(originalPosition)) {\n      updatedPosition = 'bottom';\n    } else if (willCutoffBottom && ['bottom', 'left', 'right'].includes(originalPosition)) {\n      updatedPosition = 'top';\n    }\n\n    if (currentPosition !== updatedPosition) {\n      tooltip.classList.remove(...positionClasses);\n      tooltip.classList.add(updatedPosition);\n    }\n  });\n}\n\nexport default function addTooltipListeners() {\n  ['keydown', 'mouseenter', 'focus', 'mouseleave', 'blur'].forEach((eventType) => {\n    document.addEventListener(eventType, (event) => {\n      const isTooltip = event.target?.matches?.('.milo-tooltip');\n      if (!isTooltip) return;\n\n      if (['mouseenter', 'focus'].includes(eventType)) {\n        event.target.classList.remove('hide-tooltip');\n        setTooltipPosition([event.target]);\n      } else if (['mouseleave', 'blur'].includes(eventType)\n        || (eventType === 'keydown' && event.key === 'Escape')) {\n        event.target.classList.add('hide-tooltip');\n      }\n    }, true);\n  });\n}\n"],"names":["V","r","_document$querySelect","i","g","window","innerWidth","l","b","document","querySelector","getBoundingClientRect","height","forEach","t","e","find","C","classList","contains","dataset","originalPosition","n","o","L","c","getComputedStyle","parseFloat","getPropertyValue","y","w","v","u","P","B","f","top","h","bottom","innerHeight","a","right","d","left","p","m","remove","add","s","includes","F","addEventListener","_i$target","_i$target$matches","target","matches","call","key"],"sourceRoot":""}