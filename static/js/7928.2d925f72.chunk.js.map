{"version":3,"file":"static/js/7928.2d925f72.chunk.js","mappings":"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","sources":["../node_modules/@adobecom/features/seotech/seotech.js"],"sourcesContent":["export const PROD_BASE_URL = 'https://www.adobe.com/seotech/api';\n\nexport const REGEX_ADOBETV = /(?:https?:\\/\\/)?(?:stage-)?video.tv.adobe.com\\/v\\/([\\d]+)/;\nexport const REGEX_YOUTUBE = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com|youtu\\.be)\\/(?:watch\\?v=)?([a-zA-Z0-9_-]+)/;\nexport const VIDEO_OBJECT_PROVIDERS = [\n  { provider: 'adobe', regex: REGEX_ADOBETV },\n  { provider: 'youtube', regex: REGEX_YOUTUBE },\n];\n\nexport function logError(msg, context = {}) {\n  // Build additional context string with pilcrow delineation\n  const additionalInfo = [];\n\n  if (context.bucket) {\n    additionalInfo.push(`bucket:${context.bucket}`);\n  }\n\n  if (context.id) {\n    additionalInfo.push(`id:${context.id}`);\n  }\n\n  if (context.videoUrl) {\n    additionalInfo.push(`videoUrl:${context.videoUrl}`);\n  }\n\n  if (context.pathname) {\n    additionalInfo.push(`pathname:${context.pathname}`);\n  }\n\n  // Combine message with additional context using pilcrow\n  const fullMessage = additionalInfo.length > 0\n    ? `${msg} ¶ ${additionalInfo.join(' ¶ ')}`\n    : msg;\n\n  window.lana?.log(`SEOTECH: ${fullMessage}`, {\n    debug: false,\n    sampleRate: 100,\n    tags: 'seotech',\n    severity: 'error',\n  });\n}\n\nexport function parseVideoUrl(url, providers = VIDEO_OBJECT_PROVIDERS) {\n  for (const { regex, provider } of providers) {\n    const match = url.match(regex);\n    if (match) {\n      return { provider, id: match[1] };\n    }\n  }\n  return null;\n}\n\nexport async function getVideoObject(url, { baseUrl = PROD_BASE_URL } = {}) {\n  const parsedUrl = parseVideoUrl(url);\n  if (!parsedUrl) {\n    throw new Error(`Invalid video url: ${url}`);\n  }\n  const { provider, id } = parsedUrl;\n  const videoObjectUrl = `${baseUrl}/json-ld/types/video-object/providers/${provider}/${id}`;\n\n  const resp = await fetch(videoObjectUrl, { headers: { 'Content-Type': 'application/json' } });\n  const body = await resp?.json();\n\n  if (!resp.ok) {\n    throw new Error(`Failed to fetch video: ${body?.error || resp.statusText} (Status: ${resp.status})`);\n  }\n\n  return body.videoObject;\n}\n\n// https://github.com/orgs/adobecom/discussions/2633\nexport function getRepoByImsClientId(imsClientId) {\n  return {\n    'adobedotcom-cc': 'cc',\n    acrobatmilo: 'dc',\n    bacom: 'bacom',\n    homepage_milo: 'homepage',\n    milo: 'milo',\n  }[imsClientId];\n}\n\nexport async function sha256(message) {\n  const msgUint8 = new TextEncoder().encode(message);\n  const hashBuffer = await window.crypto.subtle.digest('SHA-256', msgUint8);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  const hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n  return hashHex;\n}\n\nexport async function getStructuredData(bucket, id, { baseUrl = PROD_BASE_URL } = {}) {\n  if (!bucket || !id) {\n    throw new Error(`bucket and id are required. Received: bucket=${bucket}, id=${id}`);\n  }\n\n  const url = `${baseUrl}/structured-data/${bucket}/${id}`;\n  const resp = await fetch(url);\n\n  if (!resp) {\n    throw new Error('Network error: No response received');\n  }\n\n  if (!resp.ok) {\n    throw new Error(`HTTP ${resp.status}: ${resp.statusText}`);\n  }\n\n  const body = await resp.json();\n  return body;\n}\n\nexport async function appendScriptTag({ locationUrl, getMetadata, createTag, getConfig }) {\n  const url = new URL(locationUrl);\n  const params = new URLSearchParams(url.search);\n  const baseUrl = params.get('seotech-api-base-url') || undefined;\n  const append = (obj, className) => {\n    if (!obj) return;\n    const attributes = { type: 'application/ld+json' };\n    if (className) attributes.class = className;\n    const script = createTag('script', attributes, JSON.stringify(obj));\n    document.head.append(script);\n  };\n\n  const promises = [];\n  if (getMetadata('seotech-structured-data') === 'on') {\n    const bucket = getRepoByImsClientId(getConfig()?.imsClientId);\n    const id = await sha256(url.pathname?.replace('.html', ''));\n    promises.push(getStructuredData(bucket, id, { baseUrl })\n      .then((obj) => append(obj, 'seotech-structured-data'))\n      .catch(() => logError('Structured data operation failed', {\n        bucket,\n        id,\n        pathname: url.pathname,\n      })));\n  }\n  const videoUrl = getMetadata('seotech-video-url');\n  if (videoUrl) {\n    promises.push(getVideoObject(videoUrl, { baseUrl })\n      .then((videoObject) => append(videoObject, 'seotech-video-url'))\n      .catch(() => logError('Video object operation failed', { videoUrl })));\n  }\n  return Promise.all(promises);\n}\n\nexport default appendScriptTag;\n"],"names":["f","m","b","v","provider","regex","l","t","_window$lana","e","arguments","length","undefined","o","bucket","push","concat","id","videoUrl","pathname","a","join","window","lana","log","debug","sampleRate","tags","severity","y","r","match","$","baseUrl","Error","i","s","fetch","headers","c","json","ok","error","statusText","status","videoObject","g","acrobatmilo","bacom","homepage_milo","milo","E","TextEncoder","encode","crypto","subtle","digest","Array","from","Uint8Array","map","toString","padStart","U","x","_ref","locationUrl","getMetadata","createTag","getConfig","URL","URLSearchParams","search","get","append","n","d","p","type","class","w","JSON","stringify","document","head","u","_a","_r$pathname","imsClientId","replace","then","catch","h","Promise","all","S"],"sourceRoot":""}