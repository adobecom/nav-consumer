{"version":3,"file":"static/js/9335.22e64905.chunk.js","mappings":"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","sources":["../node_modules/@adobecom/blocks/global-navigation/features/profile/dropdown.js"],"sourcesContent":["import { getConfig } from '../../../../utils/utils.js';\nimport { toFragment, trigger, closeAllDropdowns, logErrorFor } from '../../utilities/utilities.js';\nimport { replaceKeyArray } from '../../../../features/placeholders.js';\nimport { getFedsPlaceholderConfig } from '../../../../utils/federated.js';\n\nconst getLanguage = (ietfLocale) => {\n  if (!ietfLocale.length) return 'en';\n\n  const nonStandardLocaleMap = { 'no-NO': 'nb' };\n\n  if (nonStandardLocaleMap[ietfLocale]) {\n    return nonStandardLocaleMap[ietfLocale];\n  }\n\n  return ietfLocale.split('-')[0];\n};\n\nconst decorateProfileLink = (service, path = '') => {\n  const defaultServiceUrls = {\n    adminconsole: 'https://adminconsole.adobe.com',\n    account: 'https://account.adobe.com',\n  };\n\n  if (!service.length || !defaultServiceUrls[service]) return '';\n\n  let serviceUrl;\n  const { env } = getConfig();\n\n  if (!env?.[service]) {\n    serviceUrl = defaultServiceUrls[service];\n  } else {\n    serviceUrl = new URL(defaultServiceUrls[service]);\n    serviceUrl.hostname = env[service];\n  }\n\n  return `${serviceUrl}${path}`;\n};\n\nconst decorateAction = (label, path) => toFragment`<li><a class=\"feds-profile-action\" href=\"${decorateProfileLink('adminconsole', path)}\">${label}</a></li>`;\n\nclass ProfileDropdown {\n  constructor({\n    rawElem,\n    decoratedElem,\n    avatar,\n    sections,\n    buttonElem,\n    openOnInit,\n  } = {}) {\n    this.placeholders = {};\n    this.profileData = {};\n    this.avatar = avatar;\n    this.buttonElem = buttonElem;\n    this.decoratedElem = decoratedElem;\n    this.sections = sections;\n    this.openOnInit = openOnInit;\n    this.localMenu = rawElem.querySelector('h5')?.parentElement;\n    logErrorFor(this.init.bind(this), 'ProfileDropdown.init()', 'errorType=error,module=gnav-profile');\n  }\n\n  async init() {\n    await this.getData();\n    this.setButtonLabel();\n    this.dropdown = this.decorateDropdown();\n    this.addEventListeners();\n\n    if (this.openOnInit) trigger({ element: this.buttonElem });\n\n    this.decoratedElem.append(this.dropdown);\n  }\n\n  async getData() {\n    [\n      [\n        this.placeholders.profileButton,\n        this.placeholders.signOut,\n        this.placeholders.viewAccount,\n        this.placeholders.manageTeams,\n        this.placeholders.manageEnterprise,\n        this.placeholders.profileAvatar,\n      ],\n      { displayName: this.profileData.displayName, email: this.profileData.email },\n    ] = await Promise.all([\n      replaceKeyArray(\n        ['profile-button', 'sign-out', 'view-account', 'manage-teams', 'manage-enterprise', 'profile-avatar'],\n        getFedsPlaceholderConfig(),\n      ),\n      window.adobeIMS.getProfile(),\n    ]);\n  }\n\n  setButtonLabel() {\n    if (this.buttonElem) this.buttonElem.setAttribute('aria-label', this.profileData.displayName);\n  }\n\n  decorateDropdown() {\n    const { locale } = getConfig();\n    const lang = getLanguage(locale.ietf);\n\n    // TODO: the account name and email might need a bit of adaptive behavior;\n    // historically we shrunk the font size and displayed the account name on two lines;\n    // the email had some special logic as well;\n    // for MVP, we took a simpler approach (\"Some very long name, very l...\")\n    this.avatarElem = toFragment`<img\n      data-cs-mask\n      class=\"feds-profile-img\"\n      src=\"${this.avatar}\"\n      tabindex=\"0\"\n      alt=\"${this.placeholders.profileAvatar}\"\n      data-url=\"${decorateProfileLink('account', `profile?lang=${lang}`)}\"></img>`;\n    return toFragment`\n      <div id=\"feds-profile-menu\" class=\"feds-profile-menu\">\n        <a\n          href=\"${decorateProfileLink('account', `?lang=${lang}`)}\"\n          class=\"feds-profile-header\"\n          daa-ll=\"${this.placeholders.viewAccount}\"\n          aria-label=\"${this.placeholders.viewAccount}\"\n        >\n          ${this.avatarElem}\n          <div class=\"feds-profile-details\">\n            <p data-cs-mask class=\"feds-profile-name\">${this.profileData.displayName}</p>\n            <p data-cs-mask class=\"feds-profile-email\">${this.decorateEmail(this.profileData.email)}</p>\n            <p class=\"feds-profile-account\">${this.placeholders.viewAccount}</p>\n          </div>\n        </a>\n        ${this.localMenu ? this.decorateLocalMenu() : ''}\n        <ul class=\"feds-profile-actions\">\n          ${this.sections?.manage?.items?.team?.id ? decorateAction(this.placeholders.manageTeams, '/team') : ''}\n          ${this.sections?.manage?.items?.enterprise?.id ? decorateAction(this.placeholders.manageEnterprise) : ''}\n          ${this.decorateSignOut()}\n        </ul>\n      </div>\n    `;\n  }\n\n  decorateEmail() {\n    const maxCharacters = 12;\n    const emailParts = this.profileData.email.split('@');\n    const username = emailParts[0].length <= maxCharacters\n      ? emailParts[0]\n      : `${emailParts[0].slice(0, maxCharacters)}…`;\n    const domainArr = emailParts[1].split('.');\n    const tld = domainArr.pop();\n    let domain = domainArr.join('.');\n    domain = domain.length <= maxCharacters\n      ? domain\n      : `${domain.slice(0, maxCharacters)}…`;\n\n    return `${username}@${domain}.${tld}`;\n  }\n\n  decorateLocalMenu() {\n    if (this.localMenu) this.localMenu.classList.add('feds-local-menu');\n\n    return this.localMenu;\n  }\n\n  decorateSignOut() {\n    const signOutLink = toFragment`\n      <li>\n        <a href=\"#\" class=\"feds-profile-action\" daa-ll=\"${this.placeholders.signOut}\">${this.placeholders.signOut}</a>\n      </li>\n    `;\n\n    signOutLink.addEventListener('click', (e) => {\n      e.preventDefault();\n      window.dispatchEvent(new Event('feds:signOut'));\n      window.adobeIMS.signOut();\n    });\n\n    return signOutLink;\n  }\n\n  addEventListeners() {\n    this.buttonElem.addEventListener('click', (e) => trigger({ element: this.buttonElem, event: e }));\n    this.buttonElem.addEventListener('keydown', (e) => e.code === 'Escape' && closeAllDropdowns());\n    this.dropdown.addEventListener('keydown', (e) => e.code === 'Escape' && closeAllDropdowns());\n    this.avatarElem.addEventListener('click', (e) => {\n      e.preventDefault();\n      window.location.assign(this.avatarElem.dataset?.url);\n    });\n  }\n}\n\nexport default ProfileDropdown;\n"],"names":["decorateProfileLink","service","path","arguments","length","undefined","defaultServiceUrls","adminconsole","account","serviceUrl","env","getConfig","URL","hostname","concat","decorateAction","label","toFragment","_templateObject","_taggedTemplateLiteral","dropdown_default","constructor","_rawElem$querySelecto","rawElem","decoratedElem","avatar","sections","buttonElem","openOnInit","this","placeholders","profileData","localMenu","querySelector","parentElement","logErrorFor","init","bind","getData","setButtonLabel","dropdown","decorateDropdown","addEventListeners","trigger","element","append","profileButton","signOut","viewAccount","manageTeams","manageEnterprise","profileAvatar","displayName","email","Promise","all","replaceKeyArray","getFedsPlaceholderConfig","window","adobeIMS","getProfile","setAttribute","_this$sections","_this$sections2","locale","lang","ietfLocale","nonStandardLocaleMap","split","getLanguage","ietf","avatarElem","_templateObject2","_templateObject3","decorateEmail","decorateLocalMenu","manage","items","team","id","enterprise","decorateSignOut","emailParts","username","slice","domainArr","tld","pop","domain","join","classList","add","signOutLink","_templateObject4","addEventListener","e","preventDefault","dispatchEvent","Event","event","code","closeAllDropdowns","_this$avatarElem$data","location","assign","dataset","url"],"sourceRoot":""}