{"version":3,"file":"static/js/6235.eb75da2a.chunk.js","mappings":"gKASA,SAASA,IAA6C,IAAjC,OAAEC,EAAA,KAAQC,EAAA,SAAMC,GAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAI,CAAC,EACzB,oBAAbD,GAEXI,MAAML,EAAKM,KAAM,CAAEC,OAAQ,SAAUC,MAAMC,IACzC,IAAKA,EAAKC,GAAI,MAAM,IAAIC,MAAM,kBAC9BV,EAASD,EAAKM,KAAK,IAClBM,OAAM,KACP,MAAMC,EAAYd,EAAA,IAAAe,OAAaf,GAAW,GAC1CE,EAAA,GAAAa,OAAYD,EAAS,KAAI,GAE7B,CAEA,SAASE,EAAaf,EAAMgB,GAC1B,IAAIC,EACAC,EAAWlB,EAAKmB,aAAa,QACjC,GAAID,EAASE,WAAW,QACtB,IAAMF,EAAW,IAAIG,IAAIH,GAAUA,QAAU,CAAE,MAAOI,GAAwC,CAEhG,MACMvB,EADYmB,EAASK,MAAM,KACR,IAAM,KAC/B,IAAI,KAAEjB,GAASN,EACXM,EAAKkB,SAAS,OAAMlB,EAAOA,EAAKmB,MAAM,GAAI,IAC9CzB,EAAKM,KAAA,GAAAQ,OAAUR,GAAIQ,OAAGE,GAEtBhB,EAAK0B,iBAAiB,aAAa,KACjCC,YAAW,KACL3B,EAAK4B,QAAQ,YAAcX,GAC7BnB,EAAY,CACVC,SACAC,OACAC,SAAW4B,IACT7B,EAAKM,KAAOuB,EACZZ,GAAc,CAAI,GAGxB,GACC,IAAI,IAGTjB,EAAK0B,iBAAiB,SAAUJ,KA9ClC,SAA0BvB,GACxB,MAAM+B,EAASC,OAAOC,SAASC,KAAKT,SAAS,cAAgB,mBAAqB,GAElFU,SAASC,OAAA,iBAAArB,OAA0Bf,EAAM,aAAAe,OAD1B,QAC4C,YAAAA,OAAWgB,GACtEM,eAAeC,QAAQ,gBAAiBtC,EAC1C,CA0CIuC,CAAiBvC,GACbkB,IACJK,EAAEiB,iBACFzC,EAAY,CACVC,SACAC,OACAC,SAAW4B,IACTE,OAAOS,KAAKX,EAASP,EAAEmB,SAAWnB,EAAEoB,QAAU,SAAW,QAAQ,IAEnE,GAEN,CAEe,SAARC,EAAsBC,GAC3B,MAAMC,GAASC,EAAAA,EAAAA,aACTC,EAAOH,EAAMI,iBAAiB,gBACpC,GAAID,EAAK5C,OAAS,EAAG,OACrB,MAAM8C,EAAQF,EAAK,GAAGC,iBAAiB,KACvC,IAAKC,EAAM9C,OAAQ,OACnB,MAAM,OAAEJ,GAAW8C,EAAOK,OACpBlC,EAAOe,OAAOC,SAAS1B,KAAK6C,QAAA,GAAArC,OAAWiB,OAAOC,SAASoB,QAAMtC,OAAGf,GAAU,IAAIoD,QAAQ,WAAY,IACxGF,EAAMI,SAASrD,GAASe,EAAaf,EAAMgB,IAC7C,C","sources":["../node_modules/@adobecom/blocks/region-nav/region-nav.js"],"sourcesContent":["import { getConfig } from '../../utils/utils.js';\n\nfunction setInternational(prefix) {\n  const domain = window.location.host.endsWith('.adobe.com') ? 'domain=adobe.com' : '';\n  const maxAge = 365 * 24 * 60 * 60; // max-age in seconds for 365 days\n  document.cookie = `international=${prefix};max-age=${maxAge};path=/;${domain}`;\n  sessionStorage.setItem('international', prefix);\n}\n\nfunction handleEvent({ prefix, link, callback } = {}) {\n  if (typeof callback !== 'function') return;\n\n  fetch(link.href, { method: 'HEAD' }).then((resp) => {\n    if (!resp.ok) throw new Error('request failed');\n    callback(link.href);\n  }).catch(() => {\n    const prefixUrl = prefix ? `/${prefix}` : '';\n    callback(`${prefixUrl}/`);\n  });\n}\n\nfunction decorateLink(link, path) {\n  let hrefAdapted;\n  let pathname = link.getAttribute('href');\n  if (pathname.startsWith('http')) {\n    try { pathname = new URL(pathname).pathname; } catch (e) { /* href does not contain domain */ }\n  }\n  const linkParts = pathname.split('/');\n  const prefix = linkParts[1] || 'us';\n  let { href } = link;\n  if (href.endsWith('/')) href = href.slice(0, -1);\n  link.href = `${href}${path}`;\n\n  link.addEventListener('mouseover', () => {\n    setTimeout(() => {\n      if (link.matches(':hover') && !hrefAdapted) {\n        handleEvent({\n          prefix,\n          link,\n          callback: (newHref) => {\n            link.href = newHref;\n            hrefAdapted = true;\n          },\n        });\n      }\n    }, 100);\n  });\n\n  link.addEventListener('click', (e) => {\n    setInternational(prefix);\n    if (hrefAdapted) return;\n    e.preventDefault();\n    handleEvent({\n      prefix,\n      link,\n      callback: (newHref) => {\n        window.open(newHref, e.ctrlKey || e.metaKey ? '_blank' : '_self');\n      },\n    });\n  });\n}\n\nexport default function init(block) {\n  const config = getConfig();\n  const divs = block.querySelectorAll(':scope > div');\n  if (divs.length < 2) return;\n  const links = divs[1].querySelectorAll('a');\n  if (!links.length) return;\n  const { prefix } = config.locale;\n  const path = window.location.href.replace(`${window.location.origin}${prefix}`, '').replace('#langnav', '');\n  links.forEach((link) => decorateLink(link, path));\n}\n"],"names":["handleEvent","prefix","link","callback","arguments","length","undefined","fetch","href","method","then","resp","ok","Error","catch","prefixUrl","concat","decorateLink","path","hrefAdapted","pathname","getAttribute","startsWith","URL","e","split","endsWith","slice","addEventListener","setTimeout","matches","newHref","domain","window","location","host","document","cookie","sessionStorage","setItem","setInternational","preventDefault","open","ctrlKey","metaKey","init","block","config","getConfig","divs","querySelectorAll","links","locale","replace","origin","forEach"],"sourceRoot":""}