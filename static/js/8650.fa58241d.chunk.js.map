{"version":3,"file":"static/js/8650.fa58241d.chunk.js","mappings":"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","sources":["../node_modules/@adobecom/blocks/region-nav/region-nav.js"],"sourcesContent":["import { getConfig, getLanguage, getLocale, loadLanguageConfig } from '../../utils/utils.js';\n\nconst queriedPages = [];\n\nfunction setInternational(prefix) {\n  const domain = window.location.host.endsWith('.adobe.com') ? 'domain=adobe.com' : '';\n  const maxAge = 365 * 24 * 60 * 60; // max-age in seconds for 365 days\n  document.cookie = `international=${prefix};max-age=${maxAge};path=/;${domain}`;\n  sessionStorage.setItem('international', prefix);\n}\n\nfunction handleEvent({ prefix, link, callback } = {}) {\n  if (typeof callback !== 'function') return;\n\n  const existingPage = queriedPages.find((page) => page.href === link.href);\n  if (existingPage) {\n    callback(existingPage.resp.ok\n      ? link.href\n      : `${prefix ? `/${prefix}` : ''}/`);\n    return;\n  }\n  fetch(link.href, { method: 'HEAD' }).then((resp) => {\n    queriedPages.push({ href: link.href, resp });\n    if (!resp.ok) throw new Error('request failed');\n    callback(link.href);\n  }).catch(() => {\n    callback(`${prefix ? `/${prefix}` : ''}/`);\n  });\n}\n\nexport function decorateLink(link, path, localeToLanguageMap = []) {\n  let hrefAdapted;\n  let pathname = link.getAttribute('href');\n  if (pathname.startsWith('http')) {\n    try { pathname = new URL(pathname).pathname; } catch (e) { /* href does not contain domain */ }\n  }\n\n  const { languageMap, languages, locales } = getConfig();\n  const mergedLocales = { ...locales };\n  localeToLanguageMap.forEach((lang) => {\n    const { locale } = lang;\n    if (!mergedLocales[locale]) {\n      mergedLocales[locale] = { ietf: 'none', tk: 'none' };\n    }\n  });\n\n  const currentLocaleObj = languages\n    ? getLanguage(languages, mergedLocales, pathname) : getLocale(mergedLocales, pathname);\n  const prefix = currentLocaleObj.prefix.replace('/', '');\n\n  let { href } = link;\n  if (href.endsWith('/')) href = href.slice(0, -1);\n\n  if (languageMap && !locales[prefix] && (languages && !languages[prefix])) {\n    const valueInMap = languageMap[prefix];\n    href = href.replace(`/${prefix}`, valueInMap ? `/${valueInMap}` : '');\n  }\n  link.href = `${href}${path}`;\n\n  link.addEventListener('mouseover', () => {\n    setTimeout(() => {\n      if (link.matches(':hover') && !hrefAdapted) {\n        handleEvent({\n          prefix,\n          link,\n          callback: (newHref) => {\n            link.href = newHref;\n            hrefAdapted = true;\n          },\n        });\n      }\n    }, 100);\n  });\n\n  link.addEventListener('click', (e) => {\n    setInternational(prefix === '' ? 'us' : prefix);\n    if (hrefAdapted) return;\n    e.preventDefault();\n    handleEvent({\n      prefix,\n      link,\n      callback: (newHref) => {\n        window.open(newHref, e.ctrlKey || e.metaKey ? '_blank' : '_self');\n      },\n    });\n  });\n}\n\nexport default async function init(block) {\n  const { localeToLanguageMap } = await loadLanguageConfig();\n  const config = getConfig();\n  const divs = block.querySelectorAll(':scope > div');\n  if (divs.length < 2) return;\n  const links = divs[1].querySelectorAll('a');\n  if (!links.length) return;\n  const { prefix } = config.locale;\n  const { location } = window;\n  const hasPrefix = location.pathname.startsWith(`${prefix}/`);\n  const path = location.href.replace(location.origin + (hasPrefix ? prefix : ''), '').replace('#langnav', '');\n  links.forEach((link) => decorateLink(link, path, localeToLanguageMap));\n}\n"],"names":["queriedPages","handleEvent","prefix","link","callback","arguments","length","undefined","existingPage","find","page","href","resp","ok","concat","fetch","method","then","push","Error","catch","decorateLink","path","hrefAdapted","localeToLanguageMap","pathname","getAttribute","startsWith","URL","e","languageMap","languages","locales","getConfig","mergedLocales","forEach","lang","locale","ietf","tk","getLanguage","getLocale","replace","endsWith","slice","valueInMap","addEventListener","setTimeout","matches","newHref","domain","window","location","host","document","cookie","sessionStorage","setItem","setInternational","preventDefault","open","ctrlKey","metaKey","init","block","loadLanguageConfig","config","divs","querySelectorAll","links","hasPrefix","origin"],"sourceRoot":""}