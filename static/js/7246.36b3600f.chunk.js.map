{"version":3,"file":"static/js/7246.36b3600f.chunk.js","mappings":"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","sources":["../node_modules/@adobecom/utils/logWebVitals.js"],"sourcesContent":["const LANA_CLIENT_ID = 'pageperf';\n\nlet lanaSent;\n\nfunction sendToLana(lanaData) {\n  if (lanaSent) return;\n  const ua = window.navigator.userAgent;\n\n  Object.assign(lanaData, {\n    chromeVer: ua.match(/Chrome\\/(\\d+\\.\\d+\\.\\d+\\.\\d+)/)?.[1] || '',\n    country: sessionStorage.getItem('akamai') || '',\n    // eslint-disable-next-line compat/compat\n    downlink: window.navigator?.connection?.downlink || '',\n    loggedIn: window.adobeIMS?.isSignedInUser() || false,\n    os: (ua.match(/Windows/) && 'win')\n      || (ua.match(/Mac/) && 'mac')\n      || (ua.match(/Android/) && 'android')\n      || (ua.match(/Linux/) && 'linux')\n      || '',\n    windowHeight: window.innerHeight,\n    windowWidth: window.innerWidth,\n    url: `${window.location.host}${window.location.pathname}`,\n  });\n\n  lanaData.cls ||= 0;\n  const lanaDataStr = Object.entries(lanaData)\n    .sort(([a], [b]) => a.localeCompare(b))\n    .map(([key, value]) => `${key}=${value}`)\n    .join(',');\n\n  window.lana.log(lanaDataStr, {\n    clientId: LANA_CLIENT_ID,\n    sampleRate: 100,\n  });\n\n  lanaSent = true;\n}\n\nfunction observeCLS(lanaData) {\n  let cls = 0;\n  /* c8 ignore start */\n  new PerformanceObserver((entryList) => {\n    for (const entry of entryList.getEntries()) {\n      if (!entry.hadRecentInput) cls += entry.value;\n    }\n    lanaData.cls = cls.toPrecision(4);\n  }).observe({ type: 'layout-shift', buffered: true });\n}\n\nfunction getElementInfo(el) {\n  const elSrc = el.src || el.currentSrc || el.href || el.poster;\n  if (elSrc) {\n    try {\n      const srcUrl = new URL(elSrc);\n      return srcUrl.origin === window.location.origin ? srcUrl.pathname : srcUrl.href;\n    } catch {\n      // fall through\n    }\n  }\n  const elHtml = el.outerHTML.replaceAll(',', '');\n  if (elHtml.length <= 100) return elHtml;\n  return `${el.outerHTML.substring(0, 100)}...`;\n}\n\nfunction isFragmentFromMep(fragPath, mep) {\n  return mep.experiments?.some(({ selectedVariant }) => {\n    const { commands = [], fragments = [] } = selectedVariant || {};\n\n    return commands.some((cmd) => {\n      try {\n        return new URL(cmd.target).pathname === fragPath;\n      } catch {\n        return false;\n      }\n    }) || fragments.some((cmd) => cmd?.val === fragPath);\n  });\n}\n\nconst boolStr = (val) => `${!!val}`;\n\nfunction observeLCP(lanaData, delay, mep) {\n  const sectionOne = document.querySelector('main > div');\n  new PerformanceObserver((list) => {\n    const entries = list.getEntries();\n    const lastEntry = entries[entries.length - 1]; // Use the latest LCP candidate\n    lanaData.lcp = parseInt(lastEntry.startTime, 10);\n    const lcpEl = lastEntry.element;\n    lanaData.lcpElType = lcpEl.nodeName.toLowerCase();\n    lanaData.lcpEl = getElementInfo(lcpEl);\n    lanaData.lcpSectionOne = boolStr(sectionOne.contains(lcpEl));\n    const closestFrag = lcpEl.closest('.fragment');\n    lanaData.isFrag = boolStr(closestFrag);\n    if (closestFrag) {\n      lanaData.isMep = boolStr(isFragmentFromMep(closestFrag.dataset.path, mep));\n    } else {\n      lanaData.isMep = 'false';\n    }\n\n    setTimeout(() => {\n      sendToLana(lanaData);\n    }, parseInt(delay, 10));\n  }).observe({ type: 'largest-contentful-paint', buffered: true });\n  /* c8 ignore stop */\n}\n\nfunction logMepExperiments(lanaData, mep) {\n  mep?.experiments?.forEach((exp, idx) => {\n    // only log manifests that affect the page\n    if (exp.selectedVariantName === 'default') return;\n    lanaData[`manifest${idx + 1}path`] = exp.manifestPath;\n    lanaData[`manifest${idx + 1}selected`] = exp.selectedVariantName;\n  });\n}\n\nexport default function webVitals(mep, { delay = 1000, sampleRate = 50 } = {}) {\n  const isChrome = () => {\n    const nav = window.navigator;\n    return nav.userAgent.includes('Chrome') && nav.vendor.includes('Google');\n  };\n  if (!isChrome() || Math.random() * 100 > sampleRate) return;\n  const getConsent = () => window.adobePrivacy?.activeCookieGroups().indexOf('C0002') !== -1;\n  function handleEvent() {\n    if (!getConsent()) return;\n    const lanaData = {};\n    logMepExperiments(lanaData, mep);\n    observeCLS(lanaData);\n    observeLCP(lanaData, delay, mep);\n  }\n  if (getConsent()) {\n    handleEvent();\n    return;\n  }\n  window.addEventListener('adobePrivacy:PrivacyConsent', handleEvent, { once: true });\n  window.addEventListener('adobePrivacy:PrivacyCustom', handleEvent, { once: true });\n}\n"],"names":["lanaSent","LANA_CLIENT_ID","boolStr","val","concat","observeLCP","lanaData","delay","mep","sectionOne","document","querySelector","PerformanceObserver","list","entries","getEntries","lastEntry","length","lcp","parseInt","startTime","lcpEl","element","lcpElType","nodeName","toLowerCase","el","elSrc","src","currentSrc","href","poster","srcUrl","URL","origin","window","location","pathname","elHtml","outerHTML","replaceAll","substring","getElementInfo","lcpSectionOne","contains","closestFrag","closest","isFrag","isMep","fragPath","_mep$experiments","experiments","some","_ref4","selectedVariant","commands","fragments","cmd","target","isFragmentFromMep","dataset","path","setTimeout","_ua$match","_window$navigator","_window$adobeIMS","ua","navigator","userAgent","Object","assign","chromeVer","match","country","sessionStorage","getItem","downlink","connection","loggedIn","adobeIMS","isSignedInUser","os","windowHeight","innerHeight","windowWidth","innerWidth","url","host","cls","lanaDataStr","sort","_ref","_ref2","a","b","localeCompare","map","_ref3","key","value","join","lana","log","clientId","sampleRate","sendToLana","observe","type","buffered","webVitals","arguments","undefined","isChrome","nav","includes","vendor","Math","random","getConsent","_window$adobePrivacy","adobePrivacy","activeCookieGroups","indexOf","handleEvent","_mep$experiments2","forEach","exp","idx","selectedVariantName","manifestPath","logMepExperiments","entryList","entry","hadRecentInput","toPrecision","observeCLS","addEventListener","once"],"sourceRoot":""}