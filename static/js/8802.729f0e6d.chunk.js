"use strict";(self.webpackChunknav_consumer=self.webpackChunknav_consumer||[]).push([[8802,561],{561:(e,n,t)=>{t.r(n),t.d(n,{dynamicNav:()=>i,foundDisableValues:()=>s});var a=t(4114);function s(){const e=(0,a.getMetadata)("dynamic-nav-disable");if(!e)return!1;const n=e.split(",").map((e=>e.split(";"))).filter((e=>{let[n,t]=e;const s=(0,a.getMetadata)(n.toLowerCase());return s&&s.toLowerCase()===t.toLowerCase()}));return!!n.length&&n}function i(e,n){if(s())return e;const t=(0,a.getMetadata)("dynamic-nav");return"entry"===t?(window.sessionStorage.setItem("gnavSource",e),window.sessionStorage.setItem("dynamicNavKey",n),e):"on"!==t||n!==window.sessionStorage.getItem("dynamicNavKey")?e:window.sessionStorage.getItem("gnavSource")||e}},8802:(e,n,t)=>{t.r(n),t.d(n,{ACTIVE:()=>i,ENABLED:()=>o,INACTIVE:()=>c,default:()=>p,tooltipInfo:()=>r});var a=t(561),s=t(4114),i=(t(5769),"active"),o="enabled",c="inactive",r={active:"Displayed in green, this status appears when a user is on an entry page or a page with the Dynamic Nav enabled, indicating that the nav is fully functioning.",enabled:'Displayed in yellow, this status indicates that the Dynamic Nav is set to "on," but the user has not yet visited an entry page.',inactive:"Displayed in red, this status indicates that the Dynamic Nav is either not configured or has been disabled."},d=e=>{if(!e.startsWith("https://"))return"";return new URL(e).pathname},l=e=>{const n=window.sessionStorage.getItem("gnavSource"),t=(0,s.getMetadata)("gnav-source")||"Metadata not found: site gnav source",l=(0,s.getMetadata)("dynamic-nav"),p=((e,n,t)=>"on"===e&&n||t)(l,n,t),u=(0,s.getMetadata)("dynamic-nav-disable"),g=(0,a.foundDisableValues)(),v=((e,n,t)=>"entry"===e?i:n?c:"on"===e&&t?i:"on"!==e||t?c:o)(l,g.length>=1,n),y=(0,s.createTag)("div",{class:"dynamic-nav-status"});return y.innerHTML='\n    <span class="title"><span class="dns-badge"></span>Dynamic Nav</span>\n    <section class="details hidden">\n      <span class="dns-close"></span>\n      <div class="message additional-info">\n        <p>Additional Info:\n          <span>'.concat(r[v],'</span>\n        </p>\n      </div>\n      <p class="status">Status: <span>').concat(v,'</span></p> \n      <p class="setting">Setting: <span>').concat(l,'</span></p>\n      <p class="consumer-key">Consumer key: <span>').concat(e,'</span></p>\n      <div class="nav-source-info">\n        <p>Authored and stored source match: <span>').concat(t===p,"</span></p>\n        <p>Authored Nav Source:\n        <span>").concat(d(t),"</span></p>\n        <p>Stored Nav Source:\n        <span>").concat(d(p),'</span></p>\n      </div>\n      <div class="disable-values">\n      </div>\n    </section>\n  '),function(e,n){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!e||0===e.length)return;const a=e.split(","),i=(0,s.createTag)("table"),o=Array.isArray(t)&&t.flat();i.innerHTML="\n      <caption>Disable Values</caption>\n      <thead>\n        <tr>\n          <th>Key</th>\n          <th>Value</th>\n          <th>Match?</th>\n        </tr>\n      </thead>\n      <tbody>\n      </tbody>";const c=i.querySelector("tbody");a.forEach((e=>{const n=(0,s.createTag)("tr"),[t,a]=e.split(";"),i=(0,s.createTag)("td"),r=(0,s.createTag)("td"),d=(0,s.createTag)("td");i.innerText=t,r.innerText=a,d.innerText=o&&o.includes(a)?"yes":"no",n.append(i,r,d),c.append(n)})),n.append(i)}(u,y.querySelector(".disable-values"),g),y.classList.add(v),y.addEventListener("click",(()=>{y.querySelector(".details").classList.toggle("hidden"),y.querySelector(".dns-badge").classList.toggle("dns-open")})),y};async function p(){const{dynamicNavKey:e}=(0,s.getConfig)(),n=l(e),t=document.querySelector(".feds-topnav"),a=document.querySelector(".feds-nav-wrapper");n.querySelector(".dns-close").addEventListener("click",(()=>{t.removeChild(n)})),a.after(n)}}}]);
//# sourceMappingURL=8802.729f0e6d.chunk.js.map