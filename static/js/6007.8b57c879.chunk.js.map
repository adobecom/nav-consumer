{"version":3,"file":"static/js/6007.8b57c879.chunk.js","mappings":"mNAYaA,EAAiBC,MAAOC,EAAWC,EAAaC,EAAYC,KAAc,IAAAC,EAAAC,EAAAC,EACrF,MAAMC,EAASP,IACTQ,EAAkC,QAAlCJ,EAASH,EAAY,sBAAa,IAAAG,OAAA,EAAzBA,EAA4BK,cAC3C,IAAKD,IAAW,CAAC,SAAU,UAAW,MAAME,SAASF,IACxC,QAARH,EAACE,EAAOC,cAAA,IAAAH,IAAPA,EAAeM,IAAc,QAARL,EAACC,EAAOC,cAAA,IAAAF,IAAPA,EAAeM,QAAS,OAEpD,MAAMC,EAAkBC,OAAOC,WAAW,sBAAsBC,QAChE,GAAe,WAAXR,GAAuBK,EAAiB,OAC5C,GAAe,YAAXL,IAAyBK,EAAiB,OAE9C,MAAM,eAAEI,SAAyB,+BACjCA,EAAeV,EAAQL,EAAYC,EAAWF,EAAY,EAG/CiB,EAAcnB,MAAOC,EAAWE,KAAe,IAAAiB,EAAAC,EAC1D,MACMC,EAAM,CACV,WAAY,4CACZ,WAAY,4CACZ,WAAY,4CACZ,WAAY,6CAGRC,EACwD,QADxDH,EAAa,OAAAE,QAAA,IAAAA,OAAA,EAAAA,EAAME,OAAOC,KAAKH,GAClCI,MAAMC,GAAaZ,OAAOa,SAASC,KAAKlB,SAASgB,aAAU,IAAAP,EAAAA,GAC5C,QAAVC,EAAApB,WAAU,IAAAoB,OAAA,EAAVA,EAAaS,YAVR,uCAWbf,OAAOgB,WAAa,CAClBC,QAAS,CAAET,cACXU,kBAAkB,GAEpB9B,EAAW,wFAGX+B,SAASC,iBAAiB,SAAUC,IACmB,IAAAC,EAAjDD,EAAME,OAAOC,QAAQ,6BACvBH,EAAMI,iBACC,QAAPH,EAAAtB,OAAO0B,oBAAA,IAAAJ,GAAPA,EAAqBK,uBACvB,GACA,EAGSC,EAAkB3C,MAAOE,EAAa0C,EAASzC,EAAYF,KAAc,IAAA4C,EAAAC,EACpF,MAAMC,EAAwC,QAAxCF,EAAc3C,EAAY,uBAAc,IAAA2C,OAAA,EAA1BA,EAA6BnC,cACjD,GAAW,QAAPoC,EAAA/B,OAAOiC,gBAAA,IAAAF,GAAPA,EAAiBG,mBAAqB,CAAC,SAAU,UAAW,MAAMtC,SAASoC,GAAc,OAC7F,MAAMjC,EAAkBC,OAAOC,WAAW,sBAAsBC,QAChE,GAAoB,WAAhB8B,GAA4BjC,EAAiB,OACjD,GAAoB,YAAhBiC,IAA8BjC,EAAiB,OAEnD,MAAQoC,QAASC,SAA0B,6BAC3CA,EAAgBP,EAAS1C,EAAaC,EAAYF,EAAU,EA6BvDmD,EAvBa,SAAAC,GAAA,IAClBpD,EACAC,EACAC,EACAC,EACAwC,GACFS,EAAGC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAQ,WAAS,IAAIG,SAASC,IAC/BC,YAAW,KAIT,GAHAzC,EAAYlB,EAAWE,GACvBJ,EAAeE,EAAWC,EAAaC,EAAYC,GACnDuC,EAAgBzC,EAAa0C,EAASzC,EAAYF,GAChB,OAA9BC,EAAY,cAAwB,KAAA2D,EACtC,MAAM,OAAEC,GAAW7D,IACb8D,EAAA,GAAAC,OAAUF,EAAOG,YAAW,kBAC5BC,EAAkB,QAAlBL,EAAWC,EAAOK,YAAA,IAAAN,OAAA,EAAPA,EAAaO,MAAM,KAAK,GACzC,+BAAoCC,MAAMC,IAAUA,EAAIpB,QAAQa,EAAMG,GAAWP,EAAQW,EAAI,GAC/F,MACEX,EAAQ,MAEV,+BAAgCU,MAAKE,IAAA,IAAC,UAAEC,GAAUD,EAAA,OAAMC,GAAW,MAClElB,EAAM,GACV,C","sources":["../node_modules/@adobecom/scripts/delayed.js"],"sourcesContent":["/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport const loadJarvisChat = async (getConfig, getMetadata, loadScript, loadStyle) => {\n  const config = getConfig();\n  const jarvis = getMetadata('jarvis-chat')?.toLowerCase();\n  if (!jarvis || !['mobile', 'desktop', 'on'].includes(jarvis)\n    || !config.jarvis?.id || !config.jarvis?.version) return;\n\n  const desktopViewport = window.matchMedia('(min-width: 900px)').matches;\n  if (jarvis === 'mobile' && desktopViewport) return;\n  if (jarvis === 'desktop' && !desktopViewport) return;\n\n  const { initJarvisChat } = await import('../features/jarvis-chat.js');\n  initJarvisChat(config, loadScript, loadStyle, getMetadata);\n};\n\nexport const loadPrivacy = async (getConfig, loadScript) => {\n  const acom = '7a5eb705-95ed-4cc4-a11d-0cc5760e93db';\n  const ids = {\n    'hlx.page': '3a6a37fe-9e07-4aa9-8640-8f358a623271-test',\n    'hlx.live': '926b16ce-cc88-4c6a-af45-21749f3167f3-test',\n    'aem.page': '01930689-3b6a-7d5f-9797-8df2c3901a05-test',\n    'aem.live': '01930691-c4e5-75ba-aa0e-721e1213c139-test',\n  };\n\n  const otDomainId = ids?.[Object.keys(ids)\n    .find((domainId) => window.location.host.includes(domainId))]\n      ?? (getConfig()?.privacyId || acom);\n  window.fedsConfig = {\n    privacy: { otDomainId },\n    documentLanguage: true,\n  };\n  loadScript('https://www.adobe.com/etc.clientlibs/globalnav/clientlibs/base/privacy-standalone.js');\n\n  // Privacy triggers can exist anywhere on the page and can be added at any time\n  document.addEventListener('click', (event) => {\n    if (event.target.closest('a[href*=\"#openPrivacy\"]')) {\n      event.preventDefault();\n      window.adobePrivacy?.showPreferenceCenter();\n    }\n  });\n};\n\nexport const loadGoogleLogin = async (getMetadata, loadIms, loadScript, getConfig) => {\n  const googleLogin = getMetadata('google-login')?.toLowerCase();\n  if (window.adobeIMS?.isSignedInUser() || !['mobile', 'desktop', 'on'].includes(googleLogin)) return;\n  const desktopViewport = window.matchMedia('(min-width: 900px)').matches;\n  if (googleLogin === 'mobile' && desktopViewport) return;\n  if (googleLogin === 'desktop' && !desktopViewport) return;\n\n  const { default: initGoogleLogin } = await import('../features/google-login.js');\n  initGoogleLogin(loadIms, getMetadata, loadScript, getConfig);\n};\n\n/**\n * Executes everything that happens a lot later, without impacting the user experience.\n */\nconst loadDelayed = ([\n  getConfig,\n  getMetadata,\n  loadScript,\n  loadStyle,\n  loadIms,\n], DELAY = 3000) => new Promise((resolve) => {\n  setTimeout(() => {\n    loadPrivacy(getConfig, loadScript);\n    loadJarvisChat(getConfig, getMetadata, loadScript, loadStyle);\n    loadGoogleLogin(getMetadata, loadIms, loadScript, getConfig);\n    if (getMetadata('interlinks') === 'on') {\n      const { locale } = getConfig();\n      const path = `${locale.contentRoot}/keywords.json`;\n      const language = locale.ietf?.split('-')[0];\n      import('../features/interlinks.js').then((mod) => { mod.default(path, language); resolve(mod); });\n    } else {\n      resolve(null);\n    }\n    import('../utils/samplerum.js').then(({ sampleRUM }) => sampleRUM());\n  }, DELAY);\n});\n\nexport default loadDelayed;\n"],"names":["loadJarvisChat","async","getConfig","getMetadata","loadScript","loadStyle","_getMetadata","_config$jarvis","_config$jarvis2","config","jarvis","toLowerCase","includes","id","version","desktopViewport","window","matchMedia","matches","initJarvisChat","loadPrivacy","_ids$Object$keys$find","_getConfig","ids","otDomainId","Object","keys","find","domainId","location","host","privacyId","fedsConfig","privacy","documentLanguage","document","addEventListener","event","_window$adobePrivacy","target","closest","preventDefault","adobePrivacy","showPreferenceCenter","loadGoogleLogin","loadIms","_getMetadata2","_window$adobeIMS","googleLogin","adobeIMS","isSignedInUser","default","initGoogleLogin","delayed_default","_ref","DELAY","arguments","length","undefined","Promise","resolve","setTimeout","_locale$ietf","locale","path","concat","contentRoot","language","ietf","split","then","mod","_ref2","sampleRUM"],"sourceRoot":""}