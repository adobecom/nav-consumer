{"version":3,"file":"static/js/1813.bc47c309.chunk.js","mappings":"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","sources":["../../milo/libs/features/georouting/georouting.js"],"sourcesContent":["export const getCookie = (name) => document.cookie\n  .split('; ')\n  .find((row) => row.startsWith(`${name}=`))\n  ?.split('=')[1];\n\nconst geo2jsonp = (callback) => {\n  // Setup a unique name that can be called & destroyed\n  const callbackName = `jsonp_${Math.round(100000 * Math.random())}`;\n\n  const script = document.createElement('script');\n  script.src = `https://geo2.adobe.com/json/?callback=${callbackName}`;\n\n  // Define the function that the script will call\n  window[callbackName] = (data) => {\n    delete window[callbackName];\n    document.body.removeChild(script);\n    callback(data);\n  };\n\n  document.body.appendChild(script);\n};\n\nconst getAkamaiCode = () => new Promise((resolve) => {\n  const urlParams = new URLSearchParams(window.location.search);\n  const akamaiLocale = urlParams.get('akamaiLocale') || sessionStorage.getItem('akamai');\n  if (akamaiLocale !== null) {\n    resolve(akamaiLocale.toLowerCase());\n  } else {\n    geo2jsonp((data) => {\n      const code = data.country.toLowerCase();\n      sessionStorage.setItem('akamai', code);\n      resolve(code);\n    });\n  }\n});\n\n// Determine if any of the locales can be linked to.\nasync function getAvailableLocales(locales, config, getMetadata) {\n  const fallback = getMetadata('fallbackrouting') || config.fallbackRouting;\n\n  const { contentRoot } = config.locale;\n  const path = window.location.href.replace(contentRoot, '');\n\n  const availableLocales = [];\n  const pagesExist = [];\n  for (const [index, locale] of locales.entries()) {\n    const prefix = locale.prefix ? `/${locale.prefix}` : '';\n    const localeRoot = `${prefix}${config.contentRoot ?? ''}`;\n    const localePath = `${localeRoot}${path}`;\n\n    const pageExistsRequest = fetch(localePath, { method: 'HEAD' }).then((resp) => {\n      if (resp.ok) {\n        locale.url = localePath;\n        availableLocales[index] = locale;\n      } else if (fallback !== 'off') {\n        locale.url = `${localeRoot}/`;\n        availableLocales[index] = locale;\n      }\n    });\n    pagesExist.push(pageExistsRequest);\n  }\n  if (pagesExist.length > 0) await Promise.all(pagesExist);\n\n  return availableLocales.filter((a) => !!a);\n}\n\nfunction buildText(locales, config, createTag) {\n  const fragment = new DocumentFragment();\n  const wrapper = createTag('div', { class: 'text-wrapper' });\n  locales.forEach((locale) => {\n    const lang = config.locales[locale.prefix]?.ietf ?? '';\n    const text = createTag('p', { class: 'locale-text', lang }, locale.text);\n    wrapper.append(text);\n  });\n  fragment.append(wrapper);\n  return fragment;\n}\n\nfunction buildLinks(locales, config, createTag) {\n  const fragment = new DocumentFragment();\n  const wrapper = createTag('div', { class: 'link-wrapper' });\n  locales.forEach((locale) => {\n    const lang = config.locales[locale.prefix]?.ietf ?? '';\n    const link = createTag('a', { class: 'locale-link', lang, href: locale.url }, locale.button);\n    const para = createTag('p', { class: 'locale-link-wrapper' }, link);\n    wrapper.append(para);\n    link.addEventListener('click', () => {\n      const modPrefix = locale.prefix || 'us';\n      // set cookie so legacy code on adobecom still works properly.\n      document.cookie = `international=${modPrefix};path=/`;\n      sessionStorage.setItem('international', modPrefix);\n      link.closest('.dialog-modal').dispatchEvent(new Event('closeModal'));\n    });\n  });\n  fragment.append(wrapper);\n  return fragment;\n}\n\nfunction getCodes(data) {\n  return data.akamaiCodes.split(',').map((a) => a.toLowerCase().trim());\n}\n\nfunction getMatches(data, suppliedCode) {\n  return data.reduce((rdx, locale) => {\n    const localeCodes = getCodes(locale);\n    if (localeCodes.some((code) => code === suppliedCode)) rdx.push(locale);\n    return rdx;\n  }, []);\n}\n\nasync function getDetails(currentPage, localeMatches, config, createTag, getMetadata) {\n  const availableLocales = await getAvailableLocales(localeMatches, config, getMetadata);\n\n  if (availableLocales && availableLocales.length > 0) {\n    currentPage.url = window.location.hash ? document.location.href : '#';\n    const imgUrl = `${config.miloLibs || config.codeRoot}/img/icons/Smock_GlobeOutline_18_N.svg`;\n    const worldIcon = createTag('img', { src: imgUrl, class: 'world-icon' });\n    const text = buildText([...availableLocales, currentPage], config, createTag);\n    const links = buildLinks([...availableLocales, currentPage], config, createTag);\n    const detailsFragment = new DocumentFragment();\n    detailsFragment.append(worldIcon, text, links);\n    return detailsFragment;\n  }\n  return null;\n}\n\nasync function showModal(details) {\n  const { getModal } = await import('../../blocks/modal/modal.js');\n  return getModal(null, { class: 'locale-modal', id: 'locale-modal', content: details, closeEvent: 'closeModal' });\n}\n\nexport default async function loadGeoRouting(config, createTag, getMetadata, geoDetails = {}) {\n  const { locale } = config;\n\n  const urlLocale = locale.prefix.replace('/', '');\n  const storedInter = sessionStorage.getItem('international') || getCookie('international');\n  const storedLocale = storedInter === 'us' ? '' : storedInter;\n\n  const urlGeoData = geoDetails.data?.find((d) => d.prefix === urlLocale);\n  if (!urlGeoData) return;\n\n  if (storedLocale || storedLocale === '') {\n    // Show modal when url and cookie disagree\n    if (urlLocale.split('_')[0] !== storedLocale.split('_')[0]) {\n      const localeMatches = geoDetails.data?.filter((d) => d.prefix === storedLocale);\n      const details = await getDetails(urlGeoData, localeMatches, config, createTag, getMetadata);\n      if (details) { await showModal(details); }\n    }\n    return;\n  }\n\n  // Show modal when derived countries from url locale and akamai disagree\n  const akamaiCode = await getAkamaiCode();\n  if (akamaiCode && !getCodes(urlGeoData).includes(akamaiCode)) {\n    const localeMatches = getMatches(geoDetails.data, akamaiCode);\n    const details = await getDetails(urlGeoData, localeMatches, config, createTag, getMetadata);\n    if (details) { await showModal(details); }\n  }\n}\n"],"names":["x","o","_document$cookie$spli","document","cookie","split","find","e","startsWith","concat","b","getAkamaiCode","Promise","t","URLSearchParams","window","location","search","get","sessionStorage","getItem","toLowerCase","Math","round","random","createElement","src","n","body","removeChild","appendChild","g","l","country","setItem","w","akamaiCodes","map","trim","async","m","a","fallbackRouting","contentRoot","locale","href","replace","r","s","i","c","entries","_e$contentRoot","p","prefix","u","h","fetch","method","then","k","ok","url","push","length","all","filter","L","hash","miloLibs","codeRoot","class","DocumentFragment","forEach","_e$locales$a$prefix$i","_e$locales$a$prefix","locales","ietf","lang","text","append","C","_e$locales$a$prefix$i2","_e$locales$a$prefix2","button","addEventListener","closest","dispatchEvent","Event","$","d","f","getModal","id","content","closeEvent","E","_n$data","arguments","undefined","data","_n$data2","includes","reduce","some","v"],"sourceRoot":""}