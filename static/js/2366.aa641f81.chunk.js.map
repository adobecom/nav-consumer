{"version":3,"file":"static/js/2366.aa641f81.chunk.js","mappings":"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","sources":["../node_modules/@adobecom/features/jarvis-chat.js"],"sourcesContent":["let chatInitialized = false;\nlet loadScript;\nlet loadStyle;\nlet getMetadata;\nlet jarvisSecMeta = null;\n\nconst isSilentEvent = (data) => (data['event.workflow'] === 'init' && data['event.type'] === 'request')\n  || (data['event.workflow'] === 'Chat' && data['event.type'] === 'load' && data['event.subtype'] === 'window');\n\nconst getBaseEvent = (data) => ({\n  chatConversationId: data['event.context_guid'],\n  chatConversationSessionId: data['event.session_guid'],\n  chatWorkflow: data['event.workflow'],\n  chatCategory: data['event.category'],\n  chatSubcategory: data['event.subcategory'],\n  chatType: data['event.type'],\n  chatSubtype: data['event.subtype'],\n  chatUserguid: data['event.user_guid'],\n  chatLanguage: data['event.language'],\n  chatPagename: data['event.pagename'],\n  chatVisitorguid: data['event.visitor_guid'],\n  chatUrl: data['event.url'],\n  chatOrgguid: data['event.org_guid'],\n  chatReferrer: data['event.referrer'],\n  chatClientId: data['source.client_id'],\n  chatSourceName: data['source.name'],\n  chatPlatform: data['source.platform'],\n  chatContentName: data['content.name'],\n  chatEnv: data['env.com.name'],\n});\n\nconst setSophiaLayer = (data) => {\n  const sophiaData = {\n    variationId: data['exp.variation_id'],\n    actionBlockId: data['exp.action_block_id'],\n    campaignId: data['exp.campaign_id'],\n    containerId: data['exp.container_id'],\n    controlGroupId: data['exp.control_group_id'],\n    treatmentId: data['exp.treatment_id'],\n    surfaceId: data['exp.surface_id'],\n  };\n\n  Object.keys(sophiaData).forEach((key) => {\n    if (!sophiaData[key]) delete sophiaData[key];\n  });\n  if (!Object.keys(sophiaData).length) return;\n\n  const sophiaDataCaptured = (id) => {\n    let captured = false;\n    if (!id) return captured;\n\n    const sophiaDataLayer = window.digitalData.sophiaResponse?.fromPage;\n    if (Array.isArray(sophiaDataLayer)) {\n      captured = sophiaDataLayer.some((sophiaEvent) => sophiaEvent?.campaignId === id);\n    } else {\n      captured = (sophiaDataLayer?.campaignId === id);\n    }\n\n    return captured;\n  };\n\n  if (sophiaDataCaptured(sophiaData.campaignId)) return;\n\n  window.digitalData.sophiaResponse ||= {};\n  window.digitalData.sophiaResponse.fromPage ||= [];\n\n  if (Array.isArray(window.digitalData.sophiaResponse.fromPage)) {\n    window.digitalData.sophiaResponse.fromPage.push(sophiaData);\n  } else {\n    window.digitalData.sophiaResponse.fromPage = sophiaData;\n  }\n};\n\nconst sendEvent = (data) => {\n  setSophiaLayer(data);\n  // eslint-disable-next-line no-underscore-dangle\n  window._satellite?.track('event', {\n    xdm: {},\n    data: {\n      web: { webInteraction: { name: window.digitalData.primaryEvent?.eventInfo?.eventName } },\n      _adobe_corpnew: {\n        digitalData: {\n          primaryEvent: window.digitalData.primaryEvent,\n          chat: window.digitalData.chat,\n          sophiaResponse: window.digitalData.sophiaResponse,\n        },\n      },\n    },\n  });\n};\n\nconst getDataProperties = (data, properties = []) => properties.reduce((str, prop) => {\n  let output = str;\n  output += `${output && ':'}${data[prop] || ''}`;\n  return output;\n}, '');\n\nconst sendChatIconRenderEvent = (data) => {\n  window.digitalData.primaryEvent = {\n    eventInfo: {\n      eventName: `chat:${getDataProperties(data, ['event.workflow', 'event.subcategory', 'event.subtype', 'content.name', 'event.type'])}`,\n      eventAction: getDataProperties(data, ['event.subcategory', 'content.name', 'event.type']),\n    },\n  };\n\n  window.digitalData.chat = {};\n  window.digitalData.chat.chatInfo = getBaseEvent(data);\n  window.digitalData.chat.chatInfo.chatConversationUnread = data['content.name'];\n\n  sendEvent(data);\n};\n\nconst sendChatIconClickEvent = (data) => {\n  window.digitalData.primaryEvent = {\n    eventInfo: {\n      eventName: `chat:${getDataProperties(data, ['event.workflow', 'event.subcategory', 'event.subtype', 'content.name', 'event.type'])}`,\n      eventAction: getDataProperties(data, ['event.subcategory', 'event.subtype', 'content.name', 'event.type']),\n    },\n  };\n\n  window.digitalData.chat = {};\n  window.digitalData.chat.chatInfo = getBaseEvent(data);\n  window.digitalData.chat.chatInfo.chatConversationUnread = data['content.name'];\n\n  sendEvent(data);\n};\n\nconst sendProductEvent = (data) => {\n  window.digitalData.primaryEvent = {\n    eventInfo: {\n      eventName: `chat:${getDataProperties(data, ['event.workflow', 'content.name', 'event.subtype', 'event.type'])}`,\n      eventAction: getDataProperties(data, ['event.subcategory', 'content.name', 'event.subtype', 'event.type']),\n    },\n  };\n\n  window.digitalData.chat = { chatInfo: { primaryProduct: { productName: data['event.subtype'] } } };\n\n  sendEvent(data);\n};\n\nconst sendSurveyFeedbackEvent = (data) => {\n  window.digitalData.primaryEvent = {\n    eventInfo: {\n      eventName: `chat:${getDataProperties(data, ['event.workflow', 'content.name', 'event.subtype', 'event.type', 'content.id'])}`,\n      eventAction: getDataProperties(data, ['event.subcategory', 'content.name', 'event.subtype', 'event.type']),\n    },\n  };\n\n  sendEvent(data);\n};\n\nconst sendChatErrorEvent = (data) => {\n  window.digitalData.primaryEvent = {\n    eventInfo: {\n      eventName: `chat:${getDataProperties(data, ['event.workflow', 'event.subtype', 'event.type'])}:error`,\n      eventAction: `${getDataProperties(data, ['event.subcategory', 'event.subtype', 'event.type'])}:error`,\n    },\n  };\n\n  window.digitalData.chat = {};\n  window.digitalData.chat.chatInfo = getBaseEvent(data);\n  window.digitalData.chat.chatInfo.chatErrorCode = data['event.error_code'];\n  window.digitalData.chat.chatInfo.chatErrorType = data['event.error_type'];\n  window.digitalData.chat.chatInfo.chatErrorDescription = data['event.error_desc'];\n\n  sendEvent(data);\n};\n\nconst sendPrimaryEvent = (data) => {\n  window.digitalData.primaryEvent = {\n    eventInfo: {\n      eventName: `chat:${getDataProperties(data, ['event.workflow', 'content.name', 'event.subtype', 'event.type'])}`,\n      eventAction: getDataProperties(data, ['event.subcategory', 'content.name', 'event.subtype', 'event.type']),\n    },\n  };\n\n  window.digitalData.chat = {};\n  window.digitalData.chat.chatInfo = getBaseEvent(data);\n\n  sendEvent(data);\n};\n\nconst redirectToSupport = () => window.location.assign('https://helpx.adobe.com');\n\nconst isChatOpen = () => {\n  const instance = window.AdobeMessagingExperienceClient;\n  return instance?.isAdobeMessagingClientInitialized()\n    && instance?.getMessagingExperienceState()?.windowState !== 'hidden';\n};\n\nconst openChat = (event) => {\n  if (!chatInitialized) redirectToSupport();\n  const open = window.AdobeMessagingExperienceClient?.openMessagingWindow;\n  if (typeof open !== 'function' || isChatOpen()) return;\n  if (event) {\n    const sourceType = event.target.tagName?.toLowerCase();\n    const sourceText = (sourceType === 'img') ? event.target.alt?.trim() : event.target.innerText?.trim();\n    open({\n      sourceType,\n      sourceText,\n    });\n  } else {\n    open({});\n  }\n};\n\nconst startInitialization = async (config, event, onDemand) => {\n  const asset = `https://${config.env.name !== 'prod' ? 'stage-' : ''}client.messaging.adobe.com/latest/AdobeMessagingClient`;\n  await Promise.all([\n    loadStyle(`${asset}.css`),\n    loadScript(`${asset}.js`),\n  ]);\n  let language;\n  let region;\n  if (config.locale.ietf.includes('-')) {\n    [language, region] = config.locale.ietf.split('-');\n  } else {\n    [region, language] = config.locale.prefix.replace('/', '').split('_');\n    if (region === 'africa') region = 'ZA';\n  }\n\n  window.AdobeMessagingExperienceClient.initialize({\n    appid: getMetadata('jarvis-surface-id') || config.jarvis.id || jarvisSecMeta?.['jarvis-surface-id'],\n    appver: getMetadata('jarvis-surface-version') || config.jarvis.version || jarvisSecMeta?.['jarvis-surface-version'],\n    env: config.env.name !== 'prod' ? 'stage' : 'prod',\n    clientId: window.adobeid?.client_id,\n    accessToken: window.adobeIMS?.isSignedInUser()\n      ? `Bearer ${window.adobeIMS.getAccessToken()?.token}` : undefined,\n    lazyLoad: true,\n    loadedVia: 'milo',\n    language: language || 'en',\n    region,\n    cookiesEnabled: window.adobePrivacy?.activeCookieGroups()?.length > 1,\n    cookies: {\n      mcid: window.alloy ? await window.alloy('getIdentity')\n        .then((data) => data?.identity?.ECID).catch(() => undefined) : undefined,\n    },\n    callbacks: {\n      initCallback: (data) => {\n        chatInitialized = !!data?.releaseControl?.showAdobeMessaging;\n      },\n      onReadyCallback: () => {\n        if (onDemand) {\n          openChat(event);\n        }\n      },\n      initErrorCallback: () => {},\n      chatStateCallback: () => {},\n      getContextCallback: () => {\n        let appId; let appVer;\n        if (jarvisSecMeta) {\n          appId = jarvisSecMeta['jarvis-surface-id'];\n          appVer = jarvisSecMeta['jarvis-surface-version'];\n          jarvisSecMeta = null;\n        }\n        return {\n          appid: appId || getMetadata('jarvis-surface-id') || config.jarvis.id,\n          appver: appVer || getMetadata('jarvis-surface-version') || config.jarvis.version,\n        };\n      },\n      signInProvider: () => window.adobeIMS?.signIn(config.signInContext),\n      analyticsCallback: (eventData) => {\n        if (!window.alloy_all || !window.digitalData) return;\n        const data = eventData?.events?.[0]?.data;\n        if (!data || isSilentEvent(data)) return;\n        if (data['event.subcategory']?.toLowerCase() === 'launch'\n          && data['event.workflow']?.toLowerCase() === 'init') {\n          if (data['event.type']?.toLowerCase() === 'render') {\n            sendChatIconRenderEvent(data);\n            return;\n          }\n          if (data['event.type']?.toLowerCase() === 'click') {\n            sendChatIconClickEvent(data);\n            return;\n          }\n        }\n        if (data['content.name']?.toLowerCase() === 'auth-subproduct') {\n          sendProductEvent(data);\n          return;\n        }\n        if (data['content.name']?.toLowerCase() === '5-star-survey') {\n          sendSurveyFeedbackEvent(data);\n          return;\n        }\n        if (data['event.error_code'] && data['event.error_type']) {\n          sendChatErrorEvent(data);\n          return;\n        }\n        sendPrimaryEvent(data);\n      },\n    },\n  });\n};\n\nlet eventListenerAdded = false;\nconst addEventListeners = () => {\n  if (eventListenerAdded) return;\n  document.addEventListener('keydown', (event) => {\n    if (event.key === 'Escape') {\n      const tooltipMessage = document.querySelector('.adbmsg-tooltip');\n      if (tooltipMessage && tooltipMessage.style.display !== 'none') {\n        tooltipMessage.style.display = 'none';\n      }\n    }\n  });\n  eventListenerAdded = true;\n};\n\nconst initJarvisChat = async (\n  config,\n  loadScriptFunction,\n  loadStyleFunction,\n  getMetadataFunction,\n) => {\n  if (!config?.jarvis) return;\n\n  loadScript = loadScriptFunction;\n  loadStyle = loadStyleFunction;\n  getMetadata = getMetadataFunction;\n\n  const onDemandMeta = getMetadata('jarvis-on-demand')?.toLowerCase();\n  const onDemand = onDemandMeta ? onDemandMeta === 'on' : config.jarvis.onDemand;\n\n  document.addEventListener('click', async (event) => {\n    const jarvisLink = event.target.closest('[href*=\"#open-jarvis-chat\"]');\n    if (!jarvisLink) return;\n    if (event.target.closest('.global-footer')) {\n      try {\n        const jarvisAttr = jarvisLink.getAttribute('data-jarvis-config');\n        jarvisSecMeta = jarvisAttr ? JSON.parse(jarvisAttr) : null;\n      } catch (e) {\n        // do nothing & use default config\n      }\n    }\n    event.preventDefault();\n    if (onDemand && !chatInitialized) {\n      await startInitialization(config, event, onDemand);\n      addEventListeners();\n    } else {\n      openChat(event);\n    }\n  });\n  if (!onDemand) {\n    await startInitialization(config);\n    addEventListeners();\n  }\n};\n\nexport {\n  initJarvisChat,\n  openChat,\n};\n"],"names":["f","m","d","g","l","p","e","chatConversationId","chatConversationSessionId","chatWorkflow","chatCategory","chatSubcategory","chatType","chatSubtype","chatUserguid","chatLanguage","chatPagename","chatVisitorguid","chatUrl","chatOrgguid","chatReferrer","chatClientId","chatSourceName","chatPlatform","chatContentName","chatEnv","v","_window$_satellite","_window$digitalData$p","_window$digitalData","_window$digitalData$s2","n","variationId","actionBlockId","campaignId","containerId","controlGroupId","treatmentId","surfaceId","Object","keys","forEach","i","length","_window$digitalData$s","o","r","window","digitalData","sophiaResponse","fromPage","Array","isArray","some","a","push","D","_satellite","track","xdm","data","web","webInteraction","name","primaryEvent","eventInfo","eventName","_adobe_corpnew","chat","s","arguments","undefined","reduce","c","concat","b","_window$AdobeMessagin","location","assign","AdobeMessagingExperienceClient","openMessagingWindow","isChatOpen","_e$getMessagingExperi","isAdobeMessagingClientInitialized","getMessagingExperienceState","windowState","S","_e$target$tagName","_e$target$alt","_e$target$innerText","target","tagName","toLowerCase","sourceType","sourceText","alt","trim","innerText","u","async","_l","_l2","_window$adobeid","_window$adobeIMS","_window$adobeIMS$getA","_window$adobePrivacy","env","Promise","all","locale","ietf","includes","split","prefix","replace","initialize","appid","jarvis","id","appver","version","clientId","adobeid","client_id","accessToken","adobeIMS","isSignedInUser","getAccessToken","token","lazyLoad","loadedVia","language","region","cookiesEnabled","adobePrivacy","activeCookieGroups","cookies","mcid","alloy","then","_a$identity","identity","ECID","catch","callbacks","initCallback","_a$releaseControl","releaseControl","showAdobeMessaging","onReadyCallback","initErrorCallback","chatStateCallback","getContextCallback","t","signInProvider","_window$adobeIMS2","signIn","signInContext","analyticsCallback","_a$events","alloy_all","events","I","_t$eventSubcategory","_t$eventWorkflow","_t$contentName","_t$contentName2","_t$eventType","_t$eventType2","eventAction","chatInfo","chatConversationUnread","C","k","primaryProduct","productName","E","_","chatErrorCode","chatErrorType","chatErrorDescription","j","A","h","y","addEventListeners","document","addEventListener","key","querySelector","style","display","L","_d","onDemand","closest","w","getAttribute","JSON","parse","preventDefault"],"sourceRoot":""}