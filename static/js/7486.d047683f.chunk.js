"use strict";(self.webpackChunknav_consumer=self.webpackChunknav_consumer||[]).push([[7486,7528],{7528:(t,e,n)=>{function i(t,e){return e||(e=t.slice(0)),Object.freeze(Object.defineProperties(t,{raw:{value:Object.freeze(e)}}))}n.d(e,{A:()=>i})},6477:(t,e,n)=>{n.r(e),n.d(e,{default:()=>f,fetchIconList:()=>p,fetchIcons:()=>m});var i,o=n(8457),a=(n(6523),n(986),n(4684)),r=(n(722),["unity","cc-forms","interactive-metadata"]),c=new Map,l=!1;async function s(t){if(!t)return null;let e=await fetch(t);if(!e.ok)return null;let n={},i=await e.text();return(new DOMParser).parseFromString(i,"image/svg+xml").querySelectorAll("symbol").forEach((t=>{let e=document.createElementNS("http://www.w3.org/2000/svg","svg");for(;t.firstChild;)e.appendChild(t.firstChild);[...t.attributes].forEach((t=>e.attributes.setNamedItem(t.cloneNode()))),e.classList.add("icon-milo","icon-milo-".concat(e.id)),n[e.id]=e})),n}async function d(t){let e="".concat((0,a.j)(),"/federal/assets/icons/svgs/").concat(t,".svg");try{let n=await async function(t,e){let n=await fetch(t);if(!n.ok)throw new Error("Failed to fetch SVG for ".concat(e,": ").concat(n.statusText));let i=await n.text(),o=(new DOMParser).parseFromString(i,"image/svg+xml").querySelector("svg");if(!o)throw new Error("No SVG element found in fetched content for ".concat(e));return o.classList.add("icon-milo","icon-milo-".concat(e)),o}(e,t);return c.set(t,n),n}catch(n){return(0,o.d)({message:"Error fetching federal SVG for ".concat(t,", falling back to Milo icon"),error:n,tags:"icons",errorType:"error"}),null}}async function u(t,e){if(c.has(t))return c.get(t);if(!e){let e=await d(t);if(e)return e}return async function(t){if(!i){let{miloLibs:t,codeRoot:e}=(0,a.i)();i=s("".concat(t||e,"/img/icons/icons.svg"))}let e=await i;if(null!==e&&void 0!==e&&e[t]){let n=e[t].cloneNode(!0);return c.set(t,n),n}return(0,o.d)({message:"No fallback Milo icon found for ".concat(t),tags:"icons",errorType:"error"}),null}(t)}async function f(t){let e=[...t].map((async t=>{let e=t.classList[1].replace("icon-",""),i="tooltip"===e?"info":e;if(e.includes("tooltip-")&&(i=e.replace(/tooltip-/,"")),function(t,e){var i,o,a;if(null===(i=t.closest("em"))||void 0===i||!i.textContent.includes("|")||![...t.classList].some((t=>t.includes("tooltip"))))return;let r=t.closest("em");r.className="tooltip-wrapper";let c=r.textContent.split("|"),s=null===(o=c.pop())||void 0===o?void 0:o.trim();if(!s)return;t.dataset.tooltip=s;let d=(null===(a=c.pop())||void 0===a?void 0:a.trim().toLowerCase())||"right";t.className="icon icon-".concat(e," milo-tooltip ").concat(d),[["tabindex","0"],["aria-label",s],["role","button"]].forEach((e=>{let[n,i]=e;t.setAttribute(n,i)})),r.parentElement.replaceChild(t,r),l||(l=n.e(7583).then(n.bind(n,7583)).then((t=>{let{default:e}=t;e()})))}(t,i),t.dataset.svgInjected||!i)return;let o=r.some((e=>t.closest("div.".concat(e)))),a=await u(i,o);if(a&&!t.dataset.svgInjected){let e=a.cloneNode(!0);t.appendChild(e),t.dataset.svgInjected="true";let n=t.parentElement;(null===n||void 0===n?void 0:n.childNodes.length)>1&&(n.lastChild===t?t.classList.add("margin-inline-start"):n.firstChild===t?(t.classList.add("margin-inline-end"),"LI"===n.parentElement.tagName&&n.parentElement.classList.add("icon-list-item")):t.classList.add("margin-inline-start","margin-inline-end"))}}));await Promise.allSettled(e)}var m=t=>{let{miloLibs:e,codeRoot:n}=t;return s("".concat(e||n,"/img/icons/icons.svg"))};function p(t){return fetch(t).then((t=>t.json())).then((t=>t.content.data)).catch((()=>((0,o.d)({message:"Failed to fetch iconList",tags:"icons",errorType:"error"}),[])))}}}]);
//# sourceMappingURL=7486.d047683f.chunk.js.map