{"version":3,"file":"static/js/8918.015c4377.chunk.js","mappings":"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","sources":["../node_modules/@adobecom/features/personalization/preview.js"],"sourcesContent":["import { createTag, getConfig, getMetadata, loadStyle } from '../../utils/utils.js';\nimport { US_GEO, getFileName, normalizePath } from './personalization.js';\n\nconst API_DOMAIN = 'https://jvdtssh5lkvwwi4y3kbletjmvu0qctxj.lambda-url.us-west-2.on.aws';\n\nexport const API_URLS = {\n  pageList: `${API_DOMAIN}/get-pages`,\n  pageDetails: `${API_DOMAIN}/get-page?id=`,\n  save: `${API_DOMAIN}/save-mep-call`,\n};\n\nfunction updatePreviewButton(popup, pageId) {\n  const selectedInputs = popup.querySelectorAll(\n    'input[type=\"radio\"]:checked, input[type=\"text\"]',\n  );\n  const manifestParameter = [];\n\n  selectedInputs.forEach((selected) => {\n    let { value } = selected;\n    if (selected.classList.contains('new-manifest')) {\n      if (selected.value !== '') {\n        try {\n          const newManifest = new URL(value);\n          if (newManifest) {\n            value = newManifest.pathname;\n          }\n        } catch (e) {\n          // do nothing\n        }\n        manifestParameter.push(value);\n      }\n    } else {\n      value = `${selected.dataset.manifest}--${value}`;\n      manifestParameter.push(value);\n    }\n  });\n\n  const isMmm = pageId.length;\n  const page = isMmm ? popup.closest('[data-url]').dataset.url : window.location.href;\n  const simulateHref = new URL(page);\n  simulateHref.searchParams.set('mep', manifestParameter.join('---'));\n\n  const mepHighlightCheckbox = popup.querySelector(\n    `input[type=\"checkbox\"]#mepHighlightCheckbox${pageId}`,\n  );\n\n  document.body.dataset.mepHighlight = mepHighlightCheckbox.checked;\n  if (mepHighlightCheckbox.checked) {\n    simulateHref.searchParams.set('mepHighlight', true);\n  } else {\n    simulateHref.searchParams.delete('mepHighlight');\n  }\n\n  const mepPreviewButtonCheckbox = popup.querySelector(\n    `input[type=\"checkbox\"]#mepPreviewButtonCheckbox${pageId}`,\n  );\n  if (mepPreviewButtonCheckbox.checked) {\n    simulateHref.searchParams.set('mepButton', 'off');\n  } else {\n    simulateHref.searchParams.delete('mepButton');\n  }\n\n  popup\n    .querySelector('a.con-button')\n    .setAttribute('href', simulateHref.href);\n}\nfunction addPillEventListeners(div) {\n  div.querySelector('.mep-manifest.mep-badge').addEventListener('click', () => {\n    div.classList.toggle('mep-hidden');\n  });\n  div.querySelector('.mep-close').addEventListener('click', () => {\n    document.body.removeChild(document.querySelector('.mep-preview-overlay'));\n  });\n}\nexport function parsePageAndUrl(config, windowLocation, prefix) {\n  const { stageDomainsMap, env } = config;\n  const { pathname, origin } = windowLocation;\n  const allowedHosts = [\n    'business.stage.adobe.com',\n    'www.stage.adobe.com',\n    'milo.stage.adobe.com',\n  ];\n  if (env?.name === 'prod' || !stageDomainsMap\n    || allowedHosts.includes(origin.replace('https://', ''))) {\n    const domain = origin.replace('stage.adobe.com', 'adobe.com');\n    return { page: pathname.replace(`/${prefix}/`, '/'), url: `${domain}${pathname}` };\n  }\n  let path = pathname;\n  let domain = origin;\n  const domainCheck = Object.keys(stageDomainsMap)\n    .find((key) => {\n      try {\n        const { host } = new URL(`https://${key}`);\n        return allowedHosts.includes(host);\n      } catch (e) {\n        /* c8 ignore next 2 */\n        return false;\n      }\n    });\n  if (domainCheck) domain = `https://${domainCheck}`;\n  path = path.replace('/homepage/index-loggedout', '/');\n  if (!path.endsWith('/') && !path.endsWith('.html') && !domain.includes('milo')) {\n    path += '.html';\n  }\n  domain = domain.replace('stage.adobe.com', 'adobe.com');\n  return { page: path.replace(`/${prefix}/`, '/'), url: `${domain}${path}` };\n}\nfunction parseMepConfig() {\n  const config = getConfig();\n  const { mep, locale } = config;\n  const { experiments, targetEnabled, prefix, highlight } = mep;\n  const activities = experiments.map((experiment) => {\n    const {\n      name, event, manifest, variantNames, selectedVariantName, disabled, analyticsTitle, source,\n    } = experiment;\n    let pathname = manifest;\n    try { pathname = new URL(manifest).pathname; } catch (e) { /* do nothing */ }\n    return {\n      targetActivityName: name,\n      variantNames,\n      selectedVariantName,\n      url: manifest,\n      disabled,\n      source,\n      eventStart: event?.start,\n      eventEnd: event?.end,\n      pathname,\n      analyticsTitle,\n    };\n  });\n  const { page, url } = parsePageAndUrl(config, window.location, prefix);\n\n  return {\n    page: {\n      url,\n      page,\n      target: targetEnabled ? 'on' : 'off',\n      personalization: (getMetadata('personalization')) ? 'on' : 'off',\n      geo: prefix === US_GEO ? '' : prefix,\n      locale: locale.ietf,\n      region: locale.region,\n      highlight,\n    },\n    activities,\n  };\n}\nfunction formatDate(dateTime, format = 'local') {\n  if (!dateTime) return '';\n  let dateObj = dateTime;\n  if (typeof dateObj === 'string') dateObj = new Date(dateObj);\n  if (format === 'iso') return dateObj.toISOString();\n  const date = dateObj.toLocaleDateString(false, {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  });\n  const time = dateObj.toLocaleTimeString(false, { timeStyle: 'short' });\n  return `${date} ${time}`;\n}\nfunction getManifestListDomAndParameter(mepConfig) {\n  const { activities, page } = mepConfig;\n  const { pageId = 1 } = page;\n  let manifestList = '';\n  const manifestParameter = [];\n  activities?.forEach((manifest, mIdx) => {\n    const {\n      variantNames,\n      manifestPath = manifest.url,\n      selectedVariantName = manifest.selectedVariantName || 'default',\n      manifestUrl,\n      targetActivityName,\n      source,\n      analyticsTitle,\n      eventStart,\n      eventEnd,\n      disabled,\n    } = manifest;\n    const editUrl = manifestUrl || manifestPath;\n    const editPath = normalizePath(editUrl);\n    let radio = '';\n    const variantNamesArray = typeof variantNames === 'string' ? variantNames.split('||') : variantNames;\n    variantNamesArray.forEach((variant) => {\n      const checked = {\n        attribute: '',\n        class: '',\n      };\n      if (variant === selectedVariantName) {\n        checked.attribute = 'checked=\"checked\"';\n        checked.class = 'class=\"mep-manifest-selected-variant\"';\n        manifestParameter.push(`${manifestPath}--${variant}`);\n      }\n      radio += `<div>\n        <input type=\"radio\" name=\"${editPath}${pageId}\" value=\"${variant}\" \n        id=\"${editPath}${pageId}--${variant}\" data-manifest=\"${editPath}\" ${checked.attribute}>\n        <label for=\"${editPath}${pageId}--${variant}\" ${checked.class}>${variant}</label>\n      </div>`;\n    });\n    const checked = {\n      attribute: '',\n      class: '',\n    };\n    if (!variantNames.includes(selectedVariantName)) {\n      checked.attribute = 'checked=\"checked\"';\n      checked.class = 'class=\"mep-manifest-selected-variant\"';\n      manifestParameter.push(`${editUrl}--default`);\n    }\n    radio += `<div>\n      <input type=\"radio\" name=\"${editPath}${pageId}\" value=\"default\" \n      id=\"${editPath}${pageId}--default\" data-manifest=\"${editPath}\" ${checked.attribute}>\n      <label for=\"${editPath}${pageId}--default\" ${checked.class}>Default (control)</label>\n    </div>`;\n\n    const scheduled = eventStart && eventEnd\n      ? `<p class=\"promo-schedule-info\">Scheduled - ${disabled ? 'inactive' : 'active'}</p>\n         <p>On: ${formatDate(eventStart)} - <a target= \"_blank\" href=\"?instant=${formatDate(eventStart, 'iso')}\">instant</a></p>\n         <p>Off: ${formatDate(eventEnd)}</p>` : '';\n    manifestList += `<div class=\"mep-manifest-info\" title=\"Manifest location: ${editUrl}&#013;Analytics manifest name: ${analyticsTitle || 'N/A for this manifest type'}\">\n      <div class=\"mep-manifest-title\">\n        ${mIdx + 1}. ${getFileName(manifestPath)}\n        <a class=\"mep-edit-manifest\" href=\"${editUrl}\" target=\"_blank\" title=\"Open manifest\">\n          <svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0,0,256,256\" width=\"16px\" height=\"16px\" fill-rule=\"nonzero\"><g transform=\"\"><g fill=\"currentColor\" fill-rule=\"nonzero\" stroke=\"none\" stroke-width=\"1\" stroke-linecap=\"butt\" stroke-linejoin=\"miter\" stroke-miterlimit=\"10\" stroke-dasharray=\"\" stroke-dashoffset=\"0\" font-family=\"none\" font-weight=\"none\" font-size=\"none\" text-anchor=\"none\" style=\"mix-blend-mode: normal\"><g transform=\"scale(8.53333,8.53333)\"><path d=\"M22.82813,3c-0.51175,0 -1.02356,0.19544 -1.41406,0.58594l-2.41406,2.41406l5,5l2.41406,-2.41406c0.781,-0.781 0.781,-2.04713 0,-2.82812l-2.17187,-2.17187c-0.3905,-0.3905 -0.90231,-0.58594 -1.41406,-0.58594zM17,8l-11.74023,11.74023c0,0 0.91777,-0.08223 1.25977,0.25977c0.342,0.342 0.06047,2.58 0.48047,3c0.42,0.42 2.64389,0.12436 2.96289,0.44336c0.319,0.319 0.29688,1.29688 0.29688,1.29688l11.74023,-11.74023zM4,23l-0.94336,2.67188c-0.03709,0.10544 -0.05623,0.21635 -0.05664,0.32813c0,0.55228 0.44772,1 1,1c0.11177,-0.00041 0.22268,-0.01956 0.32813,-0.05664c0.00326,-0.00128 0.00652,-0.00259 0.00977,-0.00391l0.02539,-0.00781c0.00196,-0.0013 0.00391,-0.0026 0.00586,-0.00391l2.63086,-0.92773l-1.5,-1.5z\"></path></g></g></g></svg>\n        </a>\n        <div class=\"target-activity-name\">${targetActivityName || ''}</div>\n        <div>Source: ${source}</div>\n        ${manifest.lastSeen ? `<div>Last seen: ${formatDate(new Date(manifest.lastSeen))}</div>` : ''}\n        ${scheduled}\n      </div>\n      <div class=\"mep-manifest-variants\">${radio}</div>\n    </div>`;\n  });\n  return { manifestList, manifestParameter };\n}\nfunction addMepPopupListeners(popup, pageId) {\n  popup.querySelectorAll('input[type=\"radio\"], input[type=\"checkbox\"]').forEach((input) => {\n    input.addEventListener('change', updatePreviewButton.bind(null, popup, pageId));\n  });\n  popup.querySelectorAll('input[type=\"text\"]').forEach((input) => {\n    input.addEventListener('keyup', updatePreviewButton.bind(null, popup, pageId));\n    input.addEventListener('change', updatePreviewButton.bind(null, popup, pageId));\n  });\n  popup.querySelector('.mep-toggle-advanced').addEventListener('click', (e) => {\n    e.target.closest('.mep-popup')?.querySelector('.mep-advanced-container')?.classList.toggle('mep-advanced-open');\n  });\n}\nexport function getMepPopup(mepConfig, isMmm = false) {\n  const { activities, page } = mepConfig;\n  const pageId = page?.pageId ? `-${page.pageId}` : '';\n  const { manifestList } = getManifestListDomAndParameter(mepConfig);\n  let mepHighlightChecked = '';\n  if (page?.highlight) {\n    mepHighlightChecked = 'checked=\"checked\"';\n    document.body.dataset.mepHighlight = true;\n  }\n  const PREVIEW_BUTTON_ID = 'preview-button';\n  const pageUrl = isMmm ? page.url : new URL(window.location.href).href;\n  const mepPopup = createTag('div', {\n    class: `mep-popup${isMmm ? '' : ' in-page'}`,\n    'data-url': pageUrl,\n  });\n  const mepPopupHeader = createTag('div', { class: 'mep-popup-header' });\n  const listInfo = createTag('div', { class: 'mep-manifest-info' });\n  const advancedOptions = createTag('div', { class: 'mep-advanced-container' });\n  const mepManifestList = createTag('div', { class: 'mep-manifest-list' });\n\n  listInfo.innerHTML = `\n    <div class=\"mep-manifest-variants\">\n      <input type=\"checkbox\" name=\"mepHighlight${pageId}\"\n        id=\"mepHighlightCheckbox${pageId}\" ${mepHighlightChecked} value=\"true\">\n        <label for=\"mepHighlightCheckbox${pageId}\">Highlight changes</label>\n    </div>`;\n  advancedOptions.innerHTML = `\n    <div class=\"mep-toggle-advanced\">Advanced options</div>\n      <div class=\"mep-manifest-info mep-advanced-options\">\n        <div>Optional: new manifest location or path</div>\n            <div class=\"mep-manifest-variants\">\n              <div>\n                <input type=\"text\" name=\"new-manifest${pageId}\" class=\"new-manifest\">\n              </div>\n            </div>\n          </div>\n          <div class=\"mep-manifest-info\">\n            <div class=\"mep-manifest-variants mep-advanced-options\">\n              <input type=\"checkbox\" name=\"mepPreviewButtonCheckbox${pageId}\"\n                id=\"mepPreviewButtonCheckbox${pageId}\" value=\"off\">\n                <label for=\"mepPreviewButtonCheckbox${pageId}\">add mepButton=off to preview link</label>\n            </div>\n          </div>\n        </div>`;\n\n  const mepManifestPreviewButton = createTag('div', { class: `advanced-options${isMmm ? '' : ' dark'}` });\n  mepManifestPreviewButton.innerHTML = `\n    <a class=\"con-button outline button-l\" data-id=\"${PREVIEW_BUTTON_ID}\" title=\"Preview above choices\" ${isMmm ? ' target=\"_blank\"' : ''}>Preview</a>`;\n  const targetOnText = page.target === 'postlcp' ? 'on post LCP' : page.target;\n  mepPopupHeader.innerHTML = `\n    <div>\n      <h4>${activities?.length || 0} Manifest(s) found</h4>\n        <span class=\"mep-close\"></span>\n        <div class=\"mep-manifest-page-info-title\">Page Info:</div>\n        <div>Target integration feature is ${targetOnText}</div>\n        <div>Personalization feature is ${page.personalization}</div>\n        <div>Page's Geo Folder is ${page.geo || 'nothing (US)'}</div>\n        <div>Page's Locale is ${page.locale?.toLowerCase()}</div>\n        ${page.lastSeen ? `<div>Last seen: ${formatDate(new Date(page.lastSeen))}</div>` : ''}\n    </div>`;\n  mepManifestList.innerHTML = manifestList;\n  if (listInfo) mepManifestList.prepend(listInfo);\n  if (advancedOptions) mepManifestList.append(advancedOptions);\n  mepPopup.append(mepPopupHeader);\n  mepPopup.append(mepManifestList);\n  mepPopup.append(mepManifestPreviewButton);\n  const previewButton = mepPopup.querySelector(`a[data-id=\"${PREVIEW_BUTTON_ID}\"]`);\n  if (previewButton) updatePreviewButton(mepPopup, pageId);\n  addMepPopupListeners(mepPopup, pageId);\n  return mepPopup;\n}\nfunction createPreviewPill() {\n  const mepConfig = parseMepConfig();\n  const { activities } = mepConfig;\n  const overlay = createTag('div', { class: 'mep-preview-overlay static-links', style: 'display: none;' });\n  const pill = document.createElement('div');\n  pill.classList.add('mep-hidden');\n  const mepBadge = createTag('div', { class: 'mep-manifest mep-badge' });\n  mepBadge.innerHTML = `\n   <span class=\"mep-open\"></span>\n      <div class=\"mep-manifest-count\">${activities?.length || 0} Manifest(s) found</div>`;\n  pill.append(mepBadge);\n  pill.append(getMepPopup(mepConfig));\n  overlay.append(pill);\n  document.body.append(overlay);\n  addPillEventListeners(pill);\n}\nfunction addHighlightData(manifests) {\n  manifests.forEach(({ selectedVariant, manifest }) => {\n    const manifestName = getFileName(manifest);\n\n    const updateManifestId = (selector, prop = 'manifestId') => {\n      document.querySelectorAll(selector).forEach((el) => (el.dataset[prop] = manifestName));\n    };\n\n    selectedVariant?.replacefragment?.forEach(\n      ({ val }) => updateManifestId(`[data-path*=\"${val}\"]`),\n    );\n\n    selectedVariant?.useblockcode?.forEach(({ selector }) => {\n      if (selector) updateManifestId(`.${selector}`, 'codeManifestId');\n    });\n\n    selectedVariant?.updatemetadata?.forEach(({ selector }) => {\n      if (selector === 'gnav-source') updateManifestId('header, footer');\n    });\n\n    // eslint-disable-next-line max-len\n    document.querySelectorAll(`.section[class*=\"merch-cards\"] .fragment[data-manifest-id=\"${manifestName}\"] merch-card`)\n      .forEach((el) => (el.dataset.manifestId = manifestName));\n  });\n}\nexport async function saveToMmm() {\n  const data = parseMepConfig();\n  const excludedStrings = ['/drafts/', '.stage.', '.page/', '.live/', '/fragments/', '/nala/'];\n  if (excludedStrings.some((str) => data.page.url.includes(str))) return false;\n  data.activities = data.activities.filter((activity) => {\n    const { url, source } = activity;\n    activity.source = source.filter((item) => item !== 'mep param');\n    return (!!(activity.source?.length && !url.includes('/drafts/')));\n  });\n  data.activities = data.activities.map((activity) => {\n    activity.variantNames = activity.variantNames?.join('||') || '';\n    activity.source = activity.source?.join(',') || '';\n    delete activity.selectedVariantName;\n    return activity;\n  });\n  if (data.page.prefix === US_GEO) data.page.prefix = '';\n  data.page.target = getMetadata('target') || 'off';\n  delete data.page.highlight;\n  return fetch(API_URLS.save, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  })\n    .then(async (response) => {\n      const res = await response.json();\n      if (response.ok) return res;\n      /* c8 ignore next 1 */\n      throw new Error(res.message || 'Network response failed');\n    });\n}\nexport default async function decoratePreviewMode() {\n  const { miloLibs, codeRoot, mep } = getConfig();\n  loadStyle(`${miloLibs || codeRoot}/features/personalization/preview.css`);\n  createPreviewPill();\n  if (mep?.experiments) addHighlightData(mep.experiments);\n}\n"],"names":["API_DOMAIN","API_URLS","pageList","concat","pageDetails","save","updatePreviewButton","popup","pageId","selectedInputs","querySelectorAll","manifestParameter","forEach","selected","value","classList","contains","newManifest","URL","pathname","e","push","dataset","manifest","page","length","closest","url","window","location","href","simulateHref","searchParams","set","join","mepHighlightCheckbox","querySelector","document","body","mepHighlight","checked","delete","setAttribute","parsePageAndUrl","config","windowLocation","prefix","stageDomainsMap","env","origin","allowedHosts","name","includes","replace","domain2","path","domain","domainCheck","Object","keys","find","key","host","endsWith","parseMepConfig","getConfig","mep","locale","experiments","targetEnabled","highlight","activities","map","experiment","event","variantNames","selectedVariantName","disabled","analyticsTitle","source","targetActivityName","eventStart","start","eventEnd","end","target","personalization","getMetadata","geo","US_GEO","ietf","region","formatDate","dateTime","format","arguments","undefined","dateObj","Date","toISOString","date","toLocaleDateString","year","month","day","time","toLocaleTimeString","timeStyle","getMepPopup","mepConfig","_page$locale","isMmm","manifestList","mIdx","manifestPath","manifestUrl","editUrl","editPath","normalizePath","radio","split","variant","checked2","attribute","class","scheduled","getFileName","lastSeen","getManifestListDomAndParameter","mepHighlightChecked","PREVIEW_BUTTON_ID","pageUrl","mepPopup","createTag","mepPopupHeader","listInfo","advancedOptions","mepManifestList","innerHTML","mepManifestPreviewButton","targetOnText","toLowerCase","prepend","append","input","addEventListener","bind","_e$target$closest","toggle","addMepPopupListeners","createPreviewPill","overlay","style","pill","createElement","add","mepBadge","div","removeChild","saveToMmm","data","some","str","filter","activity","_activity$source","item","_activity$variantName","_activity$source2","fetch","method","headers","JSON","stringify","then","async","res","response","json","ok","Error","message","decoratePreviewMode","miloLibs","codeRoot","loadStyle","_ref","_selectedVariant$repl","_selectedVariant$useb","_selectedVariant$upda","selectedVariant","manifestName","updateManifestId","selector","prop","el","replacefragment","_ref2","val","useblockcode","_ref3","updatemetadata","_ref4","manifestId"],"sourceRoot":""}