{"version":3,"file":"static/js/3340.cb0e39a7.chunk.js","mappings":"mKAAMA,EAAc,CAClBC,GAAI,KACJ,QAAS,KACT,QAAS,KACT,QAAS,KACTC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJ,UAAW,KACX,UAAW,KACXC,GAAI,KACJC,GAAI,KACJC,IAAK,KACLC,GAAI,KACJC,GAAI,MAEAC,EAAS,CACbjB,GAAI,QACJkB,MAAO,QACPC,MAAO,QACPC,MAAO,QACPC,GAAI,QACJC,GAAI,QACJC,MAAO,QACPC,MAAO,QACPC,MAAO,QACPC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,OAAQ,QACRC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,MAAO,QACPC,MAAO,QACPC,GAAI,QACJC,GAAI,QACJC,MAAO,QACPC,MAAO,QACPC,GAAI,QACJC,MAAO,QACPC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,MAAO,QACPC,MAAO,QACPC,MAAO,QACPC,MAAO,QACPC,MAAO,QACPC,GAAI,QACJC,GAAI,QACJC,QAAS,QACTC,QAAS,QACTC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJtD,GAAI,QACJuD,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,MAAO,QACPC,MAAO,QACPC,MAAO,QACPC,MAAO,QACPC,GAAI,QACJC,MAAO,QACPC,MAAO,QACPC,GAAI,QACJC,GAAI,aACJC,GAAI,aACJC,MAAO,aACPC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QAEJC,GAAI,QACJC,OAAQ,QACRC,OAAQ,QACRC,IAAK,QACLC,MAAO,QACPC,MAAO,SASHC,EAAoB,aAWnB,SAASC,EAAsBC,GAAQ,IAAAC,EAAAC,EAE5C,IAAMC,EAAkC,QAAlCF,IADe,OAAAD,QAAA,IAAAA,OAAA,EAAAA,EAAQI,SAAU,SACdC,QAAQ,IAAK,WAAE,IAAAJ,EAAAA,EAAK,IACxCK,EAAU,KAAMC,EAAW,OAAmB,QAAfL,EAAKlF,EAAOmF,UAAG,IAAAD,EAAAA,EAAKC,GAAKK,MAAM,IAAK,GACxE,GAAIL,EAAIM,WAAWX,IAAsBY,OAAOC,SAASC,SAASH,WAAA,IAAAI,OAAef,IAAsB,CACrG,IAAMgB,EAAaX,EAAIE,QAAQP,EAAmB,IAAIiB,cACtDT,EAhBJ,SAAoCN,GAClC,IAAIgB,EAAUrH,EAAYqG,GAC1B,OAAKgB,GAAWhG,EAAOgF,KACrBgB,EAAUhB,IAEPgB,GAAWhB,EAASiB,SAAS,QAC/BD,GAAWhB,EAASQ,MAAM,MAEtBQ,GAAW,IACpB,CAOcE,CAA2BJ,GACrCP,EAAWO,CACb,CACA,OAAAR,EAAUA,EAAQa,cAClBZ,EAAWA,EAASQ,cACb,CACLK,SAAAb,EACAc,QAAAf,EACAgB,OAAA,GAAAT,OAAWN,EAAQ,KAAAM,OAAIP,GAE3B,C","sources":["../merch:../merch/merch.js"],"sourcesContent":["const LanguageMap = {\n  en: 'US',\n  'en-gb': 'GB',\n  'es-mx': 'MX',\n  'fr-ca': 'CA',\n  da: 'DK',\n  et: 'EE',\n  ar: 'DZ',\n  el: 'GR',\n  iw: 'IL',\n  he: 'IL',\n  id: 'ID',\n  ms: 'MY',\n  nb: 'NO',\n  sl: 'SI',\n  sv: 'SE',\n  cs: 'CZ',\n  uk: 'UA',\n  hi: 'IN',\n  'zh-hans': 'CN',\n  'zh-hant': 'TW',\n  ja: 'JP',\n  ko: 'KR',\n  fil: 'PH',\n  th: 'TH',\n  vi: 'VN'\n};\nconst GeoMap = {\n  ar: 'AR_es',\n  be_en: 'BE_en',\n  be_fr: 'BE_fr',\n  be_nl: 'BE_nl',\n  br: 'BR_pt',\n  ca: 'CA_en',\n  ch_de: 'CH_de',\n  ch_fr: 'CH_fr',\n  ch_it: 'CH_it',\n  cl: 'CL_es',\n  co: 'CO_es',\n  la: 'DO_es',\n  mx: 'MX_es',\n  pe: 'PE_es',\n  africa: 'MU_en',\n  dk: 'DK_da',\n  de: 'DE_de',\n  ee: 'EE_et',\n  eg_ar: 'EG_ar',\n  eg_en: 'EG_en',\n  es: 'ES_es',\n  fr: 'FR_fr',\n  gr_el: 'GR_el',\n  gr_en: 'GR_en',\n  ie: 'IE_en',\n  il_he: 'IL_iw',\n  it: 'IT_it',\n  lv: 'LV_lv',\n  lt: 'LT_lt',\n  lu_de: 'LU_de',\n  lu_en: 'LU_en',\n  lu_fr: 'LU_fr',\n  my_en: 'MY_en',\n  my_ms: 'MY_ms',\n  hu: 'HU_hu',\n  mt: 'MT_en',\n  mena_en: 'DZ_en',\n  mena_ar: 'DZ_ar',\n  nl: 'NL_nl',\n  no: 'NO_nb',\n  pl: 'PL_pl',\n  pt: 'PT_pt',\n  ro: 'RO_ro',\n  si: 'SI_sl',\n  sk: 'SK_sk',\n  fi: 'FI_fi',\n  se: 'SE_sv',\n  tr: 'TR_tr',\n  uk: 'GB_en',\n  at: 'AT_de',\n  cz: 'CZ_cs',\n  bg: 'BG_bg',\n  ru: 'RU_ru',\n  ua: 'UA_uk',\n  au: 'AU_en',\n  in_en: 'IN_en',\n  in_hi: 'IN_hi',\n  id_en: 'ID_en',\n  id_id: 'ID_id',\n  nz: 'NZ_en',\n  sa_ar: 'SA_ar',\n  sa_en: 'SA_en',\n  sg: 'SG_en',\n  cn: 'CN_zh-Hans',\n  tw: 'TW_zh-Hant',\n  hk_zh: 'HK_zh-hant',\n  jp: 'JP_ja',\n  kr: 'KR_ko',\n  za: 'ZA_en',\n  ng: 'NG_en',\n  cr: 'CR_es',\n  ec: 'EC_es',\n  pr: 'US_es',\n  // not a typo, should be US\n  gt: 'GT_es',\n  cis_en: 'TM_en',\n  cis_ru: 'TM_ru',\n  sea: 'SG_en',\n  th_en: 'TH_en',\n  th_th: 'TH_th'\n};\n\n/**\n * Used when 3in1 modals are configured with ms=e or cs=t extra parameter, but 3in1 is disabled.\n * Dexter modals should deeplink to plan=edu or plan=team tabs.\n * @type {Record<string, string>}\n */\n\nconst LANG_STORE_PREFIX = 'langstore/';\nfunction getDefaultLangstoreCountry(language) {\n  let country = LanguageMap[language];\n  if (!country && GeoMap[language]) {\n    country = language; // es, fr, pt, de\n  }\n  if (!country && language.includes('-')) {\n    [country] = language.split('-'); // variations like es-419, pt-PT\n  }\n  return country || 'US';\n}\nexport function getMiloLocaleSettings(locale) {\n  const localePrefix = locale?.prefix || 'US_en';\n  const geo = localePrefix.replace('/', '') ?? '';\n  let [country = 'US', language = 'en'] = (GeoMap[geo] ?? geo).split('_', 2);\n  if (geo.startsWith(LANG_STORE_PREFIX) || window.location.pathname.startsWith(`/${LANG_STORE_PREFIX}`)) {\n    const localeLang = geo.replace(LANG_STORE_PREFIX, '').toLowerCase();\n    country = getDefaultLangstoreCountry(localeLang);\n    language = localeLang;\n  }\n  country = country.toUpperCase();\n  language = language.toLowerCase();\n  return {\n    language,\n    country,\n    locale: `${language}_${country}`\n  };\n}\n\n/* Optional checkout link params that are appended to checkout urls as is */"],"names":["l","en","da","et","ar","el","iw","he","id","ms","nb","sl","sv","cs","uk","hi","ja","ko","fil","th","vi","i","be_en","be_fr","be_nl","br","ca","ch_de","ch_fr","ch_it","cl","co","la","mx","pe","africa","dk","de","ee","eg_ar","eg_en","es","fr","gr_el","gr_en","ie","il_he","it","lv","lt","lu_de","lu_en","lu_fr","my_en","my_ms","hu","mt","mena_en","mena_ar","nl","no","pl","pt","ro","si","sk","fi","se","tr","at","cz","bg","ru","ua","au","in_en","in_hi","id_en","id_id","nz","sa_ar","sa_en","sg","cn","tw","hk_zh","jp","kr","za","ng","cr","ec","pr","gt","cis_en","cis_ru","sea","th_en","th_th","r","c","_","_replace","_i$s","s","prefix","replace","n","t","split","startsWith","window","location","pathname","concat","a","toLowerCase","e","includes","o","toUpperCase","language","country","locale"],"sourceRoot":""}