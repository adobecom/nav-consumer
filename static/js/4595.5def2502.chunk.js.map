{"version":3,"file":"static/js/4595.5def2502.chunk.js","mappings":"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","sources":["../node_modules/@adobecom/features/georouting/georouting.js"],"sourcesContent":["export const getCookie = (name) => document.cookie\n  .split('; ')\n  .find((row) => row.startsWith(`${name}=`))\n  ?.split('=')[1];\n\nconst geo2jsonp = (callback) => {\n  // Setup a unique name that can be called & destroyed\n  const callbackName = `jsonp_${Math.round(100000 * Math.random())}`;\n\n  const script = document.createElement('script');\n  script.src = `https://geo2.adobe.com/json/?callback=${callbackName}`;\n\n  // Define the function that the script will call\n  window[callbackName] = (data) => {\n    delete window[callbackName];\n    document.body.removeChild(script);\n    callback(data);\n  };\n\n  document.body.appendChild(script);\n};\n\nconst getAkamaiCode = () => new Promise((resolve) => {\n  const urlParams = new URLSearchParams(window.location.search);\n  const akamaiLocale = urlParams.get('akamaiLocale') || sessionStorage.getItem('akamai');\n  if (akamaiLocale !== null) {\n    resolve(akamaiLocale.toLowerCase());\n  } else {\n    geo2jsonp((data) => {\n      const code = data.country.toLowerCase();\n      sessionStorage.setItem('akamai', code);\n      resolve(code);\n    });\n  }\n});\n\n// Determine if any of the locales can be linked to.\nasync function getAvailableLocales(locales, config, getMetadata) {\n  const fallback = getMetadata('fallbackrouting') || config.fallbackRouting;\n\n  const { contentRoot } = config.locale;\n  const path = window.location.href.replace(contentRoot, '');\n\n  const availableLocales = [];\n  const pagesExist = [];\n  for (const [index, locale] of locales.entries()) {\n    const prefix = locale.prefix ? `/${locale.prefix}` : '';\n    const localeRoot = `${prefix}${config.contentRoot ?? ''}`;\n    const localePath = `${localeRoot}${path}`;\n\n    const pageExistsRequest = fetch(localePath, { method: 'HEAD' }).then((resp) => {\n      if (resp.ok) {\n        locale.url = localePath;\n        availableLocales[index] = locale;\n      } else if (fallback !== 'off') {\n        locale.url = `${localeRoot}/`;\n        availableLocales[index] = locale;\n      }\n    });\n    pagesExist.push(pageExistsRequest);\n  }\n  if (pagesExist.length > 0) await Promise.all(pagesExist);\n\n  return availableLocales.filter((a) => !!a);\n}\n\nfunction buildText(locales, config, createTag) {\n  const fragment = new DocumentFragment();\n  const wrapper = createTag('div', { class: 'text-wrapper' });\n  locales.forEach((locale) => {\n    const lang = config.locales[locale.prefix]?.ietf ?? '';\n    const text = createTag('p', { class: 'locale-text', lang }, locale.text);\n    wrapper.append(text);\n  });\n  fragment.append(wrapper);\n  return fragment;\n}\n\nfunction buildLinks(locales, config, createTag) {\n  const fragment = new DocumentFragment();\n  const wrapper = createTag('div', { class: 'link-wrapper' });\n  locales.forEach((locale) => {\n    const lang = config.locales[locale.prefix]?.ietf ?? '';\n    const link = createTag('a', { class: 'locale-link', lang, href: locale.url }, locale.button);\n    const para = createTag('p', { class: 'locale-link-wrapper' }, link);\n    wrapper.append(para);\n    link.addEventListener('click', () => {\n      const modPrefix = locale.prefix || 'us';\n      // set cookie so legacy code on adobecom still works properly.\n      document.cookie = `international=${modPrefix};path=/`;\n      sessionStorage.setItem('international', modPrefix);\n      link.closest('.dialog-modal').dispatchEvent(new Event('closeModal'));\n    });\n  });\n  fragment.append(wrapper);\n  return fragment;\n}\n\nfunction getCodes(data) {\n  return data.akamaiCodes.split(',').map((a) => a.toLowerCase().trim());\n}\n\nfunction getMatches(data, suppliedCode) {\n  return data.reduce((rdx, locale) => {\n    const localeCodes = getCodes(locale);\n    if (localeCodes.some((code) => code === suppliedCode)) rdx.push(locale);\n    return rdx;\n  }, []);\n}\n\nasync function getDetails(currentPage, localeMatches, config, createTag, getMetadata) {\n  const availableLocales = await getAvailableLocales(localeMatches, config, getMetadata);\n\n  if (availableLocales && availableLocales.length > 0) {\n    currentPage.url = window.location.hash ? document.location.href : '#';\n    const imgUrl = `${config.miloLibs || config.codeRoot}/img/icons/Smock_GlobeOutline_18_N.svg`;\n    const worldIcon = createTag('img', { src: imgUrl, class: 'world-icon' });\n    const text = buildText([...availableLocales, currentPage], config, createTag);\n    const links = buildLinks([...availableLocales, currentPage], config, createTag);\n    const detailsFragment = new DocumentFragment();\n    detailsFragment.append(worldIcon, text, links);\n    return detailsFragment;\n  }\n  return null;\n}\n\nasync function showModal(details) {\n  const { getModal } = await import('../../blocks/modal/modal.js');\n  return getModal(null, { class: 'locale-modal', id: 'locale-modal', content: details, closeEvent: 'closeModal' });\n}\n\nexport default async function loadGeoRouting(config, createTag, getMetadata, geoDetails = {}) {\n  const { locale } = config;\n\n  const urlLocale = locale.prefix.replace('/', '');\n  const storedInter = sessionStorage.getItem('international') || getCookie('international');\n  const storedLocale = storedInter === 'us' ? '' : storedInter;\n\n  const urlGeoData = geoDetails.data?.find((d) => d.prefix === urlLocale);\n  if (!urlGeoData) return;\n\n  if (storedLocale || storedLocale === '') {\n    // Show modal when url and cookie disagree\n    if (urlLocale.split('_')[0] !== storedLocale.split('_')[0]) {\n      const localeMatches = geoDetails.data?.filter((d) => d.prefix === storedLocale);\n      const details = await getDetails(urlGeoData, localeMatches, config, createTag, getMetadata);\n      if (details) { await showModal(details); }\n    }\n    return;\n  }\n\n  // Show modal when derived countries from url locale and akamai disagree\n  const akamaiCode = await getAkamaiCode();\n  if (akamaiCode && !getCodes(urlGeoData).includes(akamaiCode)) {\n    const localeMatches = getMatches(geoDetails.data, akamaiCode);\n    const details = await getDetails(urlGeoData, localeMatches, config, createTag, getMetadata);\n    if (details) { await showModal(details); }\n  }\n}\n"],"names":["getCookie","name","_document$cookie$spli","document","cookie","split","find","row","startsWith","concat","getAkamaiCode","Promise","resolve","akamaiLocale","URLSearchParams","window","location","search","get","sessionStorage","getItem","toLowerCase","callback","callbackName","Math","round","random","script","createElement","src","data","body","removeChild","appendChild","geo2jsonp","code","country","setItem","getCodes","akamaiCodes","map","a","trim","async","getDetails","currentPage","localeMatches","config","createTag","getMetadata","availableLocales","locales","fallback","fallbackRouting","contentRoot","locale","path","href","replace","pagesExist","index","entries","_config$contentRoot","prefix","localeRoot","localePath","pageExistsRequest","fetch","method","then","resp","ok","url","push","length","all","filter","getAvailableLocales","hash","worldIcon","miloLibs","codeRoot","class","text","fragment","DocumentFragment","wrapper","forEach","_config$locales$local","_config$locales$local2","lang","ietf","append","buildText","links","_config$locales$local3","_config$locales$local4","link","button","para","addEventListener","modPrefix","closest","dispatchEvent","Event","buildLinks","detailsFragment","showModal","details","getModal","id","content","closeEvent","loadGeoRouting","_geoDetails$data","geoDetails","arguments","undefined","urlLocale","storedInter","storedLocale","urlGeoData","d","_geoDetails$data2","akamaiCode","includes","suppliedCode","reduce","rdx","some"],"sourceRoot":""}