{"version":3,"file":"static/js/3498.7946a182.chunk.js","mappings":"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","sources":["../node_modules/@adobecom/utils/logWebVitals.js"],"sourcesContent":["const LANA_CLIENT_ID = 'pageperf';\n\nlet lanaSent;\n\nfunction sendToLana(lanaData) {\n  if (lanaSent) return;\n  const ua = window.navigator.userAgent;\n\n  Object.assign(lanaData, {\n    chromeVer: ua.match(/Chrome\\/(\\d+\\.\\d+\\.\\d+\\.\\d+)/)?.[1] || '',\n    country: sessionStorage.getItem('akamai') || sessionStorage.getItem('feds_location') || '',\n    // eslint-disable-next-line compat/compat\n    downlink: window.navigator?.connection?.downlink || '',\n    loggedIn: window.adobeIMS?.isSignedInUser() || false,\n    os: (ua.match(/Windows/) && 'win')\n      || (ua.match(/CriOS/) && 'iOS')\n      || (ua.match(/Mac/) && 'mac')\n      || (ua.match(/Android/) && 'android')\n      || (ua.match(/Linux/) && 'linux')\n      || '',\n    tablet: (ua.match(/(ipad|iPad|tablet|(android(?!.*mobile))|(windows(?!.*phone).*touch))/) && 'yes')\n      || 'no',\n    windowHeight: window.innerHeight,\n    windowWidth: window.innerWidth,\n    url: `${window.location.host}${window.location.pathname}`,\n  });\n\n  lanaData.cls ||= 0;\n  const lanaDataStr = Object.entries(lanaData)\n    .sort(([a], [b]) => a.localeCompare(b))\n    .map(([key, value]) => `${key}=${value}`)\n    .join(',');\n\n  window.lana.log(lanaDataStr, {\n    clientId: LANA_CLIENT_ID,\n    sampleRate: 100,\n  });\n\n  lanaSent = true;\n}\n\nfunction observeCLS(lanaData) {\n  let cls = 0;\n  /* c8 ignore start */\n  new PerformanceObserver((entryList) => {\n    for (const entry of entryList.getEntries()) {\n      if (!entry.hadRecentInput) cls += entry.value;\n    }\n    lanaData.cls = cls.toPrecision(4);\n  }).observe({ type: 'layout-shift', buffered: true });\n}\n\nfunction getElementInfo(el) {\n  const elSrc = el.src || el.currentSrc || el.href || el.poster;\n  if (elSrc) {\n    try {\n      const srcUrl = new URL(elSrc);\n      return srcUrl.origin === window.location.origin ? srcUrl.pathname : srcUrl.href;\n    } catch {\n      // fall through\n    }\n  }\n  const elHtml = el.outerHTML.replaceAll(',', '');\n  if (elHtml.length <= 100) return elHtml;\n  return `${el.outerHTML.substring(0, 100)}...`;\n}\n\nfunction isFragmentFromMep(fragPath, mep) {\n  return mep.experiments?.some(({ selectedVariant }) => {\n    const { commands = [], fragments = [] } = selectedVariant || {};\n\n    return commands.some((cmd) => {\n      try {\n        return new URL(cmd.target).pathname === fragPath;\n      } catch {\n        return false;\n      }\n    }) || fragments.some((cmd) => cmd?.val === fragPath);\n  });\n}\n\nconst boolStr = (val) => `${!!val}`;\n\nfunction observeLCP(lanaData, delay, mep) {\n  const sectionOne = document.querySelector('main > div');\n  new PerformanceObserver((list) => {\n    const entries = list.getEntries();\n    const lastEntry = entries[entries.length - 1]; // Use the latest LCP candidate\n    lanaData.lcp = parseInt(lastEntry.startTime, 10);\n    const lcpEl = lastEntry.element;\n    lanaData.lcpElType = lcpEl?.nodeName?.toLowerCase();\n    if (lanaData.lcpElType) {\n      lanaData.lcpEl = getElementInfo(lcpEl);\n      lanaData.lcpSectionOne = boolStr(sectionOne.contains(lcpEl));\n      const closestFrag = lcpEl.closest('.fragment');\n      lanaData.isFrag = boolStr(closestFrag);\n      if (closestFrag) {\n        lanaData.isMep = boolStr(isFragmentFromMep(closestFrag.dataset.path, mep));\n      } else {\n        lanaData.isMep = 'false';\n      }\n    } else {\n      lanaData.lcpElType = 'Element Was Replaced';\n    }\n\n    setTimeout(() => {\n      sendToLana(lanaData);\n    }, parseInt(delay, 10));\n  }).observe({ type: 'largest-contentful-paint', buffered: true });\n  /* c8 ignore stop */\n}\n\nfunction logMepExperiments(lanaData, mep) {\n  mep?.experiments?.forEach((exp, idx) => {\n    // only log manifests that affect the page\n    if (exp.selectedVariantName === 'default') return;\n    lanaData[`manifest${idx + 1}path`] = exp.manifestPath;\n    lanaData[`manifest${idx + 1}selected`] = exp.selectedVariantName;\n  });\n}\n\nexport default function webVitals(mep, { delay = 1000, sampleRate = 50 } = {}) {\n  const isChrome = () => {\n    const nav = window.navigator;\n    const desktopChrome = nav.userAgent.includes('Chrome') && nav.vendor.includes('Google');\n    const iOSChrome = nav.userAgent.includes('CriOS') && nav.vendor.includes('Google');\n    return desktopChrome || iOSChrome;\n  };\n\n  if (!isChrome() || Math.random() * 100 > sampleRate) return;\n  const getConsent = () => window.adobePrivacy?.activeCookieGroups().indexOf('C0002') !== -1;\n  function handleEvent() {\n    if (!getConsent()) return;\n    const lanaData = {};\n    logMepExperiments(lanaData, mep);\n    observeCLS(lanaData);\n    observeLCP(lanaData, delay, mep);\n  }\n  if (getConsent()) {\n    handleEvent();\n    return;\n  }\n  window.addEventListener('adobePrivacy:PrivacyConsent', handleEvent, { once: true });\n  window.addEventListener('adobePrivacy:PrivacyCustom', handleEvent, { once: true });\n}\n"],"names":["l","u","d","e","concat","h","n","o","t","document","querySelector","PerformanceObserver","i","_c$nodeName","s","getEntries","r","length","lcp","parseInt","startTime","c","element","lcpElType","nodeName","toLowerCase","lcpEl","src","currentSrc","href","poster","URL","origin","window","location","pathname","outerHTML","replaceAll","substring","w","lcpSectionOne","contains","a","closest","isFrag","isMep","_n$experiments","experiments","some","_ref4","selectedVariant","commands","fragments","target","val","p","dataset","path","setTimeout","_n$match","_window$navigator","_window$adobeIMS","navigator","userAgent","Object","assign","chromeVer","match","country","sessionStorage","getItem","downlink","connection","loggedIn","adobeIMS","isSignedInUser","os","tablet","windowHeight","innerHeight","windowWidth","innerWidth","url","host","cls","entries","sort","_ref","_ref2","localeCompare","map","_ref3","join","lana","log","clientId","sampleRate","m","observe","type","buffered","v","delay","arguments","undefined","includes","vendor","Math","random","getConsent","_window$adobePrivacy","adobePrivacy","activeCookieGroups","indexOf","_n$experiments2","forEach","selectedVariantName","manifestPath","g","hadRecentInput","value","toPrecision","f","addEventListener","once"],"sourceRoot":""}