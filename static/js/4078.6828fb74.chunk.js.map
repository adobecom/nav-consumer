{"version":3,"file":"static/js/4078.6828fb74.chunk.js","mappings":"qLAAA,SAASA,EAAeC,EAASC,GAAa,IAAAC,EAC5C,OAAQD,GACHA,IAAgBD,GAChBA,EAAQG,SAASF,IACjBA,EAAYE,SAASH,KACT,QADgBE,EAC5BD,EAAYG,kBAAA,IAAAF,OAAA,EAAZA,EAAwBC,SAASH,GACxC,CAUA,SAASK,IACP,IAAIL,GAAY,EACZC,GAAY,EAEhBK,SAASC,iBAAiB,WAAYC,IACtB,QAAVA,EAAEC,MACJT,GAAY,EACZU,YAAW,KACLV,IAfVM,SAASK,gBAAgBC,MAAMC,YAAY,yBAA0B,QAiB/DZ,GAAY,EACd,IAEJ,IAEAK,SAASC,iBAAiB,WAAYC,IAAM,IAAAM,EAAAC,EAC1C,IAAMC,EAA+B,QAA/BF,EAAmB,QAAnBC,EAAUP,EAAES,OAAOb,kBAAA,IAAAW,OAAA,EAATA,EAAqBG,qBAAA,IAAAJ,EAAAA,EAAiBN,EAAES,OAEpDhB,GArBNK,SAASK,gBAAgBC,MAAMO,eAAe,0BAsB5CnB,GAAY,EAEZ,IAAMoB,EAAOJ,EAAQK,wBACfC,EAAiBC,OAAOC,YAG9B,GAFwBJ,EAAKK,IAAM,GAAKL,EAAKM,OAASJ,EAIpD,YADAN,EAAQW,eAAe,CAAEC,SAAU,UAAWC,MAAO,WAIvD,IAAMC,EAAUV,EAAKW,KAAOX,EAAKY,MAAQ,EACnCC,EAAeb,EAAKM,OAAuB,IAAdN,EAAKc,OAElCC,EAAiB7B,SAAS8B,iBAAiBN,EAASV,EAAKK,KACzDY,EAAoB/B,SAAS8B,iBAAiBN,EAASG,GAEzDlC,EAAeiB,EAASmB,IACvBpC,EAAeiB,EAASqB,IAE7BrB,EAAQW,eAAe,CAAEC,SAAU,UAAWC,MAAO,UACvD,GACF,CAEO,IAAMS,EAAgCC,IAAwB,IAAAC,EAAA,IAArBC,QAAAzC,EAAS0C,MAAAzC,GAAMsC,GACxDvC,IAAYC,IACjBD,EAAQ0C,MAAQzC,EACe,QADfuC,EAChBxC,EAAQ2C,QAAQ,wBAAe,IAAAH,GAA/BA,EAAkCI,aAAa,aAAc3C,GAC/D,EAEe,SAAR4C,IACLxC,GACF,C","sources":["../node_modules/@adobecom/scripts/accessibility.js"],"sourcesContent":["function shouldntScroll(element, elFromPoint) {\n  return !elFromPoint\n    || elFromPoint === element\n    || element.contains(elFromPoint)\n    || elFromPoint.contains(element)\n    || elFromPoint.shadowRoot?.contains(element);\n}\n\nfunction setScrollPadding() {\n  document.documentElement.style.setProperty('--scroll-padding-block', '25vh');\n}\n\nfunction removeScrollPadding() {\n  document.documentElement.style.removeProperty('--scroll-padding-block');\n}\n\nfunction scrollTabFocusedElIntoView() {\n  let isFocused = false;\n  let isPadding = false;\n\n  document.addEventListener('keydown', (e) => {\n    if (e.key === 'Tab') {\n      isFocused = false;\n      setTimeout(() => {\n        if (isFocused) return;\n        setScrollPadding();\n        isPadding = true;\n      });\n    }\n  });\n\n  document.addEventListener('focusin', (e) => {\n    const element = e.target.shadowRoot?.activeElement ?? e.target;\n\n    if (isPadding) removeScrollPadding();\n    isFocused = true;\n\n    const rect = element.getBoundingClientRect();\n    const viewportHeight = window.innerHeight;\n    const outsideViewport = rect.top < 0 || rect.bottom > viewportHeight;\n\n    if (outsideViewport) {\n      element.scrollIntoView({ behavior: 'instant', block: 'center' });\n      return;\n    }\n\n    const centerX = rect.left + rect.width / 2;\n    const bottomPointY = rect.bottom - rect.height * 0.05;\n\n    const elFromPointTop = document.elementFromPoint(centerX, rect.top);\n    const elFromPointBottom = document.elementFromPoint(centerX, bottomPointY);\n\n    if (shouldntScroll(element, elFromPointTop)\n      && shouldntScroll(element, elFromPointBottom)) return;\n\n    element.scrollIntoView({ behavior: 'instant', block: 'center' });\n  });\n}\n\nexport const setDialogAndElementAttributes = ({ element, title }) => {\n  if (!element || !title) return;\n  element.title = title;\n  element.closest('.dialog-modal')?.setAttribute('aria-label', title);\n};\n\nexport default function init() {\n  scrollTabFocusedElIntoView();\n}\n"],"names":["r","t","o","_o$shadowRoot","contains","shadowRoot","f","document","addEventListener","i","key","setTimeout","documentElement","style","setProperty","_i$target$shadowRoot$","_i$target$shadowRoot","n","target","activeElement","removeProperty","e","getBoundingClientRect","s","window","innerHeight","top","bottom","scrollIntoView","behavior","block","c","left","width","d","height","l","elementFromPoint","a","p","_ref","_t$closest","element","title","closest","setAttribute","b"],"sourceRoot":""}