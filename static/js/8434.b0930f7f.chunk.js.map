{"version":3,"file":"static/js/8434.b0930f7f.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../../milo/libs/blocks/global-navigation/features/profile/dropdown.js"],"sourcesContent":["function _taggedTemplateLiteral(e, t) {\n  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, {\n    raw: {\n      value: Object.freeze(t)\n    }\n  }));\n}\nexport { _taggedTemplateLiteral as default };","import { getConfig, getFedsPlaceholderConfig } from '../../../../utils/utils.js';\nimport { toFragment, trigger, closeAllDropdowns, logErrorFor } from '../../utilities/utilities.js';\nimport { replaceKeyArray } from '../../../../features/placeholders.js';\n\nconst getLanguage = (ietfLocale) => {\n  if (!ietfLocale.length) return 'en';\n\n  const nonStandardLocaleMap = { 'no-NO': 'nb' };\n\n  if (nonStandardLocaleMap[ietfLocale]) {\n    return nonStandardLocaleMap[ietfLocale];\n  }\n\n  return ietfLocale.split('-')[0];\n};\n\nconst decorateProfileLink = (service, path = '') => {\n  const defaultServiceUrls = {\n    adminconsole: 'https://adminconsole.adobe.com',\n    account: 'https://account.adobe.com',\n  };\n\n  if (!service.length || !defaultServiceUrls[service]) return '';\n\n  let serviceUrl;\n  const { env } = getConfig();\n\n  if (!env?.[service]) {\n    serviceUrl = defaultServiceUrls[service];\n  } else {\n    serviceUrl = new URL(defaultServiceUrls[service]);\n    serviceUrl.hostname = env[service];\n  }\n\n  return `${serviceUrl}${path}`;\n};\n\nconst decorateAction = (label, path) => toFragment`<li><a class=\"feds-profile-action\" href=\"${decorateProfileLink('adminconsole', path)}\">${label}</a></li>`;\n\nclass ProfileDropdown {\n  constructor({\n    rawElem,\n    decoratedElem,\n    avatar,\n    sections,\n    buttonElem,\n    openOnInit,\n  } = {}) {\n    this.placeholders = {};\n    this.profileData = {};\n    this.avatar = avatar;\n    this.buttonElem = buttonElem;\n    this.decoratedElem = decoratedElem;\n    this.sections = sections;\n    this.openOnInit = openOnInit;\n    this.localMenu = rawElem.querySelector('h5')?.parentElement;\n    logErrorFor(this.init.bind(this), 'ProfileDropdown.init()', 'gnav-profile', 'e');\n  }\n\n  async init() {\n    await this.getData();\n    this.setButtonLabel();\n    this.dropdown = this.decorateDropdown();\n    this.addEventListeners();\n\n    if (this.openOnInit) trigger({ element: this.buttonElem });\n\n    this.decoratedElem.append(this.dropdown);\n  }\n\n  async getData() {\n    [\n      [\n        this.placeholders.profileButton,\n        this.placeholders.signOut,\n        this.placeholders.viewAccount,\n        this.placeholders.manageTeams,\n        this.placeholders.manageEnterprise,\n        this.placeholders.profileAvatar,\n      ],\n      { displayName: this.profileData.displayName, email: this.profileData.email },\n    ] = await Promise.all([\n      replaceKeyArray(\n        ['profile-button', 'sign-out', 'view-account', 'manage-teams', 'manage-enterprise', 'profile-avatar'],\n        getFedsPlaceholderConfig(),\n      ),\n      window.adobeIMS.getProfile(),\n    ]);\n  }\n\n  setButtonLabel() {\n    if (this.buttonElem) this.buttonElem.setAttribute('aria-label', this.profileData.displayName);\n  }\n\n  decorateDropdown() {\n    const { locale } = getConfig();\n    const lang = getLanguage(locale.ietf);\n\n    // TODO: the account name and email might need a bit of adaptive behavior;\n    // historically we shrunk the font size and displayed the account name on two lines;\n    // the email had some special logic as well;\n    // for MVP, we took a simpler approach (\"Some very long name, very l...\")\n    this.avatarElem = toFragment`<img\n      data-cs-mask\n      class=\"feds-profile-img\"\n      src=\"${this.avatar}\"\n      tabindex=\"0\"\n      alt=\"${this.placeholders.profileAvatar}\"\n      data-url=\"${decorateProfileLink('account', `profile?lang=${lang}`)}\"></img>`;\n    return toFragment`\n      <div id=\"feds-profile-menu\" class=\"feds-profile-menu\">\n        <a\n          href=\"${decorateProfileLink('account', `?lang=${lang}`)}\"\n          class=\"feds-profile-header\"\n          daa-ll=\"${this.placeholders.viewAccount}\"\n          aria-label=\"${this.placeholders.viewAccount}\"\n        >\n          ${this.avatarElem}\n          <div class=\"feds-profile-details\">\n            <p data-cs-mask class=\"feds-profile-name\">${this.profileData.displayName}</p>\n            <p data-cs-mask class=\"feds-profile-email\">${this.decorateEmail(this.profileData.email)}</p>\n            <p class=\"feds-profile-account\">${this.placeholders.viewAccount}</p>\n          </div>\n        </a>\n        ${this.localMenu ? this.decorateLocalMenu() : ''}\n        <ul class=\"feds-profile-actions\">\n          ${this.sections?.manage?.items?.team?.id ? decorateAction(this.placeholders.manageTeams, '/team') : ''}\n          ${this.sections?.manage?.items?.enterprise?.id ? decorateAction(this.placeholders.manageEnterprise) : ''}\n          ${this.decorateSignOut()}\n        </ul>\n      </div>\n    `;\n  }\n\n  decorateEmail() {\n    const maxCharacters = 12;\n    const emailParts = this.profileData.email.split('@');\n    const username = emailParts[0].length <= maxCharacters\n      ? emailParts[0]\n      : `${emailParts[0].slice(0, maxCharacters)}…`;\n    const domainArr = emailParts[1].split('.');\n    const tld = domainArr.pop();\n    let domain = domainArr.join('.');\n    domain = domain.length <= maxCharacters\n      ? domain\n      : `${domain.slice(0, maxCharacters)}…`;\n\n    return `${username}@${domain}.${tld}`;\n  }\n\n  decorateLocalMenu() {\n    if (this.localMenu) this.localMenu.classList.add('feds-local-menu');\n\n    return this.localMenu;\n  }\n\n  decorateSignOut() {\n    const signOutLink = toFragment`\n      <li>\n        <a href=\"#\" class=\"feds-profile-action\" daa-ll=\"${this.placeholders.signOut}\">${this.placeholders.signOut}</a>\n      </li>\n    `;\n\n    signOutLink.addEventListener('click', (e) => {\n      e.preventDefault();\n      window.dispatchEvent(new Event('feds:signOut'));\n      window.adobeIMS.signOut();\n    });\n\n    return signOutLink;\n  }\n\n  addEventListeners() {\n    this.buttonElem.addEventListener('click', (e) => trigger({ element: this.buttonElem, event: e }));\n    this.buttonElem.addEventListener('keydown', (e) => e.code === 'Escape' && closeAllDropdowns());\n    this.dropdown.addEventListener('keydown', (e) => e.code === 'Escape' && closeAllDropdowns());\n    this.avatarElem.addEventListener('click', (e) => {\n      e.preventDefault();\n      window.location.assign(this.avatarElem.dataset?.url);\n    });\n  }\n}\n\nexport default ProfileDropdown;\n"],"names":["_taggedTemplateLiteral","e","t","slice","Object","freeze","defineProperties","raw","value","h","a","arguments","length","undefined","adminconsole","account","s","env","i","d","URL","hostname","concat","g","decorateAction","n","_templateObject","b","constructor","_e$querySelector","rawElem","decoratedElem","avatar","sections","buttonElem","o","openOnInit","l","this","placeholders","profileData","localMenu","querySelector","parentElement","u","init","bind","getData","setButtonLabel","dropdown","decorateDropdown","addEventListeners","c","element","append","profileButton","signOut","viewAccount","manageTeams","manageEnterprise","profileAvatar","displayName","email","Promise","all","m","f","window","adobeIMS","getProfile","setAttribute","_this$sections","_this$sections2","locale","split","E","ietf","avatarElem","_templateObject2","_templateObject3","decorateEmail","decorateLocalMenu","manage","items","team","id","enterprise","decorateSignOut","pop","join","classList","add","_templateObject4","addEventListener","preventDefault","dispatchEvent","Event","event","code","r","_this$avatarElem$data","location","assign","dataset","url"],"sourceRoot":""}