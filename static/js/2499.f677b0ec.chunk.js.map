{"version":3,"file":"static/js/2499.f677b0ec.chunk.js","mappings":"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","sources":["../node_modules/@adobecom/blocks/global-navigation/utilities/keyboard/localNav.js"],"sourcesContent":["import { selectors, getNextVisibleItemPosition, getPreviousVisibleItemPosition } from './utils.js';\nimport { trigger } from '../utilities.js';\n\nconst focusables = (root) => [...root.querySelectorAll('a[href],button:not([disabled])')];\n\nconst nestedFocusables = (root) => [...root.querySelectorAll('a, button, .feds-menu-headline')].filter((el) => {\n  const items = el.closest('.feds-menu-items');\n  const headline = items?.previousElementSibling;\n  return !items || headline?.getAttribute('aria-expanded') === 'true';\n});\n\nfunction getNavList() {\n  return [...document.querySelector('.feds-localnav-items').children].flatMap((item) => {\n    const triggerBtn = item.querySelector('a, button, .feds-menu-headline');\n    if (!triggerBtn || !triggerBtn.matches('[aria-haspopup=\"true\"][aria-expanded=\"true\"]')) return triggerBtn ? [triggerBtn] : [];\n\n    const popup = item.querySelector('.feds-popup');\n    if (!popup) return [triggerBtn];\n\n    const hasHeadline = item.querySelector('.feds-menu-items');\n    const dropdown = hasHeadline\n      ? nestedFocusables(popup)\n      : focusables(popup);\n\n    return [triggerBtn, ...dropdown];\n  });\n}\n\nfunction getState() {\n  const items = [...document.querySelectorAll(selectors.localNavItems)];\n  const openTrigger = document.querySelector(selectors.expandedPopupTrigger);\n  const currentEl = document.activeElement\n    .closest(selectors.localNavItem)?.querySelector(selectors.localNavItems);\n  const curr = items.indexOf(currentEl);\n  return {\n    items,\n    curr,\n    prev: getPreviousVisibleItemPosition(curr, items),\n    next: getNextVisibleItemPosition(curr, items),\n    openTrigger,\n  };\n}\n\nfunction open({ triggerEl, e } = {}) {\n  const { items, curr } = getState();\n  const el = triggerEl || items[curr];\n  if (!el?.hasAttribute('aria-haspopup')) return;\n  if (e) e.preventDefault();\n  if (el.getAttribute('aria-expanded') === 'false') {\n    const isHeader = el.classList.contains('feds-localnav-title') || el.classList.contains('feds-menu-headline');\n    if (isHeader) document.querySelector(selectors.localNav).classList.add('feds-localnav--active');\n    trigger({ element: el, type: isHeader ? 'headline' : 'localNavItem' });\n  }\n}\n\nfunction navigate(current, dir) {\n  const items = getNavList();\n  const currIdx = items.indexOf(current);\n  const isHeader = current.classList.contains('feds-localnav-title');\n  const titleBtn = document.querySelector(`${selectors.localNav} > button`);\n  if (currIdx === -1 && !isHeader) return;\n  if (isHeader && dir === 1) open({ triggerEl: current });\n  // If item is first or last move next focus to header\n  if ((dir === 1 && current === items.at(-1)) || (dir === -1 && current === items.at(0))) {\n    titleBtn?.focus();\n    return;\n  }\n  // if Arrow up on header element focus to its last item\n  if (dir === -1 && isHeader) {\n    items.at(-1)?.focus();\n    return;\n  }\n  const next = items[(currIdx + dir + items.length) % items.length];\n  next.focus();\n\n  if (next.matches('[aria-haspopup=\"true\"]')) {\n    const collapsed = next.matches('[aria-expanded=\"false\"]');\n    open({ triggerEl: next });\n    // Focus on last item of the dropdown if arrow up\n    if (dir === -1 && collapsed) {\n      const hasHeadline = next.parentElement.querySelector('.feds-menu-items');\n      const dropdownItems = hasHeadline ? nestedFocusables(next.parentElement) : focusables(next.parentElement.querySelector('.feds-popup'));\n      dropdownItems.at(-1)?.focus();\n    }\n  }\n}\n\nclass LocalNavItem {\n  constructor() {\n    this.localNav = document.querySelector(selectors.localNav);\n    this.localNavTrigger = this.localNav?.querySelector(selectors.localNavTitle);\n    this.exitLink = this.localNav?.querySelector(selectors.localNavExit);\n    this.addEventListeners();\n  }\n\n  handleKeyDown = (e) => {\n    const { code, target } = e;\n    const isHeadline = target.classList.contains(selectors.headline.slice(1));\n    switch (code) {\n      case 'Space':\n      case 'Enter':\n        e.stopPropagation();\n        e.preventDefault();\n        if (isHeadline) {\n          trigger({ element: target, event: e, type: 'headline' });\n        } else {\n          e.target.click();\n        }\n        break;\n      case 'Escape': // close on escape\n        e.preventDefault();\n        if (this.localNav.classList.contains(selectors.localNavActive.slice(1))) {\n          this.localNavTrigger?.click();\n          this.localNavTrigger?.focus();\n        }\n        break;\n      case 'ArrowDown':\n      case 'ArrowUp': {\n        e.stopPropagation();\n        e.preventDefault();\n        const dir = code === 'ArrowDown' ? +1 : -1;\n        navigate(target, dir);\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  addEventListeners = () => {\n    this.localNav?.addEventListener('keydown', this.handleKeyDown);\n    this.exitLink?.addEventListener('focus', (e) => {\n      e.preventDefault();\n      this.localNavTrigger?.focus();\n    });\n  };\n}\n\nexport default LocalNavItem;\n"],"names":["p","t","querySelectorAll","m","filter","e","a","closest","s","previousElementSibling","getAttribute","f","triggerEl","arguments","length","undefined","items","curr","_document$activeEleme","document","o","localNavItems","querySelector","expandedPopupTrigger","activeElement","localNavItem","indexOf","prev","d","next","u","openTrigger","g","n","hasAttribute","preventDefault","r","classList","contains","localNav","add","c","element","type","y","children","flatMap","matches","concat","at","focus","_a$at","l","_at","v","parentElement","x","constructor","_this$localNav2","_this$localNav3","_defineProperty","_this$localNavTrigger","_this$localNavTrigger2","code","target","headline","slice","stopPropagation","event","click","this","localNavActive","localNavTrigger","_this$localNav","_this$exitLink","addEventListener","handleKeyDown","exitLink","_this$localNavTrigger3","localNavTitle","localNavExit","addEventListeners"],"sourceRoot":""}