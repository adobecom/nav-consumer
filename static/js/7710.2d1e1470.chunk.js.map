{"version":3,"file":"static/js/7710.2d1e1470.chunk.js","mappings":"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","sources":["../node_modules/@adobecom/standalone-feds/dist|lazy|/^.*//deps//budoux/-index/-ja/.min/.js$/|referencedExports: [[\"loadDefaultJapaneseParser\"]]|groupOptions: {}|strict namespace object","../node_modules/@adobecom/standalone-feds/dist|lazy|/^.*//deps//bw2/.min/.js$/|groupOptions: {}|strict namespace object","../node_modules/@adobecom/features/japanese-word-wrap.js"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8703;\nmodule.exports = webpackEmptyAsyncContext;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 5397;\nmodule.exports = webpackEmptyAsyncContext;","/* eslint-disable no-console */\nimport { getMetadata } from '../utils/utils.js';\n\nconst hasTextNode = (element) => [...element.childNodes]\n  .some(({ nodeType, textContent }) => nodeType === Node.TEXT_NODE && textContent.trim() !== '');\n\nfunction findTextElements(element = document.body) {\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'header' || tagName === 'footer'\n    || element.classList.contains('jpwordwrap-disabled')\n  ) {\n    return [];\n  }\n\n  return Array.from(element.children).reduce((result, child) => (\n    hasTextNode(child)\n      ? [...result, child]\n      : [...result, ...findTextElements(child)]\n  ), []);\n}\n\n/**\n * Update the model to control line breaks occurring for the specified word.\n */\nfunction updateParserModel(parser, pattern, score, markerSymbol = '#') {\n  const markerPos = pattern.indexOf(markerSymbol);\n  if (markerPos === -1) {\n    console.warn('No marker symbol found in the line break pattern string');\n    return;\n  }\n\n  if (markerPos !== pattern.lastIndexOf('#')) {\n    console.warn('Two or more marker symbols cannot be specified. Only the first marker is applied');\n  }\n\n  const former = pattern.slice(Math.max(markerPos - 3, 0), markerPos);\n  const latter = pattern.slice(markerPos + 1, Math.min(markerPos + 4, pattern.length));\n\n  if (former.length < 2 || latter.length < 2) {\n    console.warn('At least two characters must be specified before and after the marker symbol');\n    return;\n  }\n\n  if (former.length === 3) {\n    parser.model.set(`TW1:${former}`, score);\n  } else if (former.length === 2) {\n    parser.model.set(`BW1:${former}`, score);\n  }\n\n  if (latter.length === 3) {\n    parser.model.set(`TW4:${latter}`, score);\n  } else if (latter.length === 2) {\n    parser.model.set(`BW3:${latter}`, score);\n  }\n}\n\nfunction hasFlexOrGrid(element) {\n  const elStyles = getComputedStyle(element);\n\n  return (elStyles.display === 'flex' || elStyles.display === 'grid');\n}\n\nfunction isFirefox() {\n  return navigator.userAgent.includes('Firefox');\n}\n\n/**\n * Check if a word wrap has been applied to an element.\n */\nexport function isWordWrapApplied(element) {\n  return !!element.querySelector('wbr');\n}\n\n/**\n * Check if a balanced word wrap has been applied to an element.\n */\nexport function isBalancedWordWrapApplied(element) {\n  return !!element.querySelector('wbr[class^=jpn-balanced-wbr]');\n}\n\n/**\n * Apply smart line-breaking algorithm depending on the given options.\n */\nexport async function applyJapaneseLineBreaks(config, options = {}) {\n  const { miloLibs, codeRoot } = config;\n  const {\n    scopeArea = document,\n    budouxThres = 2000,\n    bwEnabled = false,\n    budouxExcludeSelector = null,\n    bwExcludeSelector = 'p',\n    lineBreakOkPatterns = [],\n    lineBreakNgPatterns = [],\n  } = options;\n  const base = miloLibs || codeRoot;\n\n  // The thresould value to control word break granularity for long semantic blocks.\n  const { loadDefaultJapaneseParser } = await import(`${base}/deps/budoux-index-ja.min.js`);\n  const parser = loadDefaultJapaneseParser();\n\n  // Find elements that contains a text node directly under its child node.\n  const textElements = findTextElements(\n    scopeArea instanceof Document ? scopeArea.body : scopeArea,\n  );\n  const budouxExcludeElements = new Set();\n  const bwExcludeElements = new Set();\n\n  // Find BudouX disabled elements\n  if (budouxExcludeSelector) {\n    scopeArea.querySelectorAll(budouxExcludeSelector).forEach((el) => {\n      budouxExcludeElements.add(el);\n    });\n  }\n\n  // Find Blanced Word Wrap disabled elements\n  if (bwEnabled && bwExcludeSelector) {\n    scopeArea.querySelectorAll(bwExcludeSelector).forEach((el) => {\n      bwExcludeElements.add(el);\n    });\n  }\n\n  // Update model based on given patterns\n  const SCORE = Number.MAX_VALUE;\n  lineBreakOkPatterns.forEach((p) => {\n    updateParserModel(parser, p, SCORE);\n  });\n  lineBreakNgPatterns.forEach((p) => {\n    updateParserModel(parser, p, -SCORE);\n  });\n\n  // Apply budoux to target selector\n  textElements.forEach((el) => {\n    if (\n      budouxExcludeElements.has(el)\n      || isWordWrapApplied(el)\n      || (isFirefox() && hasFlexOrGrid(el))\n      || (el.lang && el.lang !== 'ja')\n    ) return;\n    parser.applyElement(el, { threshold: budouxThres });\n  });\n\n  if (bwEnabled) {\n    const BalancedWordWrapper = (await import(`${base}/deps/bw2.min.js`)).default;\n    const bw2 = new BalancedWordWrapper();\n    // Apply balanced word wrap to target selector\n    textElements.forEach((el) => {\n      if (\n        bwExcludeElements.has(el)\n        || isBalancedWordWrapApplied(el)\n        || (isFirefox() && hasFlexOrGrid(el))\n      ) return;\n      bw2.applyElement(el);\n    });\n  }\n}\n\n/**\n * Apply smart line-breaking algorithm by inserting <wbr> between semantic blocks.\n * This allows browsers to break japanese sentences correctly.\n */\nexport default async function controlJapaneseLineBreaks(config, scopeArea = document) {\n  const disabled = getMetadata('jpwordwrap:disabled') === 'true' || false;\n  const budouxThres = Number(getMetadata('jpwordwrap:budoux-thres')) || 2000;\n  const budouxExcludeSelector = getMetadata('jpwordwrap:budoux-exclude-selector');\n  const bwEnabled = getMetadata('jpwordwrap:bw-enabled') === 'true' || false;\n  const bwExcludeSelector = getMetadata('jpwordwrap:bw-exclude-selector') || 'p';\n  const lineBreakOkPatterns = (getMetadata('jpwordwrap:line-break-ok') || '').split(',');\n  const lineBreakNgPatterns = (getMetadata('jpwordwrap:line-break-ng') || '').split(',');\n\n  if (disabled) return;\n\n  await applyJapaneseLineBreaks(config, {\n    scopeArea,\n    budouxThres,\n    budouxExcludeSelector,\n    bwEnabled,\n    bwExcludeSelector,\n    lineBreakOkPatterns,\n    lineBreakNgPatterns,\n  });\n}\n"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","A","childNodes","some","_ref","nodeType","t","textContent","n","Node","TEXT_NODE","trim","y","arguments","length","undefined","document","body","tagName","toLowerCase","classList","contains","Array","from","children","reduce","s","h","o","indexOf","console","warn","lastIndexOf","l","slice","Math","max","a","min","model","set","concat","E","getComputedStyle","display","g","navigator","userAgent","includes","B","querySelector","W","T","miloLibs","codeRoot","scopeArea","budouxThres","bwEnabled","budouxExcludeSelector","c","bwExcludeSelector","i","lineBreakOkPatterns","k","lineBreakNgPatterns","j","p","loadDefaultJapaneseParser","S","f","b","Document","m","Set","w","querySelectorAll","forEach","r","add","x","Number","MAX_VALUE","has","lang","applyElement","threshold","N","default","u","O","d","split"],"sourceRoot":""}