{"version":3,"file":"static/js/6508.785a4b63.chunk.js","mappings":"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","sources":["../node_modules/@adobecom/blocks/global-navigation/features/profile/dropdown.js"],"sourcesContent":["import { getConfig, getFedsPlaceholderConfig } from '../../../../utils/utils.js';\nimport { toFragment, trigger, closeAllDropdowns, logErrorFor } from '../../utilities/utilities.js';\nimport { replaceKeyArray } from '../../../../features/placeholders.js';\n\nconst getLanguage = (ietfLocale) => {\n  if (!ietfLocale.length) return 'en';\n\n  const nonStandardLocaleMap = { 'no-NO': 'nb' };\n\n  if (nonStandardLocaleMap[ietfLocale]) {\n    return nonStandardLocaleMap[ietfLocale];\n  }\n\n  return ietfLocale.split('-')[0];\n};\n\nconst decorateProfileLink = (service, path = '') => {\n  const defaultServiceUrls = {\n    adminconsole: 'https://adminconsole.adobe.com',\n    account: 'https://account.adobe.com',\n  };\n\n  if (!service.length || !defaultServiceUrls[service]) return '';\n\n  let serviceUrl;\n  const { env } = getConfig();\n\n  if (!env?.[service]) {\n    serviceUrl = defaultServiceUrls[service];\n  } else {\n    serviceUrl = new URL(defaultServiceUrls[service]);\n    serviceUrl.hostname = env[service];\n  }\n\n  return `${serviceUrl}${path}`;\n};\n\nconst decorateAction = (label, path) => toFragment`<li><a class=\"feds-profile-action\" href=\"${decorateProfileLink('adminconsole', path)}\">${label}</a></li>`;\n\nclass ProfileDropdown {\n  constructor({\n    rawElem,\n    decoratedElem,\n    avatar,\n    sections,\n    buttonElem,\n    openOnInit,\n  } = {}) {\n    this.placeholders = {};\n    this.profileData = {};\n    this.avatar = avatar;\n    this.buttonElem = buttonElem;\n    this.decoratedElem = decoratedElem;\n    this.sections = sections;\n    this.openOnInit = openOnInit;\n    this.localMenu = rawElem.querySelector('h5')?.parentElement;\n    logErrorFor(this.init.bind(this), 'ProfileDropdown.init()', 'gnav-profile', 'e');\n  }\n\n  async init() {\n    await this.getData();\n    this.setButtonLabel();\n    this.dropdown = this.decorateDropdown();\n    this.addEventListeners();\n\n    if (this.openOnInit) trigger({ element: this.buttonElem });\n\n    this.decoratedElem.append(this.dropdown);\n  }\n\n  async getData() {\n    [\n      [\n        this.placeholders.profileButton,\n        this.placeholders.signOut,\n        this.placeholders.viewAccount,\n        this.placeholders.manageTeams,\n        this.placeholders.manageEnterprise,\n        this.placeholders.profileAvatar,\n      ],\n      { displayName: this.profileData.displayName, email: this.profileData.email },\n    ] = await Promise.all([\n      replaceKeyArray(\n        ['profile-button', 'sign-out', 'view-account', 'manage-teams', 'manage-enterprise', 'profile-avatar'],\n        getFedsPlaceholderConfig(),\n      ),\n      window.adobeIMS.getProfile(),\n    ]);\n  }\n\n  setButtonLabel() {\n    if (this.buttonElem) this.buttonElem.setAttribute('aria-label', this.profileData.displayName);\n  }\n\n  decorateDropdown() {\n    const { locale } = getConfig();\n    const lang = getLanguage(locale.ietf);\n\n    // TODO: the account name and email might need a bit of adaptive behavior;\n    // historically we shrunk the font size and displayed the account name on two lines;\n    // the email had some special logic as well;\n    // for MVP, we took a simpler approach (\"Some very long name, very l...\")\n    this.avatarElem = toFragment`<img\n      data-cs-mask\n      class=\"feds-profile-img\"\n      src=\"${this.avatar}\"\n      tabindex=\"0\"\n      alt=\"${this.placeholders.profileAvatar}\"\n      data-url=\"${decorateProfileLink('account', `profile?lang=${lang}`)}\"></img>`;\n    return toFragment`\n      <div id=\"feds-profile-menu\" class=\"feds-profile-menu\">\n        <a\n          href=\"${decorateProfileLink('account', `?lang=${lang}`)}\"\n          class=\"feds-profile-header\"\n          daa-ll=\"${this.placeholders.viewAccount}\"\n          aria-label=\"${this.placeholders.viewAccount}\"\n        >\n          ${this.avatarElem}\n          <div class=\"feds-profile-details\">\n            <p data-cs-mask class=\"feds-profile-name\">${this.profileData.displayName}</p>\n            <p data-cs-mask class=\"feds-profile-email\">${this.decorateEmail(this.profileData.email)}</p>\n            <p class=\"feds-profile-account\">${this.placeholders.viewAccount}</p>\n          </div>\n        </a>\n        ${this.localMenu ? this.decorateLocalMenu() : ''}\n        <ul class=\"feds-profile-actions\">\n          ${this.sections?.manage?.items?.team?.id ? decorateAction(this.placeholders.manageTeams, '/team') : ''}\n          ${this.sections?.manage?.items?.enterprise?.id ? decorateAction(this.placeholders.manageEnterprise) : ''}\n          ${this.decorateSignOut()}\n        </ul>\n      </div>\n    `;\n  }\n\n  decorateEmail() {\n    const maxCharacters = 12;\n    const emailParts = this.profileData.email.split('@');\n    const username = emailParts[0].length <= maxCharacters\n      ? emailParts[0]\n      : `${emailParts[0].slice(0, maxCharacters)}…`;\n    const domainArr = emailParts[1].split('.');\n    const tld = domainArr.pop();\n    let domain = domainArr.join('.');\n    domain = domain.length <= maxCharacters\n      ? domain\n      : `${domain.slice(0, maxCharacters)}…`;\n\n    return `${username}@${domain}.${tld}`;\n  }\n\n  decorateLocalMenu() {\n    if (this.localMenu) this.localMenu.classList.add('feds-local-menu');\n\n    return this.localMenu;\n  }\n\n  decorateSignOut() {\n    const signOutLink = toFragment`\n      <li>\n        <a href=\"#\" class=\"feds-profile-action\" daa-ll=\"${this.placeholders.signOut}\">${this.placeholders.signOut}</a>\n      </li>\n    `;\n\n    signOutLink.addEventListener('click', (e) => {\n      e.preventDefault();\n      window.dispatchEvent(new Event('feds:signOut'));\n      window.adobeIMS.signOut();\n    });\n\n    return signOutLink;\n  }\n\n  addEventListeners() {\n    this.buttonElem.addEventListener('click', (e) => trigger({ element: this.buttonElem, event: e }));\n    this.buttonElem.addEventListener('keydown', (e) => e.code === 'Escape' && closeAllDropdowns());\n    this.dropdown.addEventListener('keydown', (e) => e.code === 'Escape' && closeAllDropdowns());\n    this.avatarElem.addEventListener('click', (e) => {\n      e.preventDefault();\n      window.location.assign(this.avatarElem.dataset?.url);\n    });\n  }\n}\n\nexport default ProfileDropdown;\n"],"names":["h","a","e","arguments","length","undefined","t","adminconsole","account","s","env","i","d","URL","hostname","concat","g","decorateAction","n","_templateObject","_taggedTemplateLiteral","b","constructor","_e$querySelector","rawElem","decoratedElem","avatar","sections","buttonElem","o","openOnInit","l","this","placeholders","profileData","localMenu","querySelector","parentElement","u","init","bind","getData","setButtonLabel","dropdown","decorateDropdown","addEventListeners","c","element","append","profileButton","signOut","viewAccount","manageTeams","manageEnterprise","profileAvatar","displayName","email","Promise","all","m","f","window","adobeIMS","getProfile","setAttribute","_this$sections","_this$sections2","locale","split","E","ietf","avatarElem","_templateObject2","_templateObject3","decorateEmail","decorateLocalMenu","manage","items","team","id","enterprise","decorateSignOut","slice","pop","join","classList","add","_templateObject4","addEventListener","preventDefault","dispatchEvent","Event","event","code","r","_this$avatarElem$data","location","assign","dataset","url"],"sourceRoot":""}