{"version":3,"file":"static/js/4613.6ad63797.chunk.js","mappings":"sHAAA,SAASA,EAAuBC,EAAGC,GACjC,OAAOA,IAAMA,EAAID,EAAEE,MAAM,IAAKC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAG,CACrEM,IAAK,CACHC,MAAOJ,OAAOC,OAAOH,MAG3B,C,+ECNAO,E,wDAGMC,EACC,kBADDA,EAEO,iBAFPA,EAIS,gCAJTA,EAKW,6BALXA,EAMO,yBANPA,EAOE,mBAPFA,EAQK,uBAGLC,EAAoBT,IAExB,GADuF,UAAlEU,EAAAA,EAAAA,GAAYF,KAAiBE,EAAAA,EAAAA,GAAYF,MAC1CR,EAAa,OACjC,IAAMW,EAAiB,CACrB,WAAY,qBACZ,QAAS,iBACTC,gBAAiB,IAGnBZ,EAAYa,iBAAiB,WAAWC,SAAQ,CAACC,EAAMC,EAAKC,KAC1D,IAAMC,EAAOH,EAAKI,cAAc,KAC1BC,EAAOF,EAAOA,EAAKG,UAAUC,OAAS,IAAIP,EAAKQ,YAAYC,QAAQC,IAAA,IAAAC,EAAA,QAAe,QAANA,EAACD,EAAKE,eAAA,IAAAD,GAALA,EAAAE,KAAAH,EAAe,4BAA4B,IAACI,KAAKJ,GAASA,EAAKK,YAAYR,SAAQS,KAAK,IACvKC,EAAU,OAAAd,QAAA,IAAAA,OAAA,EAAAA,EAAMe,MACfD,GAAWhB,IAAQC,EAAKiB,OAAS,IACpCF,EAAUG,OAAOC,SAASH,MAE5BtB,EAAeC,gBAAgByB,KAAK,CAClC,QAAS,WACTC,SAAUtB,EAAM,EAChBuB,KAAAnB,EACAoB,KAAMR,GAEV,IACA,IAAMS,GAASC,EAAAA,EAAAA,GAAAnC,IAAAA,GAAUoC,EAAAA,EAAAA,GAAA,uCAExB,gBAF8DC,KAAKC,UAClElC,IAEFmC,SAASC,KAAKC,OAAOP,EACvB,EAEMQ,EAAqBjD,IAAY,IAAAkD,EAAAC,EACrC,IAAKnD,EAAS,OAAO,KACrB,IAAMD,EAAKC,EAAQmB,cAAc,MAC3BR,GAAYD,EAAAA,EAAAA,GAAYF,IAC1BG,GAAmD,QAAtCD,EAAAA,EAAAA,GAAYF,KAC3BT,EAAGiD,QAAON,EAAAA,EAAAA,GAAAU,IAAAA,GAAAtD,EAAAA,EAAAA,GAAA,mDAEJa,GAAamC,SAASO,QAK9B,IAAMZ,GAAkD,QAAlCS,GAAAxC,EAAAA,EAAAA,GAAYF,UAAsB,IAAA0C,OAAA,EAAlCA,EAClBI,cACDC,MAAM,KACN1B,KAAKZ,GAASA,EAAKK,WAAW,GAEjCvB,EAAGc,iBAAiB,MAAMC,SAAQ,CAACG,EAAIC,KAAU,IAAAsC,EAC3Cf,EAAcgB,SAAY,QAAZD,EAASvC,EAAGI,iBAAA,IAAAmC,OAAA,EAAHA,EAAcF,cAAchC,SAASL,EAAGyC,SAC/DxC,EAAQ,GAAGD,EAAG0C,mBAAmB,aAAc,oCACrD,IAEA,IAAM5C,EAAcf,EAAQ4D,UAAUC,SAAS,gBAAkB,gBAAkB,GAE7E7C,GAAc0B,EAAAA,EAAAA,GAAAoB,IAAAA,GAAAhE,EAAAA,EAAAA,GAAA,6IAEciB,EAAwChB,GAG1E,OAAkC,QAAlCoD,EAAApD,EAAGoB,cAAc,0BAAiB,IAAAgC,GAAlCA,EAAqCY,aAAa,eAAgB,QAC3D/C,CACT,EAEMgD,EAAiBC,UACrB,IAAMlE,EAAUC,IAAM0C,EAAAA,EAAAA,GAAAwB,IAAAA,GAAApE,EAAAA,EAAAA,GAAA,4BAChBa,GAAMwD,EAAAA,EAAAA,IAAgBzD,EAAAA,EAAAA,GAAYF,IACxC,IAAKG,EAAK,OAAO,KACjB,IAAI,IAAAyD,EAEF,IAAMrD,cADasD,MAAA,GAAAC,OAAS3D,EAAG,iBACP4D,OAClBvD,GAAO,IAAIwD,WAAYC,gBAAgB1D,EAAM,aAAa2D,KAChE,OAA0B,QAA1BN,EAAArE,EAAQoB,cAAc,aAAI,IAAAiD,GAA1BA,EAA6BO,WAAW3D,EAAKH,iBAAiB,OACvDoC,EAAkBlD,EAC3B,CAAE,MAAO0C,GACP,OAAAmC,EAAAA,EAAAA,GAAQ,CAAE7E,EAAA0C,EAAGoC,QAAS,mCAAoCC,KAAM,mBAAoBC,UAAW,MACxF,IACT,GAGIC,EAAUC,KAAM,IAAAC,EACpB,GAAsC,QAAlCxE,EAAAA,EAAAA,GAAYF,GAA4B,OAAO,KACnD,IAAMR,GAAO0C,EAAAA,EAAAA,GAAAyC,IAAAA,GAAArF,EAAAA,EAAAA,GAAA,iBACPC,EAAQ+C,SAASV,SAASgD,SAC7BC,SAAqB,QAAZH,GAAAI,EAAAA,EAAAA,KAAYC,cAAA,IAAAL,OAAA,EAAZA,EAAoBM,SAAU,GAAK,IAC5CjC,MAAM,KACN/B,QAAQb,GAAMA,IAEjB,IAAK,IAAIA,EAAI,EAAGA,EAAIZ,EAAMmC,OAAQvB,GAAK,EACrCX,EAAKgD,QAAON,EAAAA,EAAAA,GAAA+C,IAAAA,GAAA3F,EAAAA,EAAAA,GAAA,sEAEIC,EAAME,MAAM,EAAGU,EAAI,GAAGoB,KAAK,KAAShC,EAAMY,GAAG+E,WAAW,IAAK,OAI/E,OAAOzC,GAAkBP,EAAAA,EAAAA,GAAAiD,IAAAA,GAAA7F,EAAAA,EAAAA,GAAA,qBAAkBE,GAC7C,EAEA,eAAO4F,EAA4B5F,GACjC,IACE,IAAMD,QAAsBiE,EAAehE,IAAOiD,EAAkBjD,IAAOgF,IAC3E,OAAAvE,EAAiBV,GACVA,CACT,CAAE,MAAOA,GACP,OAAA6E,EAAAA,EAAAA,GAAQ,CAAE7E,IAAG8E,QAAS,+BAAgCC,KAAM,mBAAoBC,UAAW,MACpF,IACT,CACF,C","sources":["../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/@adobecom/blocks/global-navigation/features/breadcrumbs/breadcrumbs.js"],"sourcesContent":["function _taggedTemplateLiteral(e, t) {\n  return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, {\n    raw: {\n      value: Object.freeze(t)\n    }\n  }));\n}\nexport { _taggedTemplateLiteral as default };","import { getMetadata, getConfig, getFederatedUrl } from '../../../../utils/utils.js';\nimport { toFragment, lanaLog } from '../../utilities/utilities.js';\n\nconst metadata = {\n  seo: 'breadcrumbs-seo',\n  seoLegacy: 'breadcrumb-seo',\n  fromFile: 'breadcrumbs-from-file',\n  showCurrent: 'breadcrumbs-show-current-page',\n  hiddenEntries: 'breadcrumbs-hidden-entries',\n  pageTitle: 'breadcrumbs-page-title',\n  base: 'breadcrumbs-base',\n  fromUrl: 'breadcrumbs-from-url',\n};\n\nconst setBreadcrumbSEO = (breadcrumbs) => {\n  const seoDisabled = (getMetadata(metadata.seo) || getMetadata(metadata.seoLegacy)) === 'off';\n  if (seoDisabled || !breadcrumbs) return;\n  const breadcrumbsSEO = {\n    '@context': 'https://schema.org',\n    '@type': 'BreadcrumbList',\n    itemListElement: [],\n  };\n\n  breadcrumbs.querySelectorAll('ul > li').forEach((item, idx, list) => {\n    const link = item.querySelector('a');\n    const name = link ? link.innerText.trim() : [...item.childNodes].filter((node) => !node.matches?.('span[aria-hidden=\"true\"]')).map((node) => node.textContent.trim()).join('');\n    let itemUrl = link?.href;\n    if (!itemUrl && idx === list.length - 1) {\n      itemUrl = window.location.href;\n    }\n    breadcrumbsSEO.itemListElement.push({\n      '@type': 'ListItem',\n      position: idx + 1,\n      name,\n      item: itemUrl,\n    });\n  });\n  const script = toFragment`<script type=\"application/ld+json\">${JSON.stringify(\n    breadcrumbsSEO,\n  )}</script>`;\n  document.head.append(script);\n};\n\nconst createBreadcrumbs = (element) => {\n  if (!element) return null;\n  const ul = element.querySelector('ul');\n  const pageTitle = getMetadata(metadata.pageTitle);\n  if (pageTitle || getMetadata(metadata.showCurrent) === 'on') {\n    ul.append(toFragment`\n      <li>\n        ${pageTitle || document.title}\n      </li>\n    `);\n  }\n\n  const hiddenEntries = getMetadata(metadata.hiddenEntries)\n    ?.toLowerCase()\n    .split(',')\n    .map((item) => item.trim()) || [];\n\n  ul.querySelectorAll('li').forEach((li, index) => {\n    if (hiddenEntries.includes(li.innerText?.toLowerCase().trim())) li.remove();\n    if (index > 0) li.insertAdjacentHTML('afterbegin', '<span aria-hidden=\"true\">/</span>');\n  });\n\n  const noTransform = element.classList.contains('no-transform') ? ' no-transform' : '';\n\n  const breadcrumbs = toFragment`\n    <div class=\"feds-breadcrumbs-wrapper\">\n      <nav class=\"feds-breadcrumbs${noTransform}\" aria-label=\"Breadcrumb\">${ul}</nav>\n    </div>\n  `;\n  ul.querySelector('li:last-of-type')?.setAttribute('aria-current', 'page');\n  return breadcrumbs;\n};\n\nconst createWithBase = async (el) => {\n  const element = el || toFragment`<div><ul></ul></div>`;\n  const url = getFederatedUrl(getMetadata(metadata.base));\n  if (!url) return null;\n  try {\n    const resp = await fetch(`${url}.plain.html`);\n    const text = await resp.text();\n    const base = new DOMParser().parseFromString(text, 'text/html').body;\n    element.querySelector('ul')?.prepend(...base.querySelectorAll('li'));\n    return createBreadcrumbs(element);\n  } catch (e) {\n    lanaLog({ e, message: 'Breadcrumbs failed fetching base', tags: 'gnav-breadcrumbs', errorType: 'i' });\n    return null;\n  }\n};\n\nconst fromUrl = () => {\n  if (getMetadata(metadata.fromUrl) !== 'on') return null;\n  const list = toFragment`<ul></ul>`;\n  const paths = document.location.pathname\n    .replace((getConfig().locale?.prefix || ''), '')\n    .split('/')\n    .filter((n) => n);\n\n  for (let i = 0; i < paths.length; i += 1) {\n    list.append(toFragment`\n      <li>\n        <a href=\"/${paths.slice(0, i + 1).join('/')}\">${paths[i].replaceAll('-', ' ')}</a>\n      </li>\n    `);\n  }\n  return createBreadcrumbs(toFragment`<div>${list}</div>`);\n};\n\nexport default async function init(el) {\n  try {\n    const breadcrumbsEl = await createWithBase(el) || createBreadcrumbs(el) || fromUrl();\n    setBreadcrumbSEO(breadcrumbsEl);\n    return breadcrumbsEl;\n  } catch (e) {\n    lanaLog({ e, message: 'Breadcrumbs failed rendering', tags: 'gnav-breadcrumbs', errorType: 'e' });\n    return null;\n  }\n}\n"],"names":["_taggedTemplateLiteral","e","t","slice","Object","freeze","defineProperties","raw","value","y","i","v","s","r","itemListElement","querySelectorAll","forEach","c","l","n","u","querySelector","w","innerText","trim","childNodes","filter","m","_m$matches","matches","call","map","textContent","join","d","href","length","window","location","push","position","name","item","o","a","f","JSON","stringify","document","head","append","b","_s","_e$querySelector","_templateObject","title","toLowerCase","split","_n$innerText","includes","remove","insertAdjacentHTML","classList","contains","_templateObject2","setAttribute","L","async","_templateObject3","g","_e$querySelector2","fetch","concat","text","DOMParser","parseFromString","body","prepend","p","message","tags","errorType","S","fromUrl","_h$locale","_templateObject4","pathname","replace","h","locale","prefix","_templateObject5","replaceAll","_templateObject6","E"],"sourceRoot":""}